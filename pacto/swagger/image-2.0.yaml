swagger: 2
info:
  title: Cloud Images
  version: unknown
consumes:
- application/json
produces:
- application/json
paths:
  /images:
    get:
      operationId: listImages
      summary: List images
      description: Lists public virtual machine (VM) images.
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |
              {
                 "images":
                 [
                    {
                       "id":"da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
                       "name":"cirros-0.3.0-x86_64-uec-ramdisk",
                       "status":"active",
                       "visibility":"public",
                       "size":2254249,
                       "checksum":"2cec138d7dae2aa59038ef8c9aec2390",
                       "tags":[
                          "ping",
                          "pong"
                       ],
                       "created_at":"2012-08-10T19:23:50Z",
                       "updated_at":"2012-08-10T19:23:50Z",
                       "self":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
                       "file":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
                       "schema":"/v2/schemas/image"},
                    {
                       "id":"0d5bcbc7-b066-4217-83f4-7111a60a399a",
                       "name":"cirros-0.3.0-x86_64-uec",
                       "status":"active",
                       "visibility":"public",
                       "size":25165824,
                       "checksum":"2f81976cae15c16ef0010c51e3a6c163",
                       "tags":[ ],
                       "created_at":"2012-08-10T19:23:50Z",
                       "updated_at":"2012-08-10T19:23:50Z",
                       "self":"/v2/images/0d5bcbc7-b066-4217-83f4-7111a60a399a",
                       "file":"/v2/images/0d5bcbc7-b066-4217-83f4-7111a60a399a/file",
                       "schema":"/v2/schemas/image"},
                    {
                       "id":"e6421c88-b1ed-4407-8824-b57298249091",
                       "name":"cirros-0.3.0-x86_64-uec-kernel",
                       "status":"active",
                       "visibility":"public",
                       "size":4731440,
                       "checksum":"cfb203e7267a28e435dbcb05af5910a9",
                       "tags":[ ],
                       "created_at":"2012-08-10T19:23:49Z",
                       "updated_at":"2012-08-10T19:23:49Z",
                       "self":"/v2/images/e6421c88-b1ed-4407-8824-b57298249091",
                       "file":"/v2/images/e6421c88-b1ed-4407-8824-b57298249091/file",
                       "schema":"/v2/schemas/image"}
                 ],
                 "first":"/v2/images?limit=3",
                 "next":"/v2/images?limit=3&marker=e6421c88-b1ed-4407-8824-b57298249091",
                 "schema":"/v2/schemas/images"
              }
      parameters:
      - name: limit
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Requests a specific page size. Expect a response
          to a
                      limited request to return between zero items and the
                      number specified. The typical pattern for using the
                          <p>limit</p> and
                          <p>marker</p> parameters is to make an
                      initial limited request and then to use the ID of the last
                      image from the response as the
                          <p>marker</p> parameter in a
                      subsequent limited request.</p>
                               </p>
      - name: marker
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Specifies the ID of the last-seen image. The
          typical
                      pattern for using the <p>limit</p> and
                          <p>marker</p> parameters is to make an
                      initial limited request and then to use the ID of the last
                      image from the response as the
                          <p>marker</p> parameter in a
                      subsequent limited request.</p>
                               </p>
      - name: name
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Filter parameter that specifies the name of the
          image as
                      a string.</p>
                               </p>
      - name: visibility
        required: false
        in: query
        description: >
          <p>
                                  <p>Filter parameter that specifies image visibility
          as
                      either <code>public</code> or <code>private</code>.</p>
                               </p>
      - name: member_status
        required: false
        in: query
        description: >
          <p>
                                  <p>Filter parameter that shows images with the specified
                      member status. Valid values are <code>accepted</code>,
                          <code>pending</code>, <code>rejected</code>, and
                          <code>all</code>. The default is
                      <code>accepted</code>.</p>
                               </p>
      - name: owner
        required: false
        in: query
        description: >
          <p>
                                  <p>Filter parameter that shows images shared with
          me by the
                      specified tag.</p>
                               </p>
      - name: tag
        required: false
        in: query
        description: >
          <p>
                                  <p>Filter parameter that shows images with the specified
                      tag, where the owner is indicated by tenant ID.</p>
                               </p>
      - name: status
        required: false
        in: query
        description: >
          <p>
                                  <p>Filter parameter that species the image status
          as
                          <code>queued</code>, <code>saving</code>,
                          <code>active</code>, <code>killed</code>,
                          <code>deleted</code>, or
                      <code>pending_delete</code>.</p>
                               </p>
      - name: size_min
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Filter parameter that specifies the minimum size
          of the
                      image in bytes.</p>
                               </p>
      - name: size_max
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Filter parameter that specifies the maximum size
          of the
                      image in bytes.</p>
                               </p>
      - name: sort_key
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Sort key. All image attributes can be used as
          the sort
                      key, except <code>tags</code> and <code>link</code>
                      attributes. The default is <code>created_at</code>.</p>
                               </p>
      - name: sort_dir
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Sort direction. Valid values are <code>asc</code>
                      (ascending) and <code>desc</code> (descending). The
                      default is <code>desc</code>.</p>
                               </p>
  /images/{image_id}:
    get:
      operationId: getImage
      summary: Get image details
      description: 'Gets the details for the specified image. '
      produces:
      - application/json
      responses:
        200:
          description: |-
            200 response
          examples:
            application/json: |
              {
                 "id":"da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
                 "name":"cirros-0.3.0-x86_64-uec-ramdisk",
                 "status":"active",
                 "visibility":"public",
                 "size":2254249,
                 "checksum":"2cec138d7dae2aa59038ef8c9aec2390",
                 "tags":[
                    "ping",
                    "pong"
                 ],
                 "created_at":"2012-08-10T19:23:50Z",
                 "updated_at":"2012-08-10T19:23:50Z",
                 "self":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
                 "file":"/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
                 "schema":"/v2/schemas/image"
              }
    patch:
      operationId: updateImage
      summary: Update image
      description: 'Updates the specified image. '
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |
              {
                 "id":"e7db3b45-8db7-47ad-8109-3fb55c2c24fd",
                 "name":"Fedora 17",
                 "status":"queued",
                 "visibility":"public",
                 "tags": ["fedora", "beefy"],
                 "created_at":"2012-08-11T17:15:52Z",
                 "updated_at":"2012-08-11T17:15:52Z",
                 "self":"/v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd",
                 "file":"/v2/images/e7db3b45-8db7-47ad-8109-3fb55c2c24fd/file",
                 "schema":"/v2/schemas/image"
              }
      parameters:
      - name: op
        required: true
        in: body
        description: >
          <p>
                                  <p>The operation to be executed (<code>add</code>,
          <code>remove</code>, or
                                      <code>replace</code>).</p>
                              </p>
      - name: path
        required: true
        in: body
        description: >
          <p>
                                  <p>The location within the image where the operation
          is to be performed.</p>
                              </p>
      - name: value
        required: false
        in: body
        description: >
          <p>
                                  <p>The actual value to be added or replaced. It
          is not required for the <code>delete</code>
                                      operation.</p>
                              </p>
    delete:
      operationId: deleteImage
      summary: Delete image
      description: 'Deletes the specified image. '
      produces:
      - application/json
      responses:
        204:
          description: |-
            Delete request succeeded.
  /images/{image_id}/tags/{tag}:
    put:
      operationId: addImageTag
      summary: Add image tag
      description: 'Adds the specified tag to the specified image. '
      produces:
      - application/json
      responses:
        204:
          description: |-
            Request succeeded.
    delete:
      operationId: deleteImageTag
      summary: Delete image tag
      description: 'Deletes the specified tag from the image. '
      produces:
      - application/json
      responses:
        204:
          description: |-
            Delete request succeeded.
  /images/{image_id}/members:
    post:
      operationId: createImageMember
      summary: Create image member
      description: 'Adds the specified '
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |-
              {
                  "created_at": "2013-09-20T19:22:19Z",
                  "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
                  "member_id": "554433",
                  "schema": "/v2/schemas/member",
                  "status": "pending",
                  "updated_at": "2013-09-20T19:25:31Z"
              }
      parameters:
      - name: member
        required: true
        in: body
        description: >
          <p>
                                  <p>The member ID. This is the tenant ID of the user
          with whom the image is to be shared.</p>
                              </p>
    get:
      operationId: listImageMembers
      summary: List image members
      description: Returns collection of members (users) with whom the image has been
        shared.
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |-
              {
                  "members": [
                      {
                          "created_at": "2013-10-07T17:58:03Z",
                          "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
                          "member_id": "123456789",
                          "schema": "/v2/schemas/member",
                          "status": "pending",
                          "updated_at": "2013-10-07T17:58:03Z"
                      },
                      {
                          "created_at": "2013-10-07T17:58:55Z",
                          "image_id": "dbc999e3-c52f-4200-bedd-3b18fe7f87fe",
                          "member_id": "987654321",
                          "schema": "/v2/schemas/member",
                          "status": "accepted",
                          "updated_at": "2013-10-08T12:08:55Z"
                      }
                  ],
                  "schema": "/v2/schemas/members"
              }
      parameters:
      - name: visibility
        required: false
        in: query
        type: string
        description: "<p>\n                        <p>Filters images on visibility.\
          \ Options for visibility are\n                as follows:</p> \n       \
          \                 <p>\n                           <p>\n                \
          \              <p>\n                                 <code>shared</code>\n\
          \                              </p>\n                              <li>\n\
          \                                 <p>Shows images that are shared with the\
          \ user where the member status is\n                                    <p>accepted</p>.</p>\n\
          \                              </li>\n                           </p>\n\
          \                           <p>\n                              <p>\n   \
          \                              <code>private</code>\n                  \
          \            </p>\n                              <li>\n                \
          \                 <p>Shows images that the user owns.</p>\n            \
          \                  </li>\n                           </p>\n            \
          \               <p>\n                              <p>\n               \
          \                  <code>public</code>\n                              </p>\n\
          \                              <li>\n                                 <p>Shows\
          \ images that are public images, published by the cloud provider, and available\n\
          \                                to everyone. Public images do not have\
          \ members.</p>\n                              </li>\n                  \
          \         </p>\n                        </p>\n                     </p>\n"
      - name: member_status
        required: false
        in: query
        type: string
        description: "<p>\n                        <p>Filters images on any chosen\
          \ status. For example,\n                    <p>visibility=shared&amp;member_status=pending</p>\
          \ shows only images shared with the\n                user where the member\
          \ status is <p>pending</p>. Options for member_status are as follows:</p>\
          \ \n                        <p>\n                           <p>\n      \
          \                        <p>\n                                 <code>pending</code>\n\
          \                              </p>\n                              <li>\n\
          \                                 <p>Shows images where member_status is\
          \ <p>pending</p>.</p>\n                              </li>\n           \
          \                </p>\n                           <p>\n                \
          \              <p>\n                                 <code>accepted</code>\n\
          \                              </p>\n                              <li>\n\
          \                                 <p>Shows images where member_status is\
          \ <p>accepted</p>.</p>\n                              </li>\n          \
          \                 </p>\n                           <p>\n               \
          \               <p>\n                                 <code>rejected</code>\n\
          \                              </p>\n                              <li>\n\
          \                                 <p>Shows images where member_status is\
          \ <p>rejected</p>. </p>\n                              </li>\n         \
          \                  </p>\n                           <p>\n              \
          \                <p>\n                                 <code>all</code>\n\
          \                              </p>\n                              <li>\n\
          \                                 <p>Shows images regardless of member_status.\
          \ </p>\n                              </li>\n                          \
          \ </p>\n                        </p>\n                        <p>\n    \
          \                       <p>The member_status filter is ignored if the visibility\
          \ parameter is not set to\n                        \"shared\".</p>\n   \
          \                     </p>\n                     </p>\n"
      - name: owner
        required: false
        in: query
        type: string
        description: >
          <p>
                                  <p>Filters images on acceptance status only. For
          example,
                          <p>visibility=shared&amp;owner=&lt;OWNER_ID&gt;</p>
                      shows only images shared with this user by the user whose
                      tenant id is <p>OWNER_ID</p>.</p>
                                  <p>
                                     <p>The owner filter is ignored if the visibility
                          parameter is not set to "shared".</p>
                                  </p>
                               </p>
  /images/{image_id}/members/{member_id}:
    get:
      operationId: getImageMember
      summary: Get image member details
      description: 'Gets the details for the specified image member. '
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |-
              {
                  "created_at": "2014-02-20T04:15:17Z",
                  "image_id": "634985e5-0f2e-488e-bd7c-928d9a8ea82a",
                  "member_id": "348129",
                  "schema": "/v2/schemas/member",
                  "status": "pending",
                  "updated_at": "2014-02-20T04:15:17Z"
              }
    delete:
      operationId: deleteImageMember
      summary: Delete image member
      description: 'Deletes the specified '
      produces:
      - application/json
      responses:
        204:
          description: |-
            Delete request succeeded.
    put:
      operationId: updateImageMember
      summary: Update image member
      description: Sets the specified status for the specified member of the specified
        image.
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: |-
              {
                  "created_at": "2013-09-20T19:22:19Z",
                  "image_id": "a96be11e-8536-4910-92cb-de50aa19dfe6",
                  "member_id": "554433",
                  "schema": "/v2/schemas/member",
                  "status": "accepted",
                  "updated_at": "2013-09-20T20:15:31Z"
              }
      parameters:
      - name: status
        required: true
        in: body
        description: >
          <p>
                                  <p>The status to which this image member should
          be set. Valid values are as follows: <p>
                                          <p>
                                              <p>
                                              <code>pending</code>
                                           </p>
                                              <li>
                                                  <p>At creation, the member's status
          is set to pending. The image is not visible in
                                                      the member's image-list, but
          the member can still boot instances from the image.
                                                  </p>
                                              </li>
                                          </p>
                                          <p>
                                              <p>
                                              <code>accepted</code>
                                           </p>
                                              <li>
                                                  <p>The image is visible in the member's
          image-list. The member can boot instances
                                                      from the image. </p>
                                              </li>
                                          </p>
                                          <p>
                                              <p>
                                              <code>rejected</code>
                                           </p>
                                              <li>
                                                  <p>The member has decided that he
          or she does not want to see the image. The image
                                                      is not visible in the member's
          image-list, but the member can still boot
                                                      instances from the image. </p>
                                              </li>
                                          </p>
                                      </p>
                                  </p>
                              </p>
  /tasks:
    post:
      operationId: exportImage
      summary: Task to export image
      description: "Exports an image using an asynchronous task request. See the request\
        \ body for specific\n                details."
      produces:
      - application/json
      responses:
        201:
          description: |-
            Task export request succeeded.
          examples:
            application/json: "{\n    \"created_at\": \"2014-02-26T02:01:13Z\", \n\
              \    \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n    \"input\"\
              : \n    {\n        \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\"\
              , \n        \"receiving_swift_container\": \"exports\"\n    }, \n  \
              \  \"message\": \"None\", \n    \"owner\": \"00000123\", \n    \"schema\"\
              : \"/v2/schemas/task\", \n    \"self\": \"/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333\"\
              , \n    \"status\": \"pending\", \n    \"type\": \"export\", \n    \"\
              updated_at\": \"2014-02-26T02:01:13Z\"\n}"
      parameters:
      - name: type
        required: true
        in: body
        description: >
          <p>
                                  <p>The type of the task. Use <code>export</code>
          for task
                          exports.</p>
                               </p>
      - name: input
        required: true
        in: body
        description: >
          <p>
                                  <p>The container for export input parameters.</p>
                               </p>
      - name: image_uuid
        required: true
        in: body
        description: >
          <p>
                                  <p>The UUID for the exported image. You must own
          the image
                          or the export task will fail.</p>
                               </p>
      - name: receiving_swift_container
        required: true
        in: body
        description: >
          <p>
                                  <p>The Cloud Files container for the exported image.
          If the
                          container does not exist, the task fails. The task also
          fails if the container name contains
                          any of the following three characters: forward slash (<p>/</p>),
          question mark
                          (<p>?</p>) or period (<p>.</p>).</p>
                               </p>
    get:
      operationId: listTasks
      summary: List tasks
      description: Lists tasks.
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: "{\n    \"first\": \"/v2/tasks\", \n    \"schema\":\
              \ \"/v2/schemas/tasks\", \n    \"tasks\": [\n        {\n           \
              \ \"created_at\": \"2014-02-26T02:04:18Z\", \n            \"id\": \"\
              baef2134-9c33-47b9-9d63-c29a2a224715\", \n            \"owner\": \"\
              00000123\", \n            \"schema\": \"/v2/schemas/task\", \n     \
              \       \"self\": \"/v2/tasks/baef2134-9c33-47b9-9d63-c29a2a224715\"\
              , \n            \"status\": \"pending\", \n            \"type\": \"\
              export\", \n            \"updated_at\": \"2014-02-26T02:04:18Z\"\n \
              \       }, \n        {\n            \"created_at\": \"2014-02-26T02:01:13Z\"\
              , \n            \"id\": \"7bdc8ede-9098-4d79-9477-697f586cb333\", \n\
              \            \"owner\": \"00000123\", \n            \"schema\": \"/v2/schemas/task\"\
              , \n            \"self\": \"/v2/tasks/7bdc8ede-9098-4d79-9477-697f586cb333\"\
              , \n            \"status\": \"processing\", \n            \"type\":\
              \ \"export\", \n            \"updated_at\": \"2014-02-26T02:01:13Z\"\
              \n        }\n    ]\n}\n"
  /tasks/{taskID}:
    get:
      operationId: getTask
      summary: Get task details
      description: Gets the details for the specified task.
      produces:
      - application/json
      responses:
        200:
          description: |-
            Request succeeded.
          examples:
            application/json: "{\n    \"created_at\": \"2014-02-26T02:04:18Z\", \n\
              \    \"expires_at\": \"2014-02-28T02:25:12Z\", \n    \"id\": \"baef2134-9c33-47b9-9d63-c29a2a224715\"\
              , \n    \"input\": \n    {\n        \"image_uuid\": \"ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6\"\
              , \n        \"receiving_swift_container\": \"exports\"\n    }, \n  \
              \  \"message\": \"Swift already has an object with id 'ca5e7f11-5d57-4dd7-8ace-03ab647fe6c6.vhd'\
              \ in container 'exports'\", \n    \"owner\": \"00000123\",\n    \"schema\"\
              : \"/v2/schemas/task\", \n    \"self\": \"/v2/tasks/baef2134-9c33-47b9-9d63-c29a2a224715\"\
              , \n    \"status\": \"failure\", \n    \"type\": \"export\", \n    \"\
              updated_at\": \"2014-02-26T02:25:12Z\"\n}"
host: '{data_center}.images.api.rackspacecloud.com'
schemes:
- http
- https
