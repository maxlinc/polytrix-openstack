<?xml version="1.0" encoding="utf-8"?>
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <resources xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:svg="http://www.w3.org/2000/svg"
              xmlns:m="http://www.w3.org/1998/Math/MathML"
              xmlns:html="http://www.w3.org/1999/xhtml"
              xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns="http://wadl.dev.java.net/2009/02">
      <resource id="rdns" path="v1.0/{account}/rdns">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="PUT" rax:id="updatePTRRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update PTR records">
               <para role="shortdesc">Updates one or more PTR records
            associated with a Rackspace Cloud device.</para>
               <note>
                  <para>
            This call returns an asynchronous
            response. Refer to the section "Synchronous and Asynchronous Responses" 
            in Chapter 3 for more details and examples of the way that asynchronous responses work.
         </para>
               </note>
               <note>
                  <para>The IP address (data) for a PTR record cannot be
               modified. To change the reverse DNS for a domain, any
               existing PTR record(s) must be deleted and new ones
               created.</para>
               </note>
               <para>Notice in the requests below that the
               <emphasis>service</emphasis> and
               <emphasis>device</emphasis> resource URI are specified
            respectively as the <code>rel</code> and <code>href</code>
            attributes of the <emphasis>link</emphasis>
            element.</para>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update PTR record: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">PUT https://dns.api.rackspacecloud.com/v1.0/1234/rdns
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 594

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record id="PTR-000000" type="PTR" name="bar.example.com" data="192.0.2.6" ttl="86500"/&gt;
        &lt;record id="PTR-000001" type="PTR" name="bar.example.com" data="2001:db8::6" ttl="86500"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name for the domain or
                     subdomain. Must be a valid domain name. Can be
                     modified.</para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The unique ID of the
                     record.</para>
                     </wadl:doc>
                  </param>
                  <param name="type"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The record type as
                  PTR.</para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@data">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The data field is required for
                     PTR and TXT records only. For PTR records, the data field must be a valid IPv4 or IPv6 IP
                     address.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. Defaults to 3600 if no TTL is
                     specified.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update PTR record: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">PUT https://dns.api.rackspacecloud.com/v1.0/1234/rdns
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 488

{
  "recordsList" : {
    "records" : [ {
      "name" : "bar.example.com",
      "id" : "PTR-000000",
      "type" : "PTR",
      "data" : "192.0.2.6",
      "ttl" : 86500
    }, {
      "name" : "bar.example.com",
      "id" : "PTR-000001",
      "type" : "PTR",
      "data" : "2001:db8::6",
      "ttl" : 86500
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--           <param name="name" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain name. Can be
                     modified.</para></wadl:doc>
            </param>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The unique ID of the
                     record.</para></wadl:doc>
            </param>
            <param name="type" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].tye">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type as
                  PTR.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.recordsList.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to 3600 if no TTL is
                     specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false"
               path="$.recordsList.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation>
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update PTR record: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 718

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record id="PTR-000000" type="PTR" name="bar.example.com" data="192.0.2.6" ttl="86500" updated="2011-09-22T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="PTR-000001" type="PTR" name="bar.example.com" data="2001:db8::6" ttl="86500" updated="2011-09-22T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update PTR record: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 688

{
  "recordsList" : {
    "records" : [ {
      "name" : "bar.example.com",
      "id" : "PTR-000000",
      "type" : "PTR",
      "data" : "192.0.2.6",
      "updated" : "2011-09-22T01:12:51.000+0000",
      "ttl" : 86500,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "bar.example.com",
      "id" : "PTR-000001",
      "type" : "PTR",
      "data" : "2001:db8::6",
      "updated" : "2011-09-22T01:12:51.000+0000",
      "ttl" : 86500,
      "created" : "2011-06-24T01:12:51.000+0000"
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="POST" rax:id="addPTRRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add PTR records">
               <para role="shortdesc">Adds one or more PTR record records
            for a specified Cloud device.</para>
               <note>
                  <para>
            This call returns an asynchronous
            response. Refer to the section "Synchronous and Asynchronous Responses" 
            in Chapter 3 for more details and examples of the way that asynchronous responses work.
         </para>
               </note>
               <note>
                  <title>Notes</title>
                  <itemizedlist spacing="compact">
                     <listitem>
                        <para>PTR records can only be added for Rackspace
                     Cloud Servers and Load Balancers.</para>
                     </listitem>
                     <listitem>
                        <para>
                           <code>id</code> for the record must not be
                     specified.</para>
                     </listitem>
                  </itemizedlist>
                  <itemizedlist>
                     <listitem>
                        <para>For First Generation Cloud Servers, when the
                     server is created, each public IPv4 address that
                     comes with the server usually has a default PTR
                     record already created for it. A request to list
                     the PTR records associated with the server should
                     return any PTR records for the server. If a
                     default PTR record exists, the default PTR record
                     can be appropriately modified or deleted and an
                     appropriate PTR record created.</para>
                        <para>If an attempt to add a PTR record for the
                     public IP address of a newly created First
                     Generation Cloud Server results in a 400 Bad
                     Request error message, that is an indication that
                     a default PTR record for the IP address already
                     exists.</para>
                     </listitem>
                  </itemizedlist>
                  <itemizedlist>
                     <listitem>
                        <para>Adding PTR records for IPv6 addresses is
                     supported only for Next Generation Cloud
                     Servers.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <para>Notice in the requests below that the
               <emphasis>service</emphasis> and
               <emphasis>device</emphasis> resource URI are specified
            respectively as the <code>rel</code> and <code>href</code>
            attributes of the <emphasis>link</emphasis>
            element, as follows:</para>
               <itemizedlist>
                  <listitem>
                     <para>
                        <code>rel</code> – this is the name of the service 
               (as provided in the serviceCatalog from Identity) from where 
               the device was created.</para>
                  </listitem>
                  <listitem>
                     <para>
                        <code>href</code> – this is the URL to the device for which 
               the PTR record is associated. It was returned when the device was created 
               and it uniquely identifies the device.</para>
                  </listitem>
                  <listitem>
                     <para>
                        <code>content</code> – this is currently a place holder 
               for possible future use.</para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add PTR record: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">POST https://dns.api.rackspacecloud.com/v1.0/1234/rdns
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 554

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record type="PTR" name="example.com" data="192.0.2.7" ttl="56000"/&gt;
        &lt;record type="PTR" name="example.com" data="2001:db8::7" ttl="56000"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="type"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The record type as
                        <literal>PTR</literal>.</para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@data">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The data field for PTR records
                     must be a valid IPv4 or IPv6 IP
                  address.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. Defaults to 3600 if no TTL is
                     specified.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add PTR record: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">POST https://dns.api.rackspacecloud.com/v1.0/1234/rdns
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 426

{
  "recordsList" : {
    "records" : [ {
      "name" : "example.com",
      "type" : "PTR",
      "data" : "192.0.2.7",
      "ttl" : 56000
    }, {
      "name" : "example.com",
      "type" : "PTR",
      "data" : "2001:db8::7",
      "ttl" : 56000
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--            <param name="type" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type as
                  PTR.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR records
                     must be a valid IPv4 or IPv6 IP
                  address.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.recordsList.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to 3600 if no TTL is
                     specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false"
               path="$.recordsList.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add PTR record: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 710

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record id="PTR-000002" type="PTR" name="example.com" data="192.0.2.7" ttl="56000" updated="2011-09-24T01:12:51Z" created="2011-09-24T01:12:51Z"/&gt;
        &lt;record id="PTR-000003" type="PTR" name="example.com" data="2001:db8::7" ttl="56000" updated="2011-09-24T01:12:51Z" created="2011-09-24T01:12:51Z"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add PTR record: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 680

{
  "recordsList" : {
    "records" : [ {
      "name" : "example.com",
      "id" : "PTR-000002",
      "type" : "PTR",
      "data" : "192.0.2.7",
      "updated" : "2011-09-24T01:12:51.000+0000",
      "ttl" : 56000,
      "created" : "2011-09-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "id" : "PTR-000003",
      "type" : "PTR",
      "data" : "2001:db8::7",
      "updated" : "2011-09-24T01:12:51.000+0000",
      "ttl" : 56000,
      "created" : "2011-09-24T01:12:51.000+0000"
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
               
               
               <resource id="service-name" path="v1.0/{account}/rdns/{service-name}">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="service-name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Name of the Cloud service.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="listPTRRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List PTR records">
               <para role="shortdesc">Lists all PTR records configured for a
            specified Cloud device.</para>
               <para>This call lists all PTR records configured for a
            specified Cloud device.</para>
            </wadl:doc>
      
            <request>
               <param style="query" type="xs:string" name="href" required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Device-resource-uri for the specified Cloud device.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR records: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR records: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR records: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 710

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record id="PTR-000000" type="PTR" name="example.com" data="192.0.2.6" ttl="56000" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="PTR-000001" type="PTR" name="example.com" data="2001:db8::6" ttl="56000" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR records: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 680

{
  "recordsList" : {
    "records" : [ {
      "name" : "example.com",
      "id" : "PTR-000000",
      "type" : "PTR",
      "data" : "192.0.2.6",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 56000,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "id" : "PTR-000001",
      "type" : "PTR",
      "data" : "2001:db8::6",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 56000,
      "created" : "2011-06-24T01:12:51.000+0000"
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deletePTRRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete PTR records">
               <para role="shortdesc">Deletes one or all PTR records
            associated with a Rackspace Cloud device. Use the optional
               <parameter xmlns:xi="http://www.w3.org/2001/XInclude">ip</parameter> query parameter to specify a specified
            record to delete. Omitting this parameter Deletes all PTR
            records associated with a specified device.</para>
               <note>
                  <para>This call returns an asynchronous
            response. Refer to the section "Synchronous and Asynchronous Responses" 
            in Chapter 3 for more details and examples of the way that asynchronous responses work.</para>
               </note>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="href" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Device-resource-uri for the specified Cloud device.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="ip" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>IP address for the specified Cloud device.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR records: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR records: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR record: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321&amp;ip=2001:db8::6
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR record: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321&amp;ip=2001:db8::6
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR records: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 475

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;asyncresponse xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
&lt;callbackUrl&gt;https://dns.api.rackspacecloud.com/v1.0/440370/status/aad311e0-a465-4323-8d53-3d2f8ce5c372&lt;/callbackUrl&gt;
&lt;jobId&gt;aad311e0-a465-4323-8d53-3d2f8ce5c372&lt;/jobId&gt;
    &lt;requestUrl&gt;https://dns.api.rackspacecloud.com/v1.0/440370/rdns/cloudServers?href=https://dfw.servers.api.rackspacecloud.com/v1.0/440370/servers/264111&lt;/requestUrl&gt;
&lt;status&gt;RUNNING&lt;/status&gt;
&lt;verb&gt;DELETE&lt;/verb&gt;
&lt;/asyncresponse&gt;

</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR records: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 376


{
  "status": "RUNNING",
  "verb": "DELETE",
  "jobId": "aad311e0-a465-4323-8d53-3d2f8ce5c372",
  "callbackUrl": "https://dns.api.rackspacecloud.com/v1.0/440370/status/aad311e0-a465-4323-8d53-3d2f8ce5c372",
  "requestUrl": "https://dns.api.rackspacecloud.com/v1.0/440370/rdns/cloudServers?href=https://dfw.servers.api.rackspacecloud.com/v1.0/440370/servers/264111"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR record: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 475

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;asyncresponse xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
&lt;callbackUrl&gt;https://dns.api.rackspacecloud.com/v1.0/440370/status/aad311e0-a465-4323-8d53-3d2f8ce5c372&lt;/callbackUrl&gt;
&lt;jobId&gt;aad311e0-a465-4323-8d53-3d2f8ce5c372&lt;/jobId&gt;
&lt;requestUrl&gt;https://dns.api.rackspacecloud.com/v1.0/440370/rdns/cloudServers?href=https://dfw.servers.api.rackspacecloud.com/v1.0/440370/servers/264111&lt;/requestUrl&gt;
&lt;status&gt;RUNNING&lt;/status&gt;
&lt;verb&gt;DELETE&lt;/verb&gt;
&lt;/asyncresponse&gt;


</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete PTR record: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 376


{
  "status": "RUNNING",
  "verb": "DELETE",
  "jobId": "aad311e0-a465-4323-8d53-3d2f8ce5c372",
  "callbackUrl": "https://dns.api.rackspacecloud.com/v1.0/440370/status/aad311e0-a465-4323-8d53-3d2f8ce5c372",
  "requestUrl": "https://dns.api.rackspacecloud.com/v1.0/440370/rdns/cloudServers?href=https://dfw.servers.api.rackspacecloud.com/v1.0/440370/servers/264111"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                  
                  
                  
                  <resource id="service-name_recordId"
                path="v1.0/{account}/rdns/{service-name}/{recordId}">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="service-name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Name of the Cloud service.</para>
            </wadl:doc>
                  </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="recordId">
                        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the record.</para>
            </wadl:doc>
                     </param>
         <method name="GET" rax:id="showPTRRecord">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show PTR record">
               <para role="shortdesc">Shows details for a specified PTR
            record associated with a specified Cloud device.</para>
               <para>This call shows details for a specified PTR
            record associated with a specified Cloud device.</para>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="href" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Device-resource-uri for the specified Cloud device.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR record details: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack/PTR-000000?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR record details: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/rdns/cloudServersOpenStack/PTR-000000?href=https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR record details: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 553

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;rdns xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns2:link href="https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321" rel="cloudServersOpenStack"&gt;&lt;/ns2:link&gt;
    &lt;recordsList&gt;
        &lt;record id="PTR-000000" type="PTR" name="example.com" data="192.0.2.6" ttl="56000" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;/recordsList&gt;
&lt;/rdns&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List PTR record details: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 442

{
  "recordsList" : {
    "records" : [ {
      "name" : "example.com",
      "id" : "PTR-000000",
      "type" : "PTR",
      "data" : "192.0.2.6",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 56000,
      "created" : "2011-06-24T01:12:51.000+0000"
    } ]
  },
  "link" : {
    "content" : "",
    "href" : "https://dfw.servers.api.rackspacecloud.com/v2/1234/servers/0987654321",
    "rel" : "cloudServersOpenStack"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                     
                     
                  
               
            <resource id="limits" path="v1.0/{account}/limits">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="listLimits">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List limits">
               <para role="shortdesc">Lists all applicable limits.</para>
               <para>This call provides a list of all applicable limits for
            a specified account.</para>
               <para>The following examples show the requests and
            corresponding responses to list all limits for the
            specified account.</para>
               <!--<para>For details about the limits information returned,
            refer to <xref linkend="Limits-d1e1208"/>.</para>-->
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limits: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits
Accept: application/xml
X-Auth-Token:
									ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limits: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits
Accept: application/json
X-Auth-Token:
									ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:rates">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limits: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION:
									1.0.17
Content-Type: application/xml
Content-Length: 808

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;limits xmlns="http://docs.openstack.org/common/api/v1.0"&gt;
    &lt;rates&gt;
        &lt;rate uri="*/status/*" regex=".*/v\d+\.\d+/(\d+/status).*"&gt;
            &lt;limit verb="GET" value="5" remaining="0" unit="SECOND"/&gt;
        &lt;/rate&gt;
        &lt;rate uri="*/domains*" regex=".*/v\d+\.\d+/(\d+/domains).*"&gt;
            &lt;limit verb="GET" value="100" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="POST" value="25" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="PUT" value="50" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="DELETE" value="50" remaining="0" unit="MINUTE"/&gt;
        &lt;/rate&gt;
    &lt;/rates&gt;
    &lt;absolute&gt;
        &lt;limit name="domains" value="500"/&gt;
        &lt;limit name="records per domain" value="500"/&gt;
    &lt;/absolute&gt;
&lt;/limits&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limits: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION:
									1.0.17
Content-Type: application/json
Content-Length: 831

{
  "rates" : {
    "rate" : [ {
      "uri" : "*/status/*",
      "limit" : [ {
        "value" : 5,
        "verb" : "GET",
        "unit" : "SECOND"
      } ],
      "regex" : ".*/v\\d+\\.\\d+/(\\d+/status).*"
    }, {
      "uri" : "*/domains*",
      "limit" : [ {
        "value" : 100,
        "verb" : "GET",
        "unit" : "MINUTE"
      }, {
        "value" : 25,
        "verb" : "POST",
        "unit" : "MINUTE"
      }, {
        "value" : 50,
        "verb" : "PUT",
        "unit" : "MINUTE"
      }, {
        "value" : 50,
        "verb" : "DELETE",
        "unit" : "MINUTE"
      } ],
      "regex" : ".*/v\\d+\\.\\d+/(\\d+/domains).*"
    } ]
  },
  "absolute" : {
    "limit" : [ {
      "name" : "domains",
      "value" : 500
    }, {
      "name" : "records per domain",
      "value" : 500
    } ]
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
               
               <resource id="type_id" path="v1.0/{account}/limits/{type}">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template" type="xs:string" required="true" name="type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The type of limit.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="showLimits">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Show limits">
               <para role="shortdesc">Shows assigned limits for a specified
            type.</para>
               <para>This call provides a list of all applicable limits of a
            specified <parameter>type</parameter> for the specified
            account.</para>
               <para>The following examples show the requests and
            corresponding responses to list all applicable limits of a
            specified <parameter>type</parameter> for the specified
            account.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Specified Limit: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits/rate_limit
Accept: application/xml
X-Auth-Token:
									ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Specified Limit: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits/rate_limit
Accept: application/json
X-Auth-Token:
									ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:rates">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Specified Limit: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION:
									1.0.17
Content-Type: application/xml
Content-Length: 678

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;limits xmlns="http://docs.openstack.org/common/api/v1.0"&gt;
    &lt;rates&gt;
        &lt;rate uri="*/status/*" regex=".*/v\d+\.\d+/(\d+/status).*"&gt;
            &lt;limit verb="GET" value="5" remaining="0" unit="SECOND"/&gt;
        &lt;/rate&gt;
        &lt;rate uri="*/domains*" regex=".*/v\d+\.\d+/(\d+/domains).*"&gt;
            &lt;limit verb="GET" value="100" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="POST" value="25" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="PUT" value="50" remaining="0" unit="MINUTE"/&gt;
            &lt;limit verb="DELETE" value="50" remaining="0" unit="MINUTE"/&gt;
        &lt;/rate&gt;
    &lt;/rates&gt;
&lt;/limits&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Specified Limit: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION:
									1.0.17
Content-Type: application/json
Content-Length: 671

{
  "rates" : {
    "rate" : [ {
      "uri" : "*/status/*",
      "limit" : [ {
        "value" : 5,
        "verb" : "GET",
        "unit" : "SECOND"
      } ],
      "regex" : ".*/v\\d+\\.\\d+/(\\d+/status).*"
    }, {
      "uri" : "*/domains*",
      "limit" : [ {
        "value" : 100,
        "verb" : "GET",
        "unit" : "MINUTE"
      }, {
        "value" : 25,
        "verb" : "POST",
        "unit" : "MINUTE"
      }, {
        "value" : 50,
        "verb" : "PUT",
        "unit" : "MINUTE"
      }, {
        "value" : 50,
        "verb" : "DELETE",
        "unit" : "MINUTE"
      } ],
      "regex" : ".*/v\\d+\\.\\d+/(\\d+/domains).*"
    } ]
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                  
                  
               
               <resource id="types" path="v1.0/{account}/limits/types">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="listLimitTypes">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List limit types">
               <para role="shortdesc">Lists the types of limits.</para>
               <para>This call provides a list of all applicable limit types
            for a specified account.</para>
               <para>The following examples show the requests and
            corresponding responses to list all limit types for the
            specified account.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limit types: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits/types
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limit types: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/limits/types
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:limitTypes">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limit types: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 455

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;grouplimittypes xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns4="http://docs.openstack.org/common/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;ns3:limitType&gt;rate_limit&lt;/ns3:limitType&gt;
    &lt;ns3:limitType&gt;domain_limit&lt;/ns3:limitType&gt;
    &lt;ns3:limitType&gt;domain_record_limit&lt;/ns3:limitType&gt;
&lt;/grouplimittypes&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List limit types: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 76

{
  "limitTypes" : [ "RATE_LIMIT", "DOMAIN_LIMIT", "DOMAIN_RECORD_LIMIT" ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                  
               
            <resource id="domains" path="v1.0/{account}/domains">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="listDomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List domains">
               <para role="shortdesc">Lists all domains manageable by the
            account specified. Displays IDs and names
            only. </para>
               <para>These calls provide a list of all DNS domains
            manageable by a given account. The resulting list is flat,
            and does not break the domains down hierarchically by
            subdomain. All representative domains are included in the
            list, even if a domain is conceptually a subdomain of
            another domain in the list.</para>
               <note>
                  <para>These calls return by default a maximum of 100 items
               at a time if no <code>limit</code> is specified. To
               navigate the collection returned, the parameters
                  <code>limit</code> and <code>offset</code> can be
               set in the
               URI<!--  (for example:
                  <code>limit=10&amp;offset=0</code>), as described in
                  <xref linkend="pagination"/> -->.</para>
               </note>
               <para>In the examples that follow, the request is made for a
               <code>limit</code> of <code>10</code> records, starting
            at <code>offset</code>
                  <code>20</code> (record 21).</para>
               <note>
                  <para>because the current set of 10 records in the
               previous response examples begins at
                  <code>offset=20</code>, note that the
                  <code>previous</code> link points to a group of 10
               records starting at <code>offset=10</code>, while the
                  <code>next</code> link points to a group of 10
               records starting at <code>offset=30</code>.</para>
               </note>
               <remark>There is 1 problems with this section: 1) I can't get
            rid of the generated statement "This operation does not
            return a response body"</remark>
            </wadl:doc>
            <request>
    <!--       <param style="query" type="xs:string" name="name"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>The name of the domain for which to
                  list details.</para></wadl:doc>
         </param> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;offset=20
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;offset=20
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
         
               <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.json"
               />
            </wadl:doc>
         </representation> -->
         
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 2000

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains totalEntries="114" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725233" accountId="1234" name="example.com" emailAddress="sample@rackspace.com" updated="2011-06-24T01:23:15Z" created="2011-06-24T01:12:51Z" comment="Optional domain comment..."/&gt;
    &lt;domain id="2725257" accountId="1234" name="sub1.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:09:34Z" created="2011-06-23T03:09:33Z" comment="1st sample subdomain"/&gt;
    &lt;domain id="2725258" accountId="1234" name="sub2.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:52:55Z" created="2011-06-23T03:52:55Z" comment="1st sample subdomain"/&gt;
    &lt;domain id="2725260" accountId="1234" name="north.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:10Z" created="2011-06-23T03:53:09Z"/&gt;
    &lt;domain id="2725261" accountId="1234" name="south.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:14Z" created="2011-06-23T03:53:14Z" comment="Final sample subdomain"/&gt;
    &lt;domain id="2725352" accountId="1234" name="region2.example.net" updated="2011-06-23T20:21:06Z" created="2011-06-23T19:24:27Z"/&gt;
    &lt;domain id="2718984" accountId="1234" name="example.org" updated="2011-05-03T14:47:32Z" created="2011-05-03T14:47:30Z"/&gt;
    &lt;domain id="2722346" accountId="1234" name="rackspace.example" updated="2011-06-21T15:54:31Z" created="2011-06-15T19:02:07Z"/&gt;
    &lt;domain id="2722347" accountId="1234" name="dnsaas.example" updated="2011-06-21T15:54:31Z" created="2011-06-15T19:02:07Z" comment="Sample comment"/&gt;
    &lt;ns2:link href="https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;amp;offset=10" rel="previous"&gt;&lt;/ns2:link&gt;
    &lt;ns2:link href="https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;amp;offset=30" rel="next"&gt;&lt;/ns2:link&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 2364

{
  "domains" : [ {
    "name" : "example.com",
    "id" : 2725233,
    "comment" : "Optional domain comment...",
    "updated" : "2011-06-24T01:23:15.000+0000",
    "accountId" : 1234,
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-24T01:12:51.000+0000"
  }, {
    "name" : "sub1.example.com",
    "id" : 2725257,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:09:34.000+0000",
    "accountId" : 1234,
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:09:33.000+0000"
  }, {
    "name" : "sub2.example.com",
    "id" : 2725258,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:52:55.000+0000",
    "accountId" : 1234,
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:52:55.000+0000"
  }, {
    "name" : "north.example.com",
    "id" : 2725260,
    "updated" : "2011-06-23T03:53:10.000+0000",
    "accountId" : 1234,
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:53:09.000+0000"
  }, {
    "name" : "south.example.com",
    "id" : 2725261,
    "comment" : "Final sample subdomain",
    "updated" : "2011-06-23T03:53:14.000+0000",
    "accountId" : 1234,
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:53:14.000+0000"
  }, {
    "name" : "region2.example.net",
    "id" : 2725352,
    "updated" : "2011-06-23T20:21:06.000+0000",
    "accountId" : 1234,
    "created" : "2011-06-23T19:24:27.000+0000"
  }, {
    "name" : "example.org",
    "id" : 2718984,
    "updated" : "2011-05-03T14:47:32.000+0000",
    "accountId" : 1234,
    "created" : "2011-05-03T14:47:30.000+0000"
  }, {
    "name" : "rackspace.example",
    "id" : 2722346,
    "updated" : "2011-06-21T15:54:31.000+0000",
    "accountId" : 1234,
    "created" : "2011-06-15T19:02:07.000+0000"
  }, {
    "name" : "dnsaas.example",
    "id" : 2722347,
    "comment" : "Sample comment",
    "updated" : "2011-06-21T15:54:31.000+0000",
    "accountId" : 1234,
    "created" : "2011-06-15T19:02:07.000+0000"
  } ],
  "links" : [ {
    "content" : "",
    "href" : "https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;offset=10",
    "rel" : "previous"
  }, {
    "content" : "",
    "href" : "https://dns.api.rackspacecloud.com/v1.0/1234/domains?limit=10&amp;offset=30",
    "rel" : "next"
  } ],
  "totalEntries" : 114
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
         
               <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.json"
               />
            </wadl:doc>
         </representation> -->
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            
         </method>
         <method name="GET" rax:id="listDomainsbyName">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List domains by name">
               <para role="shortdesc">Filters domains by domain name: list
            all domains manageable by the account specified that <emphasis>exactly match</emphasis>
            the value of the <parameter xmlns:xi="http://www.w3.org/2001/XInclude">name</parameter> parameter.</para>
               <para>Note that you can use the query parameter <parameter>name</parameter> to
               filter domains by domain name: list all domains manageable
               by the account specified that <emphasis>exactly match</emphasis> the fully qualified value of the
            <parameter xmlns:xi="http://www.w3.org/2001/XInclude">name</parameter> parameter. Note that if there is no exact match, no results are returned. 
         </para>
         
         
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="name" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Name of the domain to find.</para>
                  </wadl:doc>
               </param>
               <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.json"/>
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified domain Name: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?name=region2.example.net
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified domain Name: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?name=region2.example.net
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified Subdomain Name: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?name=sub1.example.com
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified Subdomain Name: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains?name=sub1.example.com
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--      <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.json"
               />
            </wadl:doc>
         </representation> -->
            </request>
      
            <!--      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.xml"/>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.json"/>
            </wadl:doc>
         </representation>
      </response> -->
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified domain Name: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 371

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains totalEntries="114" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725352" name="region2.example.net" updated="2011-06-23T20:21:06Z" created="2011-06-23T19:24:27Z"/&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified domain Name: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 202

{
  "domains" : [ {
    "name" : "region2.example.net",
    "id" : 2725352,
    "updated" : "2011-06-23T20:21:06.000+0000",
    "created" : "2011-06-23T19:24:27.000+0000"
  } ],
  "totalEntries" : 114
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified Subdomain Name: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 435

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains totalEntries="114" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725257" name="sub1.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:09:34Z" created="2011-06-23T03:09:33Z" comment="1st sample subdomain"/&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Fully Qualified Subdomain Name: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 284

{
  "domains" : [ {
    "name" : "sub1.example.com",
    "id" : 2725257,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:09:34.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:09:33.000+0000"
  } ],
  "totalEntries" : 114
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation> 
      
               <!--      <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.xml"
               />
            </wadl:doc>
         </representation>
      
         <representation mediaType="application/json" xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
            element="dnsaas:domains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.json"
               />
            </wadl:doc>
         </representation>  -->
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="POST" rax:id="createDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create domain">
               <para role="shortdesc">Creates a domain with the
            configuration defined by the request.</para>
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" in Chapter 3 
               for more details and examples of the way that asynchronous responses work. </para>
               </note>
               <note>
                  <para>Subdomains are also created the same way as
               domains.</para>
               </note>
               <para>This call provisions one or more new DNS domains under
            the account specified, based on the configuration defined
            in the request object. If the corresponding request cannot
            be fulfilled due to insufficient or invalid data, an
               <code>HTTP</code>
                  <returnvalue>400 (Bad Request)</returnvalue> error
            response will be returned with information regarding the
            nature of the failure in the body of the response.
            Failures in the validation process are non-recoverable and
            require the caller to correct the cause of the failure and
               <command>POST</command> the request again. <note>
                     <title>Notes</title>
                     <itemizedlist>
                  <!-- <listitem>
                     <para>Refer to <xref linkend="dns_propagation"/>
                        for information about DNS propagation.</para>
                  </listitem>-->
                        <listitem>
                           <para>If you attempt to create a domain that
                        already exists, the API will return an
                        exception saying that the domain already
                        exists.</para>
                        </listitem>
                        <listitem>
                           <para>This process allows multiple records to be
                        created along with the domain. This is an
                        atomic operation: if there is a failure in
                        creation of even a single record, the entire
                        process will fail.</para>
                        </listitem>
                        <listitem>
                           <para>When a domain is created, and no Time To
                        Live (TTL) is specified, the SOA minTTL (3600
                        seconds) is used as the default. When a record
                        is added without a specified TTL, it will
                        receive the domain TTL by default. When the
                        domain and/or record TTL is supplied by the
                        user, either via a create or update call, the
                        TTL values must be 300 seconds or more.</para>
                        </listitem>
                        <listitem>
                           <para>Subdomains are managed in separate zone
                        files in the DNS system and will add some
                        overhead to domain management.</para>
                        </listitem>
                     </itemizedlist>
                  </note>
               </para>
               <para>The following examples show the Create domains
            requests:<?rax-fo keep-with-next?>
         </para>
               <note>
                  <para>The following examples show the
                  <emphasis>initial</emphasis> 202 Accepted response
               for the asynchronous call and indicate that the task
               has been accepted for processing.
               <!--Refer to <xref
                  linkend="sync_asynch_responses"/> for a description
               of how the asynchronous call works. Also-->See
                  <link xlink:href="http://docs.rackspace.com/cdns/api/v1.0/cdns-getting-started/content/Create_Domain.html">http://docs.rackspace.com/cdns/api/v1.0/cdns-getting-started/content/Create_Domain.html</link>
               for a detailed example of processing the Create domain
               call, including the final successful responses for
               create domain.</para>
               </note>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Create domains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 1460

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain name="example.com" ttl="3600" emailAddress="sample@rackspace.com" comment="Optional domain comment..."&gt;
        &lt;recordsList&gt;
            &lt;record type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771"/&gt;
            &lt;record type="A" name="example.com" data="192.0.2.17" ttl="86400"/&gt;
            &lt;record type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600"/&gt;
            &lt;record type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600"/&gt;
            &lt;record type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5"/&gt;
            &lt;record type="CNAME" name="www.example.com" data="example.com" ttl="5400" comment="This is a comment on the CNAME record"/&gt;
        &lt;/recordsList&gt;
        &lt;subdomains&gt;
            &lt;domain name="sub1.example.com" emailAddress="sample@rackspace.com" comment="1st sample subdomain"/&gt;
            &lt;domain name="sub2.example.com" emailAddress="sample@rackspace.com" comment="1st sample subdomain"/&gt;
            &lt;domain name="north.example.com" emailAddress="sample@rackspace.com"/&gt;
            &lt;domain name="south.example.com" emailAddress="sample@rackspace.com" comment="Final sample subdomain"/&gt;
        &lt;/subdomains&gt;
    &lt;/domain&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--               <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The name for the
                                domain or subdomain. Must be a valid
                                domain name.</para></wadl:doc>
            </param>
            <param name="emailAddress"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>Email address to use for
                                contacting the domain
                                administrator.</para></wadl:doc>
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>If specified, must be
                                greater than or equal to 300. The default value,
                                if not specified, is
                                <code xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook">3600</code>.</para></wadl:doc>
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>If included, its length
                                must be less than or equal to 160
                                characters.</para></wadl:doc>
            </param>  -->
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Create domains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 1615

{
  "domains" : [ {
    "name" : "example.com",
    "comment" : "Optional domain comment...",
    "recordsList" : {
      "records" : [ {
        "name" : "ftp.example.com",
        "type" : "A",
        "data" : "192.0.2.8",
        "ttl" : 5771
      }, {
        "name" : "example.com",
        "type" : "A",
        "data" : "192.0.2.17",
        "ttl" : 86400
      }, {
        "name" : "example.com",
        "type" : "NS",
        "data" : "dns1.stabletransit.com",
        "ttl" : 3600
      }, {
        "name" : "example.com",
        "type" : "NS",
        "data" : "dns2.stabletransit.com",
        "ttl" : 3600
      }, {
        "name" : "example.com",
        "priority" : 5,
        "type" : "MX",
        "data" : "mail.example.com",
        "ttl" : 3600
      }, {
        "name" : "www.example.com",
        "type" : "CNAME",
        "comment" : "This is a comment on the CNAME record",
        "data" : "example.com",
        "ttl" : 5400
      } ]
    },
    "subdomains" : {
      "domains" : [ {
        "name" : "sub1.example.com",
        "comment" : "1st sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "sub2.example.com",
        "comment" : "1st sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "north.example.com",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "south.example.com",
        "comment" : "Final sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      } ]
    },
    "ttl" : 3600,
    "emailAddress" : "sample@rackspace.com"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="$.domains[*].name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para>
                     </wadl:doc>
                  </param>
                  <param name="emailAddress"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="$.domains[*].emailAddress">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Email address to use for
                     contacting the domain
                  administrator.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="$.domains[*].ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. The default value, if not specified, is
                        <code xmlns:xi="http://www.w3.org/2001/XInclude">3600</code>.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="$.domains[*].comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Create domains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 1636

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains totalEntries="114" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain name="example.com" ttl="3600" emailAddress="sample@rackspace.com" comment="Optional domain comment..."&gt;
        &lt;nameservers&gt;
            &lt;nameserver name="dns1.stabletransit.com"/&gt;
            &lt;nameserver name="dns2.stabletransit.com"/&gt;
        &lt;/nameservers&gt;
        &lt;recordsList&gt;
            &lt;record type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771"/&gt;
            &lt;record type="A" name="example.com" data="192.0.2.17" ttl="86400"/&gt;
            &lt;record type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600"/&gt;
            &lt;record type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600"/&gt;
            &lt;record type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5"/&gt;
            &lt;record type="CNAME" name="www.example.com" data="example.com" ttl="5400" comment="This is a comment on the CNAME record"/&gt;
        &lt;/recordsList&gt;
        &lt;subdomains&gt;
            &lt;domain name="sub1.example.com" emailAddress="sample@rackspace.com" comment="1st sample subdomain"/&gt;
            &lt;domain name="sub2.example.com" emailAddress="sample@rackspace.com" comment="1st sample subdomain"/&gt;
            &lt;domain name="north.example.com" emailAddress="sample@rackspace.com"/&gt;
            &lt;domain name="south.example.com" emailAddress="sample@rackspace.com" comment="Final sample subdomain"/&gt;
        &lt;/subdomains&gt;
    &lt;/domain&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Create domains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 1761

{
  "domains" : [ {
    "name" : "example.com",
    "comment" : "Optional domain comment...",
    "nameservers" : [ {
      "name" : "dns1.stabletransit.com"
    }, {
      "name" : "dns2.stabletransit.com"
    } ],
    "recordsList" : {
      "records" : [ {
        "name" : "ftp.example.com",
        "type" : "A",
        "data" : "192.0.2.8",
        "ttl" : 5771
      }, {
        "name" : "example.com",
        "type" : "A",
        "data" : "192.0.2.17",
        "ttl" : 86400
      }, {
        "name" : "example.com",
        "type" : "NS",
        "data" : "dns1.stabletransit.com",
        "ttl" : 3600
      }, {
        "name" : "example.com",
        "type" : "NS",
        "data" : "dns2.stabletransit.com",
        "ttl" : 3600
      }, {
        "name" : "example.com",
        "priority" : 5,
        "type" : "MX",
        "data" : "mail.example.com",
        "ttl" : 3600
      }, {
        "name" : "www.example.com",
        "type" : "CNAME",
        "comment" : "This is a comment on the CNAME record",
        "data" : "example.com",
        "ttl" : 5400
      } ]
    },
    "subdomains" : {
      "domains" : [ {
        "name" : "sub1.example.com",
        "comment" : "1st sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "sub2.example.com",
        "comment" : "1st sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "north.example.com",
        "emailAddress" : "sample@rackspace.com"
      }, {
        "name" : "south.example.com",
        "comment" : "Final sample subdomain",
        "emailAddress" : "sample@rackspace.com"
      } ]
    },
    "ttl" : 3600,
    "emailAddress" : "sample@rackspace.com"
  } ],
  "totalEntries" : 114
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="409">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemAlreadyExists"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="PUT" rax:id="updateDomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update domains">
               <para role="shortdesc">Updates the configurations of multiple
            domains.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />-->. 
               Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.
            </para>
               </note>
               <para>This call modifies DNS domain(s) attributes only.
            records cannot be added, modified, or Deleted. Only the
            TTL, email address and comment attributes of a domain can
            be modified.</para>
               <para>If a request cannot be fulfilled due to insufficient or
            invalid data, an <code>HTTP</code>
                  <returnvalue>400 (Bad Request)</returnvalue> error
            response will be returned with information regarding the
            nature of the failure in the body of the response.
            Failures in the validation process are non-recoverable and
            require the caller to correct the cause of the failure and
            POST the request again.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
               <!-- <listitem>
                  <para>Refer to <xref linkend="dns_propagation"/> for
                     information about DNS propagation.</para>
               </listitem>-->
                     <listitem>
                        <para>A domain's <code>id</code> is
                     immutable.</para>
                     </listitem>
                     <listitem>
                        <para>When the domain and/or record TTL is supplied
                     by the user, either via a create or update call,
                     the TTL values must be 300 seconds or
                     more.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <note>
                  <para>
                     <code>name</code> cannot be specified, because the
               domain name cannot be modified.</para>
               </note>
            </wadl:doc>
            <request>
   <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Update domain: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-domain_request.xml"/>
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="FIXME/@id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="FIXME/@emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Update domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-domain_request.json"/>
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>  --> 
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update domains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 441

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725233" ttl="3600" emailAddress="sample@rackspace.com" comment="Optional domain comment..."/&gt;
    &lt;domain id="2725257" emailAddress="sample@rackspace.com" comment="1st sample subdomain"/&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For modifying <emphasis xmlns:xi="http://www.w3.org/2001/XInclude">multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para>
                     </wadl:doc>
                  </param>
                  <param name="emailAddress"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@emailAddress">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Email address to use for
                     contacting the domain
                  administrator.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update domains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 266

{
  "domains" : [ {
    "id" : 2725233,
    "comment" : "Optional domain comment...",
    "ttl" : 3600,
    "emailAddress" : "sample@rackspace.com"
  }, {
    "id" : 2725257,
    "comment" : "1st sample subdomain",
    "emailAddress" : "sample@rackspace.com"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--           <param name="id" style="plain" type="xs:string"
               required="true" path="$.domains[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.domains[*].emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.domains[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.domains[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation>
            </request> 
      
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="409">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemAlreadyExists"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteDomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete domains">
               <para role="shortdesc">Deletes multiple domains from an
            account.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />-->.
               Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.
            </para>
               </note>
               <para>This call deletes one or more specified domains from
            the account; when a domain is deleted, its immediate
            resource records are also deleted from the account. By
            default, if a deleted domain had subdomains, each
            subdomain becomes a root domain and is not deleted; this
            can be overridden by the optional
               <code>deleteSubdomains</code> parameter. Utilizing the
            optional <code>deleteSubdomains</code> parameter on
            domains without subdomains does not result in a failure.
            When a domain is deleted, any and all domain data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted object should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
               <para>In the previous two response examples, the requested
            domain objects could not be deleted, because they were not
            found.</para>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="id1" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>The id for the first domain.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="id2" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>The id for the next domain.</para>
                  </wadl:doc>
               </param>
         
               <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains?id=2725233&amp;id=2725257
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains?id=2725233&amp;id=2725257
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> --> 
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteDomainsAndSubdomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete domains and subdomains">
               <para role="shortdesc">Deletes multiple domains and their
            subdomains from an account.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />-->.
               Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.
            </para>
               </note>
               <para>This call deletes one or more specified domains from
            the account; when a domain is deleted, its immediate
            resource records are also deleted from the account. By
            default, if a deleted domain had subdomains, each
            subdomain becomes a root domain and is not deleted; this
            can be overridden by the optional
               <code>deleteSubdomains</code> parameter. Utilizing the
            optional <code>deleteSubdomains</code> parameter on
            domains without subdomains does not result in a failure.
            When a domain is deleted, any and all domain data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted object should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
               <para>In the previous two response examples, the requested
            domain objects could not be deleted, because they were not
            found.</para>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="id1" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>id for the first domain.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="id2" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>id for the next domain.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="deleteSubdomains"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>If deleteSubdomains is true, also deletes subdomains. If false, subdomains are not deleted.</para>
                  </wadl:doc>
               </param>
               <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domains and subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains?id=2725233&amp;id=2725257&amp;deleteSubdomains=true
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domains and subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains?id=2725233&amp;id=2725257&amp;deleteSubdomains=true
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
               
               
               
               
               
               
               <resource id="domain_id" path="v1.0/{account}/domains/{domainId}">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="listDomainsWithoutSubDomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List domain details without subdomains">
               <para role="shortdesc">Lists details for a specified domain,
            with record information but without subdomains.</para>
               <para>This call provides the detailed output for a specified
            domain configured and associated with an account. This
            call is not capable of returning details for a domain that
            has been deleted.</para>
               <para>This call does not require a request body.</para>
               <note>
                  <para>By default, returns a maximum of 100 items at a time
               if no <code>limit</code> is specified. To navigate the
               collection returned, the parameters <code>limit</code>
               and <code>offset</code> can be set in the URI (for
               example:
               <code>limit=10&amp;offset=0</code>)<!-- , as
               described in <xref linkend="pagination"/> -->.</para>
               </note>
               <!--      <para>Two parameters are available to specify the information
            about subdomains and records to be returned by the List
            domain details call:</para>
         <itemizedlist>
            <listitem>
               <para>
                  <code>showRecords</code> - if this parameter is set
                  to <code>true</code>, then information about records
                  is returned; if this parameter is set to
                     <code>false</code>, then information about
                  records is not returned.</para>
            </listitem>
            <listitem>
               <para>
                  <code>showSubdomains</code> - if this parameter is
                  set to <code>true</code>, then information about
                  subdomains is returned; if this parameter is set to
                     <code>false</code>, then information about
                  subdomains is not returned.</para>
            </listitem>
         </itemizedlist> -->
               <para>The following examples show the default parameter
            settings (<code>showRecords</code>=<code>true&amp;</code>
                  <code>showSubdomains</code>=<code>false</code>) for the
            List domain details call. This call returns information
            with records but no information about subdomains. Because
            these parameter values are the defaults, this call works
            the same way if both of the parameters are omitted.</para>
               <!--         <para>The following examples show the parameter settings to
            return information for both records and subdomains
               (<code>showSubdomains</code>=<code>true&amp;</code>
            <code>showRecords</code>=<code>true</code>) for the List
            domain details call:</para> 
         <para><?rax-fo keep-with-next?>The following examples show
            the parameter settings to return basic information only,
            without records or subdomains
               (<code>showRecords</code>=<code>false&amp;</code>
            <code>showSubdomains</code>=<code>false</code>) for the
            List domain details call:</para> -->
            </wadl:doc>
            <request>
   <!--        <param style="query" type="xs:string" name="showRecords"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>If this parameter is set to true,
                  then information about records is returned; if this
                  parameter is set to false, then information about
                  records is not returned.</para></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="showSubdomains"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>If this parameter is set to true,
                  then information about subdomains is returned; if
                  this parameter is set to false, then information
                  about subdomains is not returned.</para></wadl:doc>
         </param> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=false
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=false
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domain">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 1660

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="2725233" accountId="1234" name="example.com" ttl="3600" emailAddress="sample@rackspace.com" updated="2011-06-24T01:23:15Z" created="2011-06-24T01:12:51Z" comment="Optional domain comment..." xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
    &lt;recordsList totalEntries="6"&gt;
        &lt;record id="A-6817754" type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771" updated="2011-05-19T08:07:08-05:00" created="2011-05-18T14:53:09-05:00"/&gt;
        &lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z"/&gt;
        &lt;record id="NS-6251982" type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="NS-6251983" type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="MX-3151218" type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5" updated="2011-06-24T01:12:53Z" created="2011-06-24T01:12:53Z"/&gt;
        &lt;record id="CNAME-9778009" type="CNAME" name="www.example.com" data="example.com" ttl="5400" updated="2011-06-24T01:12:54Z" created="2011-06-24T01:12:54Z" comment="This is a comment on the CNAME record"/&gt;
    &lt;/recordsList&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 1975

{
  "name" : "example.com",
  "id" : 2725233,
  "comment" : "Optional domain comment...",
  "updated" : "2011-06-24T01:23:15.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "recordsList" : {
    "totalEntries" : 6,
    "records" : [ {
      "name" : "ftp.example.com",
      "id" : "A-6817754",
      "type" : "A",
      "data" : "192.0.2.8",
      "updated" : "2011-05-19T13:07:08.000+0000",
      "ttl" : 5771,
      "created" : "2011-05-18T19:53:09.000+0000"
    }, {
      "name" : "example.com",
      "id" : "A-6822994",
      "type" : "A",
      "data" : "192.0.2.17",
      "updated" : "2011-06-24T01:12:52.000+0000",
      "ttl" : 86400,
      "created" : "2011-06-24T01:12:52.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251982",
      "type" : "NS",
      "data" : "dns1.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251983",
      "type" : "NS",
      "data" : "dns2.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "priority" : 5,
      "id" : "MX-3151218",
      "type" : "MX",
      "data" : "mail.example.com",
      "updated" : "2011-06-24T01:12:53.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:53.000+0000"
    }, {
      "name" : "www.example.com",
      "id" : "CNAME-9778009",
      "type" : "CNAME",
      "comment" : "This is a comment on the CNAME record",
      "data" : "example.com",
      "updated" : "2011-06-24T01:12:54.000+0000",
      "ttl" : 5400,
      "created" : "2011-06-24T01:12:54.000+0000"
    } ]
  },
  "ttl" : 3600,
  "emailAddress" : "sample@rackspace.com",
  "created" : "2011-06-24T01:12:51.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_response.xml"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_response.json"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_response.xml"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_response.json"
               />
            </wadl:doc>
         </representation>  -->
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            
         </method>
         <method name="GET" rax:id="showDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Show domain">
               <para role="shortdesc">Shows details for a specified domain.
            Displays details, as specified by the <parameter xmlns:xi="http://www.w3.org/2001/XInclude">showRecords</parameter> and <parameter xmlns:xi="http://www.w3.org/2001/XInclude">showSubdomains</parameter> parameters.</para>
               <para>This call provides the detailed output for a specified
            domain configured and associated with an account. This
            call is not capable of returning details for a domain that
            has been deleted.</para>
               <para>This call does not require a request body.</para>
               <note>
                  <para>By default, returns a maximum of 100 items at a time
               if no <code>limit</code> is specified. To navigate the
               collection returned, the parameters <code>limit</code>
               and <code>offset</code> can be set in the URI (for
               example:
               <code>limit=10&amp;offset=0</code>)<!-- , as
               described in <xref linkend="pagination"/> -->.</para>
               </note>
               <para>Two parameters are available to specify the information
            about subdomains and records to be returned by the List
            domain details call:<itemizedlist>
                     <listitem>
                        <para>
                           <code>showRecords</code> - if this parameter is
                     set to <code>true</code>, then information about
                     records is returned; if this parameter is set to
                        <code>false</code>, then information about
                     records is not returned.</para>
                     </listitem>
                     <listitem>
                        <para>
                           <code>showSubdomains</code> - if this parameter
                     is set to <code>true</code>, then information
                     about subdomains is returned; if this parameter
                     is set to <code>false</code>, then information
                     about subdomains is not returned.</para>
                     </listitem>
                  </itemizedlist>
               </para>
               <!--          <para>The following examples show the default parameter
            settings (<code>showRecords</code>=<code>true&amp;</code>
            <code>showSubdomains</code>=<code>false</code>) for the
            List domain details call. This call returns information
            with records but no information about subdomains. because
            these parameter values are the defaults, this call works
            the same way if both of the parameters are omitted.</para> -->
               <para>The following examples show the parameter settings to
            return information for both records and subdomains
               (<code>showSubdomains</code>=<code>true&amp;</code>
                  <code>showRecords</code>=<code>true</code>) for the List
            domain details call:</para>
               <para><?rax-fo keep-with-next?>The examples also show
            the parameter settings to return basic information only,
            without records or subdomains
               (<code>showRecords</code>=<code>false&amp;</code>
                  <code>showSubdomains</code>=<code>false</code>) for the
            List domain details call:</para>
            </wadl:doc>
            <request>
               <param style="query"
                      type="xs:string"
                      name="showRecords"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>If showRecords is set to true, information about records is returned. 
                  If showRecords is set to false, information about records is not returned.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="showSubdomains "
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>If showSubdomains is set to true, information about subdomains is returned. 
                  If showSubdomains is set to false, information about subdomains is not returned.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=false
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=false
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records and subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=true
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records and subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=true&amp;showSubdomains=true
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details, no records, no subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=false&amp;showSubdomains=false
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details, no records, no subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233?showRecords=false&amp;showSubdomains=false
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 1660

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="2725233" accountId="1234" name="example.com" ttl="3600" emailAddress="sample@rackspace.com" updated="2011-06-24T01:23:15Z" created="2011-06-24T01:12:51Z" comment="Optional domain comment..." xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
    &lt;recordsList totalEntries="6"&gt;
        &lt;record id="A-6817754" type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771" updated="2011-05-19T08:07:08-05:00" created="2011-05-18T14:53:09-05:00"/&gt;
        &lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z"/&gt;
        &lt;record id="NS-6251982" type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="NS-6251983" type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="MX-3151218" type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5" updated="2011-06-24T01:12:53Z" created="2011-06-24T01:12:53Z"/&gt;
        &lt;record id="CNAME-9778009" type="CNAME" name="www.example.com" data="example.com" ttl="5400" updated="2011-06-24T01:12:54Z" created="2011-06-24T01:12:54Z" comment="This is a comment on the CNAME record"/&gt;
    &lt;/recordsList&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records, no subdomains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 1975

{
  "name" : "example.com",
  "id" : 2725233,
  "comment" : "Optional domain comment...",
  "updated" : "2011-06-24T01:23:15.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "recordsList" : {
    "totalEntries" : 6,
    "records" : [ {
      "name" : "ftp.example.com",
      "id" : "A-6817754",
      "type" : "A",
      "data" : "192.0.2.8",
      "updated" : "2011-05-19T13:07:08.000+0000",
      "ttl" : 5771,
      "created" : "2011-05-18T19:53:09.000+0000"
    }, {
      "name" : "example.com",
      "id" : "A-6822994",
      "type" : "A",
      "data" : "192.0.2.17",
      "updated" : "2011-06-24T01:12:52.000+0000",
      "ttl" : 86400,
      "created" : "2011-06-24T01:12:52.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251982",
      "type" : "NS",
      "data" : "dns1.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251983",
      "type" : "NS",
      "data" : "dns2.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "priority" : 5,
      "id" : "MX-3151218",
      "type" : "MX",
      "data" : "mail.example.com",
      "updated" : "2011-06-24T01:12:53.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:53.000+0000"
    }, {
      "name" : "www.example.com",
      "id" : "CNAME-9778009",
      "type" : "CNAME",
      "comment" : "This is a comment on the CNAME record",
      "data" : "example.com",
      "updated" : "2011-06-24T01:12:54.000+0000",
      "ttl" : 5400,
      "created" : "2011-06-24T01:12:54.000+0000"
    } ]
  },
  "ttl" : 3600,
  "emailAddress" : "sample@rackspace.com",
  "created" : "2011-06-24T01:12:51.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records and subdomains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 2421

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="2725233" accountId="1234" name="example.com" ttl="3600" emailAddress="sample@rackspace.com" updated="2011-06-24T01:23:15Z" created="2011-06-24T01:12:51Z" comment="Optional domain comment..." xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
    &lt;recordsList totalEntries="6"&gt;
        &lt;record id="A-6817754" type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771" updated="2011-05-19T08:07:08-05:00" created="2011-05-18T14:53:09-05:00"/&gt;
        &lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z"/&gt;
        &lt;record id="NS-6251982" type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="NS-6251983" type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
        &lt;record id="MX-3151218" type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5" updated="2011-06-24T01:12:53Z" created="2011-06-24T01:12:53Z"/&gt;
        &lt;record id="CNAME-9778009" type="CNAME" name="www.example.com" data="example.com" ttl="5400" updated="2011-06-24T01:12:54Z" created="2011-06-24T01:12:54Z" comment="This is a comment on the CNAME record"/&gt;
    &lt;/recordsList&gt;
    &lt;subdomains totalEntries="4"&gt;
        &lt;domain id="2725257" name="sub1.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:09:34Z" created="2011-06-23T03:09:33Z" comment="1st sample subdomain"/&gt;
        &lt;domain id="2725258" name="sub2.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:52:55Z" created="2011-06-23T03:52:55Z" comment="1st sample subdomain"/&gt;
        &lt;domain id="2725260" name="north.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:10Z" created="2011-06-23T03:53:09Z"/&gt;
        &lt;domain id="2725261" name="south.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:14Z" created="2011-06-23T03:53:14Z" comment="Final sample subdomain"/&gt;
    &lt;/subdomains&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details with records and subdomains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 3020

{
  "name" : "example.com",
  "id" : 2725233,
  "comment" : "Optional domain comment...",
  "updated" : "2011-06-24T01:23:15.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "recordsList" : {
    "totalEntries" : 6,
    "records" : [ {
      "name" : "ftp.example.com",
      "id" : "A-6817754",
      "type" : "A",
      "data" : "192.0.2.8",
      "updated" : "2011-05-19T13:07:08.000+0000",
      "ttl" : 5771,
      "created" : "2011-05-18T19:53:09.000+0000"
    }, {
      "name" : "example.com",
      "id" : "A-6822994",
      "type" : "A",
      "data" : "192.0.2.17",
      "updated" : "2011-06-24T01:12:52.000+0000",
      "ttl" : 86400,
      "created" : "2011-06-24T01:12:52.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251982",
      "type" : "NS",
      "data" : "dns1.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "id" : "NS-6251983",
      "type" : "NS",
      "data" : "dns2.stabletransit.com",
      "updated" : "2011-06-24T01:12:51.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:51.000+0000"
    }, {
      "name" : "example.com",
      "priority" : 5,
      "id" : "MX-3151218",
      "type" : "MX",
      "data" : "mail.example.com",
      "updated" : "2011-06-24T01:12:53.000+0000",
      "ttl" : 3600,
      "created" : "2011-06-24T01:12:53.000+0000"
    }, {
      "name" : "www.example.com",
      "id" : "CNAME-9778009",
      "type" : "CNAME",
      "comment" : "This is a comment on the CNAME record",
      "data" : "example.com",
      "updated" : "2011-06-24T01:12:54.000+0000",
      "ttl" : 5400,
      "created" : "2011-06-24T01:12:54.000+0000"
    } ]
  },
  "subdomains" : {
    "domains" : [ {
      "name" : "sub1.example.com",
      "id" : 2725257,
      "comment" : "1st sample subdomain",
      "updated" : "2011-06-23T03:09:34.000+0000",
      "emailAddress" : "sample@rackspace.com",
      "created" : "2011-06-23T03:09:33.000+0000"
    }, {
      "name" : "sub2.example.com",
      "id" : 2725258,
      "comment" : "1st sample subdomain",
      "updated" : "2011-06-23T03:52:55.000+0000",
      "emailAddress" : "sample@rackspace.com",
      "created" : "2011-06-23T03:52:55.000+0000"
    }, {
      "name" : "north.example.com",
      "id" : 2725260,
      "updated" : "2011-06-23T03:53:10.000+0000",
      "emailAddress" : "sample@rackspace.com",
      "created" : "2011-06-23T03:53:09.000+0000"
    }, {
      "name" : "south.example.com",
      "id" : 2725261,
      "comment" : "Final sample subdomain",
      "updated" : "2011-06-23T03:53:14.000+0000",
      "emailAddress" : "sample@rackspace.com",
      "created" : "2011-06-23T03:53:14.000+0000"
    } ],
    "totalEntries" : 4
  },
  "ttl" : 3600,
  "emailAddress" : "sample@rackspace.com",
  "created" : "2011-06-24T01:12:51.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
     
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details, no records, no subdomains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 570

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="2725233" accountId="1234" name="example.com" ttl="3600" emailAddress="sample@rackspace.com" updated="2011-06-24T01:23:15Z" created="2011-06-24T01:12:51Z" comment="Optional domain comment..." xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain details, no records, no subdomains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 375

{
  "name" : "example.com",
  "id" : 2725233,
  "comment" : "Optional domain comment...",
  "updated" : "2011-06-24T01:23:15.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "ttl" : 3600,
  "emailAddress" : "sample@rackspace.com",
  "created" : "2011-06-24T01:12:51.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="PUT" rax:id="updateDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update domain">
               <para role="shortdesc">Updates the configuration of a
            domain.</para>
               <note>
                  <para>This call returns an asynchronous response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.</para>
               </note>
               <para>This call modifies DNS domain(s) attributes only.
            records cannot be added, modified, or Deleted. Only the
            TTL, email address and comment attributes of a domain can
            be modified.</para>
               <para>If a request cannot be fulfilled due to insufficient or
            invalid data, an <code>HTTP</code>
                  <returnvalue>400 (Bad Request)</returnvalue> error
            response will be returned with information regarding the
            nature of the failure in the body of the response.
            Failures in the validation process are non-recoverable and
            require the caller to correct the cause of the failure and
            POST the request again.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>Refer to the section "DNS Propagation" in the Devguide for
                     information about DNS propagation.</para>
                     </listitem>
                     <listitem>
                        <para>A domain's <code>id</code> is immutable.
                  </para>
                     </listitem>
                     <listitem>
                        <para>When the domain and/or record TTL is supplied
                     by the user, either via a create or update call,
                     the TTL values must be 300 seconds or
                     more.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <note>
                  <para>
                     <code>name</code> cannot be specified, because the
               domain name cannot be modified.</para>
               </note>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update domain: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 309

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain ttl="3600" emailAddress="sample@rackspace.com" comment="Optional domain comment..." xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"/&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For modifying <emphasis xmlns:xi="http://www.w3.org/2001/XInclude">multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para>
                     </wadl:doc>
                  </param>
                  <param name="emailAddress"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@emailAddress">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Email address to use for
                     contacting the domain
                  administrator.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param> 
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update domain: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 105

{
  "comment" : "Optional domain comment...",
  "ttl" : 3600,
  "emailAddress" : "sample@rackspace.com"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--     <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> --> 
               </representation>
            </request> 
            <response status="202"/>
       
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete domain">
               <para role="shortdesc">Deletes a domain from an
            account.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />-->.
               Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.
            </para>
               </note>
               <para>This call deletes one or more specified domains from
            the account; when a domain is deleted, its immediate
            resource records are also deleted from the account. By
            default, if a deleted domain had subdomains, each
            subdomain becomes a root domain and is not deleted; this
            can be overridden by the optional
               <code>deleteSubdomains</code> parameter. Utilizing the
            optional <code>deleteSubdomains</code> parameter on
            domains without subdomains does not result in a failure.
            When a domain is deleted, any and all domain data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted object should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
               <para>In the previous two response examples, the requested
            domain objects could not be deleted, because they were not
            found.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domain: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725260
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domain: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725260
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation> -->
         
               <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation> 
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteDomainAndSubdomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete domain and its subdomains">
               <para role="shortdesc">Deletes a domain and its subdomains
            from an account.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />-->.
               Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.
            </para>
               </note>
               <para>This call deletes one or more specified domains from
            the account; when a domain is deleted, its immediate
            resource records are also deleted from the account. By
            default, if a deleted domain had subdomains, each
            subdomain becomes a root domain and is not deleted; this
            can be overridden by the optional
               <code>deleteSubdomains</code> parameter. Utilizing the
            optional <code>deleteSubdomains</code> parameter on
            domains without subdomains does not result in a failure.
            When a domain is deleted, any and all domain data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted object should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
               <para>In the previous two response examples, the requested
            domain objects could not be deleted, because they were not
            found.</para>
            </wadl:doc>
            <request>
               <param style="query"
                      type="xs:string"
                      name="deleteSubdomains"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"> 
                     <para>If deleteSubdomains is true, also deletes subdomains. If false, subdomains are not deleted.</para>
                  </wadl:doc>
               </param>
               <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domain and subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725260?deleteSubdomains=true
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete domain and subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725260?deleteSubdomains=true
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                  
                  
                  
                  
                  
                  
                  <resource id="changes" path="v1.0/{account}/domains/{domainId}/changes">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="showDomainChanges">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show domain changes">
               <para role="shortdesc">Shows all changes to a specified
            domain <parameter xmlns:xi="http://www.w3.org/2001/XInclude">because</parameter> a specified <code xmlns:xi="http://www.w3.org/2001/XInclude">date/time</code>.</para>
               <para>This call shows all changes to a specified domain
            because a specified <code>date/time</code>. The
               <parameter>because</parameter> parameter is optional
            and defaults to midnight of the current
            day. See the section "Date/Time Format" in the Devguide for details on how to
            specify this parameter's value.</para>
               <para>The following examples show the requests and
            corresponding responses to list the domain changes because
            midnight, GMT-5, on September 13, 2011:</para>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="since" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>The Date/Time from which the domain
                  changes should be shown.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain Changes: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/45678/changes?since=2011-09-13T00:00:00-0500
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain Changes: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/45678/changes?since=2011-09-13T00:00:00-0500
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domain">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain Changes: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 2460

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;changes totalEntries="4" from="2011-09-13T00:00:00-05:00" to="2011-09-19T16:36:01-05:00" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;change accountId="1234" domain="rs.example.com" targetId="45678" targetType="Domain" action="update"&gt;
        &lt;changeDetail field="serial_number" originalValue="1315927395" newValue="1315930302"/&gt;
        &lt;changeDetail field="updated_at" originalValue="Tue Sep 13 15:23:15 UTC 2011" newValue="Tue Sep 13 16:11:42 UTC 2011"/&gt;
    &lt;/change&gt;
    &lt;change domain="rs.example.com" targetId="222222" targetType="MX Record" action="create"&gt;
        &lt;changeDetail field="created_at" originalValue="" newValue="Tue Sep 13 16:11:42 UTC 2011"/&gt;
        &lt;changeDetail field="ttl" originalValue="" newValue="3600"/&gt;
        &lt;changeDetail field="fqdn" originalValue="" newValue="rs.example.com"/&gt;
        &lt;changeDetail field="updated_at" originalValue="" newValue="Tue Sep 13 16:11:42 UTC 2011"/&gt;
        &lt;changeDetail field="destination" originalValue="" newValue="mail.rs.example.com"/&gt;
        &lt;changeDetail field="priority" originalValue="" newValue="1"/&gt;
        &lt;changeDetail field="id" originalValue="" newValue="222222"/&gt;
        &lt;changeDetail field="zone_id" originalValue="" newValue="45678"/&gt;
    &lt;/change&gt;
    &lt;change accountId="1234" domain="rs.example.com" targetId="45678" targetType="Domain" action="update"&gt;
        &lt;changeDetail field="serial_number" originalValue="1310656481" newValue="1315927395"/&gt;
        &lt;changeDetail field="updated_at" originalValue="Thu Jul 14 15:14:41 UTC 2011" newValue="Tue Sep 13 15:23:15 UTC 2011"/&gt;
    &lt;/change&gt;
    &lt;change domain="rs.example.com" targetId="87654" targetType="CNAME Record" action="create"&gt;
        &lt;changeDetail field="created_at" originalValue="" newValue="Tue Sep 13 15:23:15 UTC 2011"/&gt;
        &lt;changeDetail field="ttl" originalValue="" newValue="3600"/&gt;
        &lt;changeDetail field="fqdn" originalValue="" newValue="*.rs.example.com"/&gt;
        &lt;changeDetail field="updated_at" originalValue="" newValue="Tue Sep 13 15:23:15 UTC 2011"/&gt;
        &lt;changeDetail field="destination" originalValue="" newValue="rs.example.com"/&gt;
        &lt;changeDetail field="id" originalValue="" newValue="87654"/&gt;
        &lt;changeDetail field="zone_id" originalValue="" newValue="45678"/&gt;
    &lt;/change&gt;
&lt;/changes&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List domain Changes: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 2762

{
  "from" : "2011-09-13T05:00:00.000+0000",
  "to" : "2011-09-19T21:36:01.000+0000",
  "totalEntries" : 4,
  "changes" : [ {
    "domain" : "rs.example.com",
    "targetType" : "Domain",
    "action" : "update",
    "changeDetails" : [ {
      "field" : "serial_number",
      "newValue" : "1315930302",
      "originalValue" : "1315927395"
    }, {
      "field" : "updated_at",
      "newValue" : "Tue Sep 13 16:11:42 UTC 2011",
      "originalValue" : "Tue Sep 13 15:23:15 UTC 2011"
    } ],
    "accountId" : 1234,
    "targetId" : 45678
  }, {
    "domain" : "rs.example.com",
    "targetType" : "MX Record",
    "action" : "create",
    "changeDetails" : [ {
      "field" : "created_at",
      "newValue" : "Tue Sep 13 16:11:42 UTC 2011",
      "originalValue" : ""
    }, {
      "field" : "ttl",
      "newValue" : "3600",
      "originalValue" : ""
    }, {
      "field" : "fqdn",
      "newValue" : "rs.example.com",
      "originalValue" : ""
    }, {
      "field" : "updated_at",
      "newValue" : "Tue Sep 13 16:11:42 UTC 2011",
      "originalValue" : ""
    }, {
      "field" : "destination",
      "newValue" : "mail.rs.example.com",
      "originalValue" : ""
    }, {
      "field" : "priority",
      "newValue" : "1",
      "originalValue" : ""
    }, {
      "field" : "id",
      "newValue" : "222222",
      "originalValue" : ""
    }, {
      "field" : "zone_id",
      "newValue" : "45678",
      "originalValue" : ""
    } ],
    "targetId" : 222222
  }, {
    "domain" : "rs.example.com",
    "targetType" : "Domain",
    "action" : "update",
    "changeDetails" : [ {
      "field" : "serial_number",
      "newValue" : "1315927395",
      "originalValue" : "1310656481"
    }, {
      "field" : "updated_at",
      "newValue" : "Tue Sep 13 15:23:15 UTC 2011",
      "originalValue" : "Thu Jul 14 15:14:41 UTC 2011"
    } ],
    "accountId" : 1234,
    "targetId" : 45678
  }, {
    "domain" : "rs.example.com",
    "targetType" : "CNAME Record",
    "action" : "create",
    "changeDetails" : [ {
      "field" : "created_at",
      "newValue" : "Tue Sep 13 15:23:15 UTC 2011",
      "originalValue" : ""
    }, {
      "field" : "ttl",
      "newValue" : "3600",
      "originalValue" : ""
    }, {
      "field" : "fqdn",
      "newValue" : "*.rs.example.com",
      "originalValue" : ""
    }, {
      "field" : "updated_at",
      "newValue" : "Tue Sep 13 15:23:15 UTC 2011",
      "originalValue" : ""
    }, {
      "field" : "destination",
      "newValue" : "rs.example.com",
      "originalValue" : ""
    }, {
      "field" : "id",
      "newValue" : "87654",
      "originalValue" : ""
    }, {
      "field" : "zone_id",
      "newValue" : "45678",
      "originalValue" : ""
    } ],
    "targetId" : 87654
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                     
                  
                  <resource id="export" path="v1.0/{account}/domains/{domainId}/export">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="exportDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Export domain">
               <para role="shortdesc">Exports details for a specified
            domain.</para>
               <note>
                  <para>This call returns an asynchronous
            response. Refer to the section "Synchronous and Asynchronous Responses" in Chapter 3 for more 
            details and examples of the way that asynchronous responses work.</para>
               </note>
               <para>This call provides the BIND (Berkeley Internet Name Domain) 9 formatted contents of the
            requested domain. This call is for a single domain only, and as such, does not traverse up or
            down the domain hierarchy for details (that is, no subdomain information is provided).</para>
               <note> 
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>This call is not capable of returning anything for a
                  domain that has been deleted.</para>
                     </listitem>
                     <listitem>
                        <para>The BIND 9 formatted contents of the requested
                  domain will have no comments listed for the domain or
                  for the records of the domain being exported.</para>
                     </listitem>
                     <listitem>
                        <para>The following examples show the
                  <emphasis>final</emphasis> successful response for
                  the asynchronous
                  call.</para>
                     </listitem>
                  </itemizedlist>        
               </note>
         
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export domain: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725339/export
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export domain: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725339/export
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domain">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export domain: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 665

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="2725339" accountId="1234" contentType="BIND_9" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;contents&gt;
    		example.net. 3600 IN SOA dns1.stabletransit.com.
			sample@rackspace.com. 1308874739 3600 3600 3600 3600
			example.net. 86400 IN A 110.11.12.16
			example.net. 3600 IN MX 5 mail2.example.net.
			www.example.net. 5400 IN CNAME example.net.
			example.net. 5600 IN NS dns1.stabletransit.com.
			example.net. 5600 IN NS dns2.stabletransit.com.			
		&lt;/contents&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Export domain: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 476

{
  "id" : 2725339,
  "contentType" : "BIND_9",
  "contents" : "\n    \t\texample.net. 3600 IN SOA dns1.stabletransit.com.\n\t\t\tsample@rackspace.com. 1308874739 3600 3600 3600 3600\n\t\t\texample.net. 86400 IN A 110.11.12.16\n\t\t\texample.net. 3600 IN MX 5 mail2.example.net.\n\t\t\twww.example.net. 5400 IN CNAME example.net.\n\t\t\texample.net. 5600 IN NS dns1.stabletransit.com.\n\t\t\texample.net. 5600 IN NS dns2.stabletransit.com.\t\t\t\n\t\t",
  "accountId" : 1234
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                   <!--  <param style="template" type="xs:string"
                        required="true" name="domainId">
                        <wadl:doc
                           xmlns="http://docbook.org/ns/docbook"
                           xml:lang="EN"><para>ID for the domain.</para></wadl:doc>
                   </param> -->
                     
                  
                  <resource id="clone" path="v1.0/{account}/domains/{domainId}/clone">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="POST" rax:id="cloneDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Clone domain">
               <para role="shortdesc">Clones a domain.</para>
               <para>Creates a
            specified domain (<code xmlns:xi="http://www.w3.org/2001/XInclude">example2.com</code>) by cloning a domain with id
               <emphasis xmlns:xi="http://www.w3.org/2001/XInclude">domainId</emphasis>. All options except cloneName
            assume a default value of <code xmlns:xi="http://www.w3.org/2001/XInclude">true</code>.
            <!--See <xref xmlns:xi="http://www.w3.org/2001/XInclude"
               linkend="clone_domains_parms_options1"/> for the
            description of options.--></para>
               <note>
                  <para>This call returns an asynchronous
               response<!--, as
               described in <xref linkend="sync_asynch_responses"/>.-->
               The AsyncResponse returned will be similar to that
               returned for Create domain but with the request element
               absent because the clone request has no body.
               Refer to the section "Synchronous and Asynchronous Responses" in Chapter 3 
               for more details and examples of the way that asynchronous responses work.</para>        
               </note>
               <para>This call duplicates a single existing domain
            configuration with a new domain name for a specified Cloud
            account. By default, all records and, optionally,
            subdomain(s) are duplicated as well. Both the existing
            domain (referred to as the <emphasis>reference</emphasis>
            domain) and the new cloned domain must exist under the
            same Cloud account.</para>
               <para>See the query parameters table for the parameters and
            options available to specify how the cloning affects
            subdomains, comments, email addresses, and record
            data.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>If the corresponding request cannot be
                     fulfilled due to insufficient or invalid data, or
                     if the reference domain does not exist, an HTTP
                     400 (Bad Request) error response will be returned
                     in the body of the response with information
                     regarding the nature of the failure.</para>
                     </listitem>
                     <listitem>
                        <para>Clone domain is an atomic operation. If there
                     is a failure in the duplication of a single
                     record or subdomain, the entire process will
                     fail. Failures are non-recoverable and require
                     the caller to correct the cause of the failure
                     and <command>POST</command> the request
                     again.</para>
                     </listitem>
                     <listitem>
                        <para>The Clone domain operation is currently
                     supported for domains under a given Cloud
                     account. The cloned domain must belong to the
                     same account as the reference domain.</para>
                     </listitem>
                     <listitem>
                        <para>The Clone domain operation will return an
                     exception if the operation would result in
                     creating a domain that already exists. The
                     exception would indicate that the domain already
                     exists.</para>
                     </listitem>
                     <listitem>
                        <para>The Clone domain operation may take slightly
                     longer to complete than a comparable Create
                     domain request.</para>
                     </listitem>
                     <listitem>
                        <para>PTR records (for Reverse DNS) are not
                     represented when a domain is created and,
                     therefore, are not included when a domain is
                     cloned.</para>
                     </listitem>
                     <listitem>
                        <para>If your reference domain already has both
                     default Rackspace Nameserver (NS) records, the
                     cloned domain will be created with no additional
                     default Rackspace NS records. If your reference
                     domain lacks one or both of the default Rackspace
                     NS records, the cloned domain will be created
                     with additional Rackspace default NS records to
                     make a total of two default Rackspace NS records.
                     If the presence of default Rackspace NS records
                     is not your preference, they can be deleted from
                     the cloned domain as long as at least one NS
                     record remains (Rackspace or
                     non-Rackspace).</para>
                     </listitem>
                     <listitem>
                        <para>Any non-default (non-Rackspace) NS records in
                     the reference domain are cloned and modified in a
                     way that is consistent with all other record
                     types.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <para>According to the <emphasis>cloneName</emphasis>
            specified, the domain name and record name(s) will
            automatically be modified and replaced in the new cloned
            domain as part of the cloning process and cannot be
            influenced by any request options. See the table below for
            the parameters and options available to specify how the
            cloning affects subdomains, comments, email addresses, and
            record data.</para>
               <para xmlns:xi="http://www.w3.org/2001/XInclude" security="internal">The following table lists the
            parameters and options for Clone domain.</para>
               <table xmlns:xi="http://www.w3.org/2001/XInclude"
                      rules="all"
                      xml:id="clone_domains_parms_options1"
                      security="internal">
                  <caption>Parameters and Options for Clone domain</caption>
                  <thead>
                     <tr>
                        <td colspan="1">Parameter/Option Name </td>
                        <td colspan="3">Description</td>
                        <td colspan="1">Required</td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td colspan="1">cloneName</td>
                        <td colspan="3">The name of the new (cloned)
                     domain.</td>
                        <td colspan="1">Yes.</td>
                     </tr>
                     <tr>
                        <td colspan="1">cloneSubdomains</td>
                        <td colspan="3">Recursively clone subdomains. If set
                     to <code>false</code>, then only the top level
                     domain and its records are cloned. Cloned
                     subdomain configurations are modified the same
                     way that cloned top level domain configurations
                     are modified.</td>
                        <td colspan="1">
                           <para>No.</para>
                           <para>Default=<code>true</code>.</para>
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">modifyComment</td>
                        <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in comments
                     on the cloned (new) domain.</td>
                        <td colspan="1">
                           <para>No.</para>
                           <para>Default=<code>true</code>.</para>
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">modifyEmailAddress</td>
                        <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in email
                     addresses on the cloned (new) domain.</td>
                        <td colspan="1">
                           <para>No.</para>
                           <para>Default=<code>true</code>.</para>
                        </td>
                     </tr>
                     <tr>
                        <td colspan="1">modifyRecordData</td>
                        <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in data
                     fields (of records) on the cloned (new) domain.
                     Does not affect NS records.</td>
                        <td colspan="1">
                           <para>No.</para>
                           <para>Default=<code>true</code>.</para>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <para>The following examples show the Clone domain
            requests:</para>
               <note>
                  <para>The following examples show the
                  <emphasis>initial</emphasis> 202 Accepted response
               for the asynchronous call and indicate that the task
               has been accepted for
               processing.<!-- Refer to <xref
                  linkend="sync_asynch_responses"/> for a description
               of how the asynchronous call works.--></para>
               </note>
               <para>The following are examples of the reference domain and
            the resulting cloned domain:</para>
            </wadl:doc>
            <request>
               <param style="query"
                      type="xs:string"
                      name="cloneName"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>The name of the new (cloned)
                  domain.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="cloneSubdomains"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Recursively clone subdomains. If
                  set to false, then only the top level domain and its
                  records are cloned. Cloned subdomain configurations
                  are modified the same way that cloned top level
                  domain configurations are
               modified.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="modifyRecordData"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Replaces occurrences of the
                  reference domain name with the new domain name in
                  data fields (of records) on the cloned (new) domain.
                  Does not affect NS records.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="modifyEmailAddress"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Replaces occurrences of the
                  reference domain name with the new domain name in
                  email addresses on the cloned (new)
               domain.</para>
                  </wadl:doc>
               </param>
               <param style="query"
                      type="xs:string"
                      name="modifyComment"
                      required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Replaces occurrences of the
                  reference domain name with the new domain name in
                  comments on the cloned (new)
               domain.</para>
                  </wadl:doc>
               </param>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Clone domain: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/3586209/clone?cloneName=clone1.com
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Clone domain: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/3586209/clone?cloneName=clone1.com
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Initial (202) Clone domain: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 592

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;asyncresponse xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;jobId&gt;52179628-6df6-46a0-bdb3-078769cd0e9d&lt;/jobId&gt;
    &lt;callbackUrl&gt;https://dns.api.rackspacecloud.com/v1.0/1234/status/52179628-6df6-46a0-bdb3-078769cd0e9d&lt;/callbackUrl&gt;
    &lt;status&gt;RUNNING&lt;/status&gt;
    &lt;requestUrl&gt;https://dns.api.rackspacecloud.com/v1.0/1234/domains/3586209/clone?cloneName=clone1.com&lt;/requestUrl&gt;
    &lt;verb&gt;POST&lt;/verb&gt;
&lt;/asyncresponse&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Initial (202) Clone domain: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 315

{
  "status" : "RUNNING",
  "verb" : "POST",
  "jobId" : "52179628-6df6-46a0-bdb3-078769cd0e9d",
  "callbackUrl" : "https://dns.api.rackspacecloud.com/v1.0/1234/status/52179628-6df6-46a0-bdb3-078769cd0e9d",
  "requestUrl" : "https://dns.api.rackspacecloud.com/v1.0/1234/domains/3586209/clone?cloneName=clone1.com"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Reference (Existing) domain cloner.com: XML">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 2804

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="3586209" accountId="1234" name="cloner.com" ttl="7788" emailAddress="owner@cloner.com" updated="2013-05-06T12:10:55-05:00" created="2013-05-06T12:10:51-05:00" comment="cloner.com is a template domain for cloning others. cloner.com has subdomains - sub1.cloner.com, sub2.cloner.com, sub3.cloner.com" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
    &lt;recordsList totalEntries="7"&gt;
        &lt;record id="A-9516802" type="A" name="ftp.cloner.com" data="192.0.2.8" ttl="5771" updated="2013-05-06T12:10:52-05:00" created="2013-05-06T12:10:52-05:00"/&gt;
        &lt;record id="A-9516803" type="A" name="cloner.com" data="192.0.2.17" ttl="86400" updated="2013-05-06T12:10:52-05:00" created="2013-05-06T12:10:52-05:00"/&gt;
        &lt;record id="NS-8504404" type="NS" name="cloner.com" data="dns1.stabletransit.com" ttl="7788" updated="2013-05-06T12:10:51-05:00" created="2013-05-06T12:10:51-05:00"/&gt;
        &lt;record id="NS-8504405" type="NS" name="cloner.com" data="dns2.stabletransit.com" ttl="7788" updated="2013-05-06T12:10:51-05:00" created="2013-05-06T12:10:51-05:00"/&gt;
        &lt;record id="NS-8504406" type="NS" name="cloner.com" data="server1.cloner.com" ttl="3600" updated="2013-05-06T12:10:53-05:00" created="2013-05-06T12:10:53-05:00"/&gt;
        &lt;record id="MX-4220031" type="MX" name="cloner.com" data="mail.cloner.com" ttl="3600" priority="5" updated="2013-05-06T12:10:54-05:00" created="2013-05-06T12:10:54-05:00"/&gt;
        &lt;record id="CNAME-11336151" type="CNAME" name="www.cloner.com" data="cloner.com" ttl="5400" updated="2013-05-06T12:10:55-05:00" created="2013-05-06T12:10:55-05:00" comment="This is a comment on the CNAME record"/&gt;
    &lt;/recordsList&gt;
    &lt;subdomains totalEntries="3"&gt;
        &lt;domain id="3586210" name="sub1.cloner.com" emailAddress="administrator@rackspace.com" updated="2013-05-06T12:10:56-05:00" created="2013-05-06T12:10:55-05:00" comment="sub1.cloner.com uses rackspace.com for email domain name. Sister subdomains are sub2.cloner.com, sub3.cloner.com"/&gt;
        &lt;domain id="3586211" name="sub2.cloner.com" emailAddress="admin@cloner.com" updated="2013-05-06T12:10:56-05:00" created="2013-05-06T12:10:56-05:00" comment="sub1.cloner.com uses parent domain name, cloner.com, for email domain name"/&gt;
        &lt;domain id="3586212" name="sub3.cloner.com" emailAddress="adm@sub3.cloner.com" updated="2013-05-06T12:10:57-05:00" created="2013-05-06T12:10:57-05:00" comment="sub3.cloner.com uses it's own domain name for email domain name"/&gt;
    &lt;/subdomains&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Resulting (Cloned) domain clone1.com: XML">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 2804

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domain id="3586213" accountId="1234" name="clone1.com" ttl="7788" emailAddress="owner@clone1.com" updated="2013-05-06T12:17:35-05:00" created="2013-05-06T12:17:31-05:00" comment="clone1.com is a template domain for cloning others. clone1.com has subdomains - sub1.clone1.com, sub2.clone1.com, sub3.clone1.com" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;nameservers&gt;
        &lt;nameserver name="dns1.stabletransit.com"/&gt;
        &lt;nameserver name="dns2.stabletransit.com"/&gt;
    &lt;/nameservers&gt;
    &lt;recordsList totalEntries="7"&gt;
        &lt;record id="A-9516805" type="A" name="ftp.clone1.com" data="192.0.2.8" ttl="5771" updated="2013-05-06T12:17:32-05:00" created="2013-05-06T12:17:32-05:00"/&gt;
        &lt;record id="A-9516806" type="A" name="clone1.com" data="192.0.2.17" ttl="86400" updated="2013-05-06T12:17:33-05:00" created="2013-05-06T12:17:33-05:00"/&gt;
        &lt;record id="NS-8504413" type="NS" name="clone1.com" data="dns1.stabletransit.com" ttl="7788" updated="2013-05-06T12:17:31-05:00" created="2013-05-06T12:17:31-05:00"/&gt;
        &lt;record id="NS-8504414" type="NS" name="clone1.com" data="dns2.stabletransit.com" ttl="7788" updated="2013-05-06T12:17:31-05:00" created="2013-05-06T12:17:31-05:00"/&gt;
        &lt;record id="NS-8504415" type="NS" name="clone1.com" data="server1.clone1.com" ttl="3600" updated="2013-05-06T12:17:34-05:00" created="2013-05-06T12:17:34-05:00"/&gt;
        &lt;record id="MX-4220032" type="MX" name="clone1.com" data="mail.clone1.com" ttl="3600" priority="5" updated="2013-05-06T12:17:35-05:00" created="2013-05-06T12:17:35-05:00"/&gt;
        &lt;record id="CNAME-11336152" type="CNAME" name="www.clone1.com" data="clone1.com" ttl="5400" updated="2013-05-06T12:17:35-05:00" created="2013-05-06T12:17:35-05:00" comment="This is a comment on the CNAME record"/&gt;
    &lt;/recordsList&gt;
    &lt;subdomains totalEntries="3"&gt;
        &lt;domain id="3586214" name="sub1.clone1.com" emailAddress="administrator@rackspace.com" updated="2013-05-06T12:17:36-05:00" created="2013-05-06T12:17:36-05:00" comment="sub1.clone1.com uses rackspace.com for email domain name. Sister subdomains are sub2.clone1.com, sub3.clone1.com"/&gt;
        &lt;domain id="3586215" name="sub2.clone1.com" emailAddress="admin@clone1.com" updated="2013-05-06T12:17:37-05:00" created="2013-05-06T12:17:37-05:00" comment="sub1.clone1.com uses parent domain name, clone1.com, for email domain name"/&gt;
        &lt;domain id="3586216" name="sub3.clone1.com" emailAddress="adm@sub3.clone1.com" updated="2013-05-06T12:17:37-05:00" created="2013-05-06T12:17:37-05:00" comment="sub3.clone1.com uses it's own domain name for email domain name"/&gt;
    &lt;/subdomains&gt;
&lt;/domain&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Reference (Existing) domain cloner.com: JSON">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 3325

{
  "name" : "cloner.com",
  "id" : 3586209,
  "comment" : "cloner.com is a template domain for cloning others. cloner.com has subdomains - sub1.cloner.com, sub2.cloner.com, sub3.cloner.com",
  "updated" : "2013-05-06T17:10:55.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "recordsList" : {
    "totalEntries" : 7,
    "records" : [ {
      "name" : "ftp.cloner.com",
      "id" : "A-9516802",
      "type" : "A",
      "data" : "192.0.2.8",
      "updated" : "2013-05-06T17:10:52.000+0000",
      "ttl" : 5771,
      "created" : "2013-05-06T17:10:52.000+0000"
    }, {
      "name" : "cloner.com",
      "id" : "A-9516803",
      "type" : "A",
      "data" : "192.0.2.17",
      "updated" : "2013-05-06T17:10:52.000+0000",
      "ttl" : 86400,
      "created" : "2013-05-06T17:10:52.000+0000"
    }, {
      "name" : "cloner.com",
      "id" : "NS-8504404",
      "type" : "NS",
      "data" : "dns1.stabletransit.com",
      "updated" : "2013-05-06T17:10:51.000+0000",
      "ttl" : 7788,
      "created" : "2013-05-06T17:10:51.000+0000"
    }, {
      "name" : "cloner.com",
      "id" : "NS-8504405",
      "type" : "NS",
      "data" : "dns2.stabletransit.com",
      "updated" : "2013-05-06T17:10:51.000+0000",
      "ttl" : 7788,
      "created" : "2013-05-06T17:10:51.000+0000"
    }, {
      "name" : "cloner.com",
      "id" : "NS-8504406",
      "type" : "NS",
      "data" : "server1.cloner.com",
      "updated" : "2013-05-06T17:10:53.000+0000",
      "ttl" : 3600,
      "created" : "2013-05-06T17:10:53.000+0000"
    }, {
      "name" : "cloner.com",
      "priority" : 5,
      "id" : "MX-4220031",
      "type" : "MX",
      "data" : "mail.cloner.com",
      "updated" : "2013-05-06T17:10:54.000+0000",
      "ttl" : 3600,
      "created" : "2013-05-06T17:10:54.000+0000"
    }, {
      "name" : "www.cloner.com",
      "id" : "CNAME-11336151",
      "type" : "CNAME",
      "comment" : "This is a comment on the CNAME record",
      "data" : "cloner.com",
      "updated" : "2013-05-06T17:10:55.000+0000",
      "ttl" : 5400,
      "created" : "2013-05-06T17:10:55.000+0000"
    } ]
  },
  "subdomains" : {
    "domains" : [ {
      "name" : "sub1.cloner.com",
      "id" : 3586210,
      "comment" : "sub1.cloner.com uses rackspace.com for email domain name. Sister subdomains are sub2.cloner.com, sub3.cloner.com",
      "updated" : "2013-05-06T17:10:56.000+0000",
      "emailAddress" : "administrator@rackspace.com",
      "created" : "2013-05-06T17:10:55.000+0000"
    }, {
      "name" : "sub2.cloner.com",
      "id" : 3586211,
      "comment" : "sub1.cloner.com uses parent domain name, cloner.com, for email domain name",
      "updated" : "2013-05-06T17:10:56.000+0000",
      "emailAddress" : "admin@cloner.com",
      "created" : "2013-05-06T17:10:56.000+0000"
    }, {
      "name" : "sub3.cloner.com",
      "id" : 3586212,
      "comment" : "sub3.cloner.com uses it's own domain name for email domain name",
      "updated" : "2013-05-06T17:10:57.000+0000",
      "emailAddress" : "adm@sub3.cloner.com",
      "created" : "2013-05-06T17:10:57.000+0000"
    } ],
    "totalEntries" : 3
  },
  "ttl" : 7788,
  "emailAddress" : "owner@cloner.com",
  "created" : "2013-05-06T17:10:51.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Resulting (Cloned) domain clone1.com: JSON">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 3325

{
  "name" : "clone1.com",
  "id" : 3586213,
  "comment" : "clone1.com is a template domain for cloning others. clone1.com has subdomains - sub1.clone1.com, sub2.clone1.com, sub3.clone1.com",
  "updated" : "2013-05-06T17:17:35.000+0000",
  "nameservers" : [ {
    "name" : "dns1.stabletransit.com"
  }, {
    "name" : "dns2.stabletransit.com"
  } ],
  "accountId" : 1234,
  "recordsList" : {
    "totalEntries" : 7,
    "records" : [ {
      "name" : "ftp.clone1.com",
      "id" : "A-9516805",
      "type" : "A",
      "data" : "192.0.2.8",
      "updated" : "2013-05-06T17:17:32.000+0000",
      "ttl" : 5771,
      "created" : "2013-05-06T17:17:32.000+0000"
    }, {
      "name" : "clone1.com",
      "id" : "A-9516806",
      "type" : "A",
      "data" : "192.0.2.17",
      "updated" : "2013-05-06T17:17:33.000+0000",
      "ttl" : 86400,
      "created" : "2013-05-06T17:17:33.000+0000"
    }, {
      "name" : "clone1.com",
      "id" : "NS-8504413",
      "type" : "NS",
      "data" : "dns1.stabletransit.com",
      "updated" : "2013-05-06T17:17:31.000+0000",
      "ttl" : 7788,
      "created" : "2013-05-06T17:17:31.000+0000"
    }, {
      "name" : "clone1.com",
      "id" : "NS-8504414",
      "type" : "NS",
      "data" : "dns2.stabletransit.com",
      "updated" : "2013-05-06T17:17:31.000+0000",
      "ttl" : 7788,
      "created" : "2013-05-06T17:17:31.000+0000"
    }, {
      "name" : "clone1.com",
      "id" : "NS-8504415",
      "type" : "NS",
      "data" : "server1.clone1.com",
      "updated" : "2013-05-06T17:17:34.000+0000",
      "ttl" : 3600,
      "created" : "2013-05-06T17:17:34.000+0000"
    }, {
      "name" : "clone1.com",
      "priority" : 5,
      "id" : "MX-4220032",
      "type" : "MX",
      "data" : "mail.clone1.com",
      "updated" : "2013-05-06T17:17:35.000+0000",
      "ttl" : 3600,
      "created" : "2013-05-06T17:17:35.000+0000"
    }, {
      "name" : "www.clone1.com",
      "id" : "CNAME-11336152",
      "type" : "CNAME",
      "comment" : "This is a comment on the CNAME record",
      "data" : "clone1.com",
      "updated" : "2013-05-06T17:17:35.000+0000",
      "ttl" : 5400,
      "created" : "2013-05-06T17:17:35.000+0000"
    } ]
  },
  "subdomains" : {
    "domains" : [ {
      "name" : "sub1.clone1.com",
      "id" : 3586214,
      "comment" : "sub1.clone1.com uses rackspace.com for email domain name. Sister subdomains are sub2.clone1.com, sub3.clone1.com",
      "updated" : "2013-05-06T17:17:36.000+0000",
      "emailAddress" : "administrator@rackspace.com",
      "created" : "2013-05-06T17:17:36.000+0000"
    }, {
      "name" : "sub2.clone1.com",
      "id" : 3586215,
      "comment" : "sub1.clone1.com uses parent domain name, clone1.com, for email domain name",
      "updated" : "2013-05-06T17:17:37.000+0000",
      "emailAddress" : "admin@clone1.com",
      "created" : "2013-05-06T17:17:37.000+0000"
    }, {
      "name" : "sub3.clone1.com",
      "id" : 3586216,
      "comment" : "sub3.clone1.com uses it's own domain name for email domain name",
      "updated" : "2013-05-06T17:17:37.000+0000",
      "emailAddress" : "adm@sub3.clone1.com",
      "created" : "2013-05-06T17:17:37.000+0000"
    } ],
    "totalEntries" : 3
  },
  "ttl" : 7788,
  "emailAddress" : "owner@clone1.com",
  "created" : "2013-05-06T17:17:31.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="409">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemAlreadyExists"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
            
         </method>
      </resource>
                     
                     <!--<method href="#cloneDomainById"/>-->
                  
                  <resource id="subdomains" path="v1.0/{account}/domains/{domainId}/subdomains">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="listSubdomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List subdomains">
               <para role="shortdesc">Lists <glossterm xmlns:xi="http://www.w3.org/2001/XInclude" baseform="domain">domains</glossterm> that are
               <glossterm xmlns:xi="http://www.w3.org/2001/XInclude" baseform="subdomain">subdomains</glossterm> of the
            specified domain.</para>
               <para>This call provides a list of all DNS domains that are
            subdomains for a specified domain. The resulting list is
            flat, and does not break the domains down hierarchically
            by subdomain.</para>
               <note>
                  <para>By default, returns a maximum of 100 items at a time
               if no <code>limit</code> is specified. To navigate the
               collection returned, the parameters <code>limit</code>
               and <code>offset</code> can be set in the URI (for
               example:
               <code>limit=10&amp;offset=0</code>). Refer to the section "Pagination" in the Devguide for details.</para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List subdomains: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/subdomains
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List subdomains: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/subdomains
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List subdomains: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 952

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;subdomains totalEntries="4" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725257" name="sub1.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:09:34Z" created="2011-06-23T03:09:33Z" comment="1st sample subdomain"/&gt;
    &lt;domain id="2725258" name="sub2.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:52:55Z" created="2011-06-23T03:52:55Z" comment="1st sample subdomain"/&gt;
    &lt;domain id="2725260" name="north.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:10Z" created="2011-06-23T03:53:09Z"/&gt;
    &lt;domain id="2725261" name="south.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:53:14Z" created="2011-06-23T03:53:14Z" comment="Final sample subdomain"/&gt;
&lt;/subdomains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List subdomains: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 966

{
  "domains" : [ {
    "name" : "sub1.example.com",
    "id" : 2725257,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:09:34.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:09:33.000+0000"
  }, {
    "name" : "sub2.example.com",
    "id" : 2725258,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:52:55.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:52:55.000+0000"
  }, {
    "name" : "north.example.com",
    "id" : 2725260,
    "updated" : "2011-06-23T03:53:10.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:53:09.000+0000"
  }, {
    "name" : "south.example.com",
    "id" : 2725261,
    "comment" : "Final sample subdomain",
    "updated" : "2011-06-23T03:53:14.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:53:14.000+0000"
  } ],
  "totalEntries" : 4
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                     
                  
                  <resource id="records" path="v1.0/{account}/domains/{domainId}/records">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <method name="GET" rax:id="listRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List records">
               <para role="shortdesc">Lists all records configured for the
            specified domain. SOA cannot be modified.</para>
               <para>This call lists all records configured for the
            specified domain.</para>
               <note>
                  <para>By default, returns a maximum of 100 items at a time
               if no <code>limit</code> is specified. To navigate the
               collection returned, the parameters <code>limit</code>
               and <code>offset</code> can be set in the URI (for
               example:
               <code>limit=10&amp;offset=0</code>)<!--  , as
               described in <xref linkend="pagination"/> -->.</para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List records: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List records: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:recordsList">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List records: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 1273

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;recordsList totalEntries="6" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;record id="A-6817754" type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771" updated="2011-05-19T08:07:08-05:00" created="2011-05-18T14:53:09-05:00"/&gt;
    &lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z"/&gt;
    &lt;record id="NS-6251982" type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;record id="NS-6251983" type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;record id="MX-3151218" type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5" updated="2011-06-24T01:12:53Z" created="2011-06-24T01:12:53Z"/&gt;
    &lt;record id="CNAME-9778009" type="CNAME" name="www.example.com" data="example.com" ttl="5400" updated="2011-06-24T01:12:54Z" created="2011-06-24T01:12:54Z" comment="This is a comment on the CNAME record"/&gt;
&lt;/recordsList&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List records: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 1474

{
  "totalEntries" : 6,
  "records" : [ {
    "name" : "ftp.example.com",
    "id" : "A-6817754",
    "type" : "A",
    "data" : "192.0.2.8",
    "updated" : "2011-05-19T13:07:08.000+0000",
    "ttl" : 5771,
    "created" : "2011-05-18T19:53:09.000+0000"
  }, {
    "name" : "example.com",
    "id" : "A-6822994",
    "type" : "A",
    "data" : "192.0.2.17",
    "updated" : "2011-06-24T01:12:52.000+0000",
    "ttl" : 86400,
    "created" : "2011-06-24T01:12:52.000+0000"
  }, {
    "name" : "example.com",
    "id" : "NS-6251982",
    "type" : "NS",
    "data" : "dns1.stabletransit.com",
    "updated" : "2011-06-24T01:12:51.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:51.000+0000"
  }, {
    "name" : "example.com",
    "id" : "NS-6251983",
    "type" : "NS",
    "data" : "dns2.stabletransit.com",
    "updated" : "2011-06-24T01:12:51.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:51.000+0000"
  }, {
    "name" : "example.com",
    "priority" : 5,
    "id" : "MX-3151218",
    "type" : "MX",
    "data" : "mail.example.com",
    "updated" : "2011-06-24T01:12:53.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:53.000+0000"
  }, {
    "name" : "www.example.com",
    "id" : "CNAME-9778009",
    "type" : "CNAME",
    "comment" : "This is a comment on the CNAME record",
    "data" : "example.com",
    "updated" : "2011-06-24T01:12:54.000+0000",
    "ttl" : 5400,
    "created" : "2011-06-24T01:12:54.000+0000"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="GET" rax:id="searchRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Search records">
               <para role="shortdesc">Searches all records for a specified
            domain for a specified type that match a specified
               <parameter xmlns:xi="http://www.w3.org/2001/XInclude">name</parameter> and/or <parameter xmlns:xi="http://www.w3.org/2001/XInclude">data</parameter>.</para>
               <para>Records can be searched within a domain. The API allows
            for the caller to supply record type, name, and/or data as
            query parameters, which instruct the system to only return
            records for a specified type and matching a specified name
            and/or data. When searching, the
               <parameter>type</parameter> is
               <emphasis>required</emphasis>, while the
               <parameter>name</parameter> and
               <parameter>data</parameter> query parameters are
            optional. The responses from a record search have the same
            format as the responses for list records.</para>
               <note>
                  <para>By default, returns a maximum of 100 items at a time
               if no <code>limit</code> is specified. To navigate the
               collection returned, the parameters <code>limit</code>
               and <code>offset</code> can be set in the URI (for
               example:
               <code>limit=10&amp;offset=0</code>). Refer to the section "Pagination" in the Devguide for details.<!-- , as
               described in <xref linkend="pagination"/> --></para>
               </note>
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="type" required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Type of the record.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="name" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Name of the record.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="data" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Data for the record.</para>
                  </wadl:doc>
               </param>
            </request>
            <response status="200"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="POST" rax:id="addRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Add records">
               <para role="shortdesc">Adds one or more records to a
            specified domain.</para>
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />--></para>
               </note>
               <para>This call adds new record(s) to a specified
            domain.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>If you submit a request with multiple records,
                     and one or more of those records fails, the
                     entire request fails.</para>
                     </listitem>
                     <listitem>
                        <para>When a domain is created, and no TTL (Time To
                     Live) is specified, a default value of 3600
                     seconds is used. The domain's TTL value is
                     inherited by the record. When the domain and/or
                     record TTL is supplied by the user, either via a
                     create or update call, the TTL values must be 300
                     seconds or more.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <note>
                  <para>
                     <code>id</code> for the record must not be
               specified.</para>
               </note>
               <note>
                  <para>The following examples show the
                  <emphasis>final</emphasis> successful response for
               the asynchronous
               call.<!-- Refer to <xref
                  linkend="sync_asynch_responses"/> for a description
               of how the asynchronous call works.--></para>
               </note>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:records">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add records: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 777

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;recordsList xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;record type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771"/&gt;
    &lt;record type="A" name="example.com" data="192.0.2.17" ttl="86400"/&gt;
    &lt;record type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600"/&gt;
    &lt;record type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600"/&gt;
    &lt;record type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5"/&gt;
    &lt;record type="CNAME" name="www.example.com" data="example.com" ttl="5400" comment="This is a comment on the CNAME record"/&gt;
&lt;/recordsList&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="type"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="$.records[*].type">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The record type to
                  add.</para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="$.records[*].name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="$.records[*].data">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The data field for PTR, A, and
                     AAAA records must be a valid IPv4 or IPv6 IP
                     address.</para>
                     </wadl:doc>
                  </param>
                  <param name="priority"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="$.records[*].priority">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Required for MX and SRV records,
                     but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="$.records[*].ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="$.records[*].comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param> 
            
                  <!--           <param name="type" style="plain" type="xs:string"
               required="true" path="FIXME/@type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type to
                  add.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR, A, and
                     AAAA records must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Required for MX and SRV records,
                     but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add records: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 725

{
  "records" : [ {
    "name" : "ftp.example.com",
    "type" : "A",
    "data" : "192.0.2.8",
    "ttl" : 5771
  }, {
    "name" : "example.com",
    "type" : "A",
    "data" : "192.0.2.17",
    "ttl" : 86400
  }, {
    "name" : "example.com",
    "type" : "NS",
    "data" : "dns1.stabletransit.com",
    "ttl" : 3600
  }, {
    "name" : "example.com",
    "type" : "NS",
    "data" : "dns2.stabletransit.com",
    "ttl" : 3600
  }, {
    "name" : "example.com",
    "priority" : 5,
    "type" : "MX",
    "data" : "mail.example.com",
    "ttl" : 3600
  }, {
    "name" : "www.example.com",
    "type" : "CNAME",
    "comment" : "This is a comment on the CNAME record",
    "data" : "example.com",
    "ttl" : 5400
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--        <param name="type" style="plain" type="xs:string"
               required="true" path="$.records[*].type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type to
                  add.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR, A, and
                     AAAA records must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Required for MX and SRV records,
                     but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation> 
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:records">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add records: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 1273

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;recordsList totalEntries="6" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;record id="A-6817754" type="A" name="ftp.example.com" data="192.0.2.8" ttl="5771" updated="2011-05-19T08:07:08-05:00" created="2011-05-18T14:53:09-05:00"/&gt;
    &lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z"/&gt;
    &lt;record id="NS-6251982" type="NS" name="example.com" data="dns1.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;record id="NS-6251983" type="NS" name="example.com" data="dns2.stabletransit.com" ttl="3600" updated="2011-06-24T01:12:51Z" created="2011-06-24T01:12:51Z"/&gt;
    &lt;record id="MX-3151218" type="MX" name="example.com" data="mail.example.com" ttl="3600" priority="5" updated="2011-06-24T01:12:53Z" created="2011-06-24T01:12:53Z"/&gt;
    &lt;record id="CNAME-9778009" type="CNAME" name="www.example.com" data="example.com" ttl="5400" updated="2011-06-24T01:12:54Z" created="2011-06-24T01:12:54Z" comment="This is a comment on the CNAME record"/&gt;
&lt;/recordsList&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Add records: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 1474

{
  "totalEntries" : 6,
  "records" : [ {
    "name" : "ftp.example.com",
    "id" : "A-6817754",
    "type" : "A",
    "data" : "192.0.2.8",
    "updated" : "2011-05-19T13:07:08.000+0000",
    "ttl" : 5771,
    "created" : "2011-05-18T19:53:09.000+0000"
  }, {
    "name" : "example.com",
    "id" : "A-6822994",
    "type" : "A",
    "data" : "192.0.2.17",
    "updated" : "2011-06-24T01:12:52.000+0000",
    "ttl" : 86400,
    "created" : "2011-06-24T01:12:52.000+0000"
  }, {
    "name" : "example.com",
    "id" : "NS-6251982",
    "type" : "NS",
    "data" : "dns1.stabletransit.com",
    "updated" : "2011-06-24T01:12:51.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:51.000+0000"
  }, {
    "name" : "example.com",
    "id" : "NS-6251983",
    "type" : "NS",
    "data" : "dns2.stabletransit.com",
    "updated" : "2011-06-24T01:12:51.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:51.000+0000"
  }, {
    "name" : "example.com",
    "priority" : 5,
    "id" : "MX-3151218",
    "type" : "MX",
    "data" : "mail.example.com",
    "updated" : "2011-06-24T01:12:53.000+0000",
    "ttl" : 3600,
    "created" : "2011-06-24T01:12:53.000+0000"
  }, {
    "name" : "www.example.com",
    "id" : "CNAME-9778009",
    "type" : "CNAME",
    "comment" : "This is a comment on the CNAME record",
    "data" : "example.com",
    "updated" : "2011-06-24T01:12:54.000+0000",
    "ttl" : 5400,
    "created" : "2011-06-24T01:12:54.000+0000"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="PUT" rax:id="updateRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update records">
               <para role="shortdesc">Updates the configuration of records
            in the domain.</para>
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />--></para>
               </note>
               <para>This call updates the configuration of
            records in a specified domain.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>If you submit a request with multiple records,
                     and one or more of those records fails, the
                     entire request fails.</para>
                     </listitem>
                     <listitem>
                        <para>When the domain and/or record TTL is supplied
                     by the user, either via a create or update call,
                     the TTL values must be 300 seconds or
                     more.</para>
                     </listitem>
                     <listitem>
                        <para>The only attributes that you can Update on a
                     record (during a <command>PUT</command>) are the
                        <code>data</code>, <code>priority</code> (for
                     MX and SRV records), <code>ttl</code>, and
                        <code>comment</code> attributes.</para>
                     </listitem>
                  </itemizedlist>
               </note>
            </wadl:doc>
            <request>
  <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update Record Configuration: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-record-config_request.xml"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="FIXME/@id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
  </representation> 
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update Record Configuration: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-record-config_request.json"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation> -->
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:records">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update records Configuration: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 432

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;recordsList xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;record id="MX-3151218" name="example.com" data="mail.example.com" ttl="3600"/&gt;
    &lt;record id="CNAME-9778009" name="www.example.com" comment="This is a comment on the CNAME record"/&gt;
&lt;/recordsList&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For modifying <emphasis xmlns:xi="http://www.w3.org/2001/XInclude">multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                        <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@data">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The data field is required for
                     PTR and TXT records only. For PTR records, the data field must be a valid IPv4 or IPv6 IP
                     address.</para>
                     </wadl:doc>
                  </param>
                  <param name="priority"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@priority">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update records Configuration: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 253

{
  "records" : [ {
    "name" : "example.com",
    "id" : "MX-3151218",
    "data" : "mail.example.com",
    "ttl" : 3600
  }, {
    "name" : "www.example.com",
    "id" : "CNAME-9778009",
    "comment" : "This is a comment on the CNAME record"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--            <param name="id" style="plain" type="xs:string"
               required="true" path="$.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
               </representation>
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteRecords">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete records">
               <para role="shortdesc">Deletes multiple records from the
            domain.</para>
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />--></para>
               </note>
               <para>These calls delete a specified record or multiple
            records from a specified domain.</para>
               <para>When a record is deleted, any and all record data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted record should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
               <para>In the previous two response examples, the requested
            record objects could not be deleted, because they were not
            found.</para>
            </wadl:doc>
            <request>
  <!--           <param style="query" type="xs:string" name="id1"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>ID for the first record.</para></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="id2"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>ID for the next record.</para></wadl:doc>
         </param>  -->
               <param style="query" type="xs:string" name="id1" required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>ID for the first record.</para>
                  </wadl:doc>
               </param>
               <param style="query" type="xs:string" name="id2" required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>ID for the next record.</para>
                  </wadl:doc>
               </param>
         
               <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete Record: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-record_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete Record: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-record_request.json"/>
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete records: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/?
id=A-6817754&amp;id=111111111&amp;id=222222222&amp;id=NS-6251982
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete records: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/?
id=A-6817754&amp;id=111111111&amp;id=222222222&amp;id=NS-6251982
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation> 
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete records failure: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 737

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;deletefault code="500" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;message&gt;One or more items could not be deleted.&lt;/message&gt;
    &lt;details&gt;See errors list for details.&lt;/details&gt;
    &lt;failedItems&gt;
        &lt;fault code="404"&gt;
            &lt;message&gt;Object not Found.&lt;/message&gt;
            &lt;details&gt;Domain ID: 2720150; Record ID: 111111111&lt;/details&gt;
        &lt;/fault&gt;
        &lt;fault code="404"&gt;
            &lt;message&gt;Object not Found.&lt;/message&gt;
            &lt;details&gt;Domain ID: 2720150; Record ID: 222222222&lt;/details&gt;
        &lt;/fault&gt;
    &lt;/failedItems&gt;
&lt;/deletefault&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete records failure: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 422

{
  "failedItems" : {
    "faults" : [ {
      "message" : "Object not Found.",
      "code" : 404,
      "details" : "Domain ID: 2720150; Record ID: 111111111"
    }, {
      "message" : "Object not Found.",
      "code" : 404,
      "details" : "Domain ID: 2720150; Record ID: 222222222"
    } ]
  },
  "message" : "One or more items could not be deleted.",
  "code" : 500,
  "details" : "See errors list for details."
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation> 
         
            </request>
            <response status="202"/>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                     
                     
                     
                     
                     
                     <resource id="recordId"
                path="v1.0/{account}/domains/{domainId}/records/{recordId}">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="domainId">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the domain.</para>
            </wadl:doc>
                  </param>
         <param style="template"
                type="xs:string"
                required="true"
                name="recordId">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>ID for the record.</para>
            </wadl:doc>
                        </param>
         <method name="GET" rax:id="showRecord">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show record details">
               <para role="shortdesc">Shows details for a specified record
            in a specified domain.</para>
               <para>This call lists details for a specified record in the
            specified domain.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Record details: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/A-6822994
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Record details: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/A-6822994
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:record">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Record details: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 360

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;record id="A-6822994" type="A" name="example.com" data="192.0.2.17" ttl="86400" updated="2011-06-24T01:12:52Z" created="2011-06-24T01:12:52Z" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"/&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
      
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="List Record details: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 200

{
  "name" : "example.com",
  "id" : "A-6822994",
  "type" : "A",
  "data" : "192.0.2.17",
  "updated" : "2011-06-24T01:12:52.000+0000",
  "ttl" : 86400,
  "created" : "2011-06-24T01:12:52.000+0000"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="DELETE" rax:id="deleteRecord">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete record">
               <para role="shortdesc">Deletes a record from the
            domain.</para>
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />--></para>
               </note>
               <para>These calls delete a specified record or multiple
            records from a specified domain.</para>
               <para>When a record is deleted, any and all record data is
            immediately purged and is not recoverable via the API. So
            on a successful delete, subsequent requests for the
            deleted record should return itemNotFound
               (<errorcode>404</errorcode>).</para>
               <para>Transactionally, delete calls behave differently than
            other calls in that deletes are never rolled back on
            exceptions, and multiple deletes in the same request do
            not fail as a group. Instead, each delete is attempted
            even if one or more fail. The response for a delete
            request in which one or more items fail contains
            information regarding which items failed as well as
            information regarding specific issues that caused the
            failure(s). See the examples that follow.</para>
         
            </wadl:doc>
            <request>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete Record: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/
MX-3151218
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Delete Record: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">DELETE https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/
MX-3151218
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <!--<representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete records: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-records_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete records: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-records_request.json"/>
            </wadl:doc>
         </representation>-->
            </request>
            <response status="202"/>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
         <method name="PUT" rax:id="updateRecord">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update record">
               <para role="shortdesc">Updates the configuration of a record
            in the domain.</para>
         
               <note>
                  <para>This call returns an asynchronous
               response. Refer to the section "Synchronous and Asynchronous Responses" 
               in Chapter 3 for more details and examples of the way that asynchronous responses work.<!--  , as
               described in <xref linkend="sync_asynch_responses"
               />--></para>
               </note>
               <para>This call updates the configuration for a specified
            record in a specified domain.</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
               <!--       <listitem>
                  <para>If you submit a request with multiple records,
                     and one or more of those records fails, the
                     entire request fails.</para>
               </listitem> -->
                     <listitem>
                        <para>When the domain and/or record TTL is supplied
                     by the user, either via a create or update call,
                     the TTL values must be 300 seconds or
                     more.</para>
                     </listitem>
                     <listitem>
                        <para>The only attributes that you can Update on a
                     record (during a <command>PUT</command>) are the
                        <code>data</code>, <code>priority</code> (for
                     MX and SRV records), <code>ttl</code>, and
                        <code>comment</code> attributes.</para>
                     </listitem>
                  </itemizedlist>
               </note>
            </wadl:doc>
            <request>
         
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:records">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update Record Configuration: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/MX-3151218
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 279

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;record name="example.com" data="mail.example.com" ttl="3600" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"/&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@id">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For modifying <emphasis xmlns:xi="http://www.w3.org/2001/XInclude">multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@name">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>For record types other than SRV records, this
                     specifies the name for the domain or subdomain
                     and must be a valid domain name. If the record
                     name attribute is not specified, it is assumed
                     that the record name is the same as the domain
                     name to which the record belongs. The name
                     attribute cannot be modified.</para>
                        <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@data">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The data field is required for
                     PTR and TXT records only. For PTR records, the data field must be a valid IPv4 or IPv6 IP
                     address.</para>
                     </wadl:doc>
                  </param>
                  <param name="priority"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@priority">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para>
                     </wadl:doc>
                  </param>
                  <param name="ttl"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@ttl">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If specified, must be greater
                     than or equal to 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para>
                     </wadl:doc>
                  </param>
                  <param name="comment"
                         style="plain"
                         type="xs:string"
                         required="false"
                         path="FIXME/@comment">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>If included, its length must be
                     less than or equal to 160
                  characters.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Update Record Configuration: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">PUT https://dns.api.rackspacecloud.com/v1.0/1234/domains/2725233/records/MX-3151218
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 75

{
  "name" : "example.com",
  "data" : "mail.example.com",
  "ttl" : 3600
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--           <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>  --> 
               </representation>
               <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update records Configuration: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-records-config_request.xml"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>For record types other than SRV records, this
                     specifies the name for the domain or subdomain
                     and must be a valid domain name. If the record
                     name attribute is not specified, it is assumed
                     that the record name is the same as the domain
                     name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update records Configuration: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-records-config_request.json"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation> -->
            </request>
            <response status="202"/>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                        
                                              
                        
                        
                     
                  
               
               <resource id="import" path="v1.0/{account}/domains/import">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="POST" rax:id="importDomain">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Import domain">
               <para role="shortdesc">Imports a new domain with the
            configuration specified by the request.</para>
               <note>
                  <para>This call returns an asynchronous
               response<!-- , as
               described in <xref linkend="sync_asynch_responses"
               />-->.
               Refer to the section "Synchronous and Asynchronous Responses" in Chapter 3 
               for more details and examples of the way that asynchronous responses work.</para>
               </note>
               <para>This call provisions a new DNS domain under the account
            specified by the BIND 9 formatted file configuration
            contents defined in the request object.  If the
            corresponding request cannot be fulfilled due to
            insufficient or invalid data, an <code>HTTP</code>
                  <returnvalue>400 (Bad Request)</returnvalue> error
            response will be returned with information regarding the
            nature of the failure in the body of the response.
            Failures in the validation process are non-recoverable and
            require the caller to correct the cause of the failure and
               <command>POST</command> the request again.</para>
               <para>For all practical purposes, a successful Import domain
            call creates a domain, and is therefore similar in
            response to a Create domain call.</para>
               <note>
            <!-- <title>Note</title>-->
            <!-- <itemizedlist>-->
            <!-- <listitem>
                  <para>Refer to <xref linkend="dns_propagation"/> for
                     information about DNS propagation.</para>
               </listitem>-->
            <!--<listitem>-->
                  <para>This process allows multiple records to be created
               along with the domain. This is an atomic operation, so
               if there is a failure in the creation of even a single
               record, the entire process will fail.</para>
                  <!--  </listitem>
            </itemizedlist>-->
               </note>
               <para>Ensure that the BIND 9 formatted file configuration
            contents are valid by adhering to the following rules:<itemizedlist>
                     <listitem>
                        <para>Each record starts on a new line and on the
                     first column. If a record will not fit on one
                     line, use the BIND_9 line continuation convention
                     where you put a left parenthesis and continue the
                     one record on the next line and put a right
                     parenthesis when the record ends. For example,
                        <representation xmlns="http://wadl.dev.java.net/2009/02" mediaType="application/"/>
                        </para>
                     </listitem>
                     <listitem>
                        <para>The attribute values of a record must be
                     separated by a single blank or tab. No other
                     white space characters.</para>
                     </listitem>
                     <listitem>
                        <para>If there are any NS records, the data field
                     should not be dns1.stabletransit.com or
                     dns2.stabletransit.com. They will result in
                     "duplicate record" errors.</para>
                     </listitem>
                  </itemizedlist>
               </para>
               <para>Not following the above rules strictly will result in
            an HTTP 400 (Bad Request) error response with messages
            such as the following: "The request could not be
            understood by the server due to malformed syntax."</para>
               <note>
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>If you attempt to import a domain that already
                     exists, the API will return an exception saying
                     that the domain already exists. This is the same
                     behavior as when you attempt to create a domain
                     that already exists.</para>
                     </listitem>
                     <listitem>
                        <para>The domain can have a comment attribute
                     specified in the import domain request, and that
                     comment is transferred to the new domain. However
                     the domain contents cannot have comments
                     specified in them. For example, no record level
                     comments can be used in the import domain
                     request.</para>
                     </listitem>
                     <listitem>
                        <para>The normal bind rules apply to any imported
                     bind file, and in particular, records without a
                     specified TTL will receive the domain TTL as the
                     default. If the domain TTL is not specified, the
                     SOA minTTL (3600 seconds) is used as the default
                     instead.</para>
                     </listitem>
                  </itemizedlist>
               </note>
               <note>
                  <para>The following examples show the
                  <emphasis>final</emphasis> successful response for
               the asynchronous call.</para>
               </note>
            </wadl:doc>
            <request>
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import domain: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/import
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 543

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain contentType="BIND_9"&gt;
        &lt;contents&gt;
example.net. 3600 IN SOA dns1.stabletransit.com. sample@rackspace.com. 1308874739 3600 3600 3600 3600
example.net. 86400 IN A 110.11.12.16
example.net. 3600 IN MX 5 mail2.example.net.
www.example.net. 5400 IN CNAME example.net.
&lt;/contents&gt;
    &lt;/domain&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="contentType"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@contentType">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The content type for the bind
                     file. Must be specified as
                  "BIND_9".</para>
                     </wadl:doc>
                  </param>
                  <param name="contents"
                         style="plain"
                         type="xs:string"
                         required="true"
                         path="FIXME/@contents">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The valid configuration contents
                     for the domain to be imported.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import domain: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">POST https://dns.api.rackspacecloud.com/v1.0/1234/domains/import
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 311

{
  "domains" : [ {
    "contentType" : "BIND_9",
    "contents" : "\nexample.net. 3600 IN SOA dns1.stabletransit.com. sample@rackspace.com. 1308874739 3600 3600 3600 3600\nexample.net. 86400 IN A 110.11.12.16\nexample.net. 3600 IN MX 5 mail2.example.net.\nwww.example.net. 5400 IN CNAME example.net.\n"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!--        <param name="contentType" style="plain" type="xs:string"
               required="true" path="$.domains[*].contentType">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The content type for the bind
                     file. Must be specified as
                  "BIND_9".</para></wadl:doc>
            </param>
            <param name="contents" style="plain" type="xs:string"
               required="true" path="$.domains[*].contents">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The valid configuration contents
                     for the domain to be imported.</para></wadl:doc>
            </param> -->
               </representation>
            </request>
            <response status="202">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import domain: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 855

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain name="example.net" ttl="3600" emailAddress="sample@rackspace.com" comment="Optional domain comment..."&gt;
        &lt;nameservers&gt;
            &lt;nameserver name="dns1.stabletransit.com"/&gt;
            &lt;nameserver name="dns2.stabletransit.com"/&gt;
        &lt;/nameservers&gt;
        &lt;recordsList totalEntries="3"&gt;
            &lt;record type="A" name="example.net" data="110.11.12.16" ttl="86400"/&gt;
            &lt;record type="MX" name="example.net" data="mail2.example.net" ttl="3600" priority="5"/&gt;
            &lt;record type="CNAME" name="www.example.net" data="example.net" ttl="5400"/&gt;
        &lt;/recordsList&gt;
    &lt;/domain&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Import domain: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 202 Accepted
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 756

{
  "domains" : [ {
    "name" : "example.net",
    "comment" : "Optional domain comment...",
    "nameservers" : [ {
      "name" : "dns1.stabletransit.com"
    }, {
      "name" : "dns2.stabletransit.com"
    } ],
    "recordsList" : {
      "totalEntries" : 3,
      "records" : [ {
        "name" : "example.net",
        "type" : "A",
        "data" : "110.11.12.16",
        "ttl" : 86400
      }, {
        "name" : "example.net",
        "priority" : 5,
        "type" : "MX",
        "data" : "mail2.example.net",
        "ttl" : 3600
      }, {
        "name" : "www.example.net",
        "type" : "CNAME",
        "data" : "example.net",
        "ttl" : 5400
      } ]
    },
    "ttl" : 3600,
    "emailAddress" : "sample@rackspace.com"
  } ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>  
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="409">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemAlreadyExists"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                  
               
               
               <resource id="search" path="v1.0/{account}/domains/search">
         <param name="account" style="template" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The tenant ID.</para>
               </wadl:doc>
            </param>
         <param name="X-Auth-Token"
                style="header"
                type="xs:string"
                required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>Arbitrary character string
                     generated by the authentication service in
                     response to valid credentials.</para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="searchDomains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Search domains">
               <para role="shortdesc">Searches domains by domain name: lists all names manageable by the specified account 
            that have the value of the <parameter xmlns:xi="http://www.w3.org/2001/XInclude">name</parameter> parameter as part of their name.</para>
              
               <note> 
                  <title>Notes</title>
                  <itemizedlist>
                     <listitem>
                        <para>Use the query parameter <parameter>name</parameter> to
                  search domains by domain name. This lists all names manageable by the specified account that have the value of the <parameter xmlns:xi="http://www.w3.org/2001/XInclude">name</parameter> parameter as part of their name.</para>
                     </listitem>
                     <listitem>
                        <para>The value specified for the <parameter>name</parameter> parameter must 
                  contain at least 3 characters or nothing will be returned by the search.</para>
                     </listitem>
                  </itemizedlist>        
               </note>
         
               <para>Filter criteria may consist of:<itemizedlist spacing="compact">
                     <listitem>
                        <para>Any letter (A-Za-z)</para>
                     </listitem>
                     <listitem>
                        <para>Numbers (0-9)</para>
                     </listitem>
                     <listitem>
                        <para>Hyphen ("-")</para>
                     </listitem>
                     <listitem>
                        <para>3 to 63 characters</para>
                     </listitem>
                  </itemizedlist>
               </para>
         
               <para>Filter criteria should not include any of
            the following characters: ' + , | ! " £ $ %
            &amp; / ( ) = ? ^ * ç ° § ; : _ &gt; ] [ @ à, é,
            ò</para>
               <note>
                  <para>This call returns by default a maximum of 100 items at a time if no
               <code>limit</code> is specified. To navigate the collection
               returned, the parameters <code>limit</code> and <code>offset</code> can
               be set in the URI (for example: <code>limit=10&amp;offset=0</code>), as
               described in <xref linkend="pagination"/>.</para>
               </note>
         
         
            </wadl:doc>
            <request>
               <param style="query" type="xs:string" name="name" required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>Name of the domain to find.</para>
                  </wadl:doc>
               </param>
               <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.json"/>
            </wadl:doc>
         </representation> -->
               <!--     <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.json"
               />
            </wadl:doc>
         </representation> -->
               <representation mediaType="application/xml">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Partial Name: XML request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/search?name=sub1.exam
Accept: application/xml
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/xml
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Partial Name: JSON request">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">GET https://dns.api.rackspacecloud.com/v1.0/1234/domains/search?name=sub1.exam
Accept: application/json
X-Auth-Token: ea85e6ac-baff-4a6c-bf43-848020ea3812
Content-Type: application/json
Content-Length: 0
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
      
            <!--      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.xml"/>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.json"/>
            </wadl:doc>
         </representation>
      </response> -->
            <response status="200">
     <!--     <representation mediaType="application/xml" xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
            element="dnsaas:domains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.json"
               />
            </wadl:doc>
         </representation> --> 
         
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Partial Name: XML response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="xml">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/xml
Content-Length: 435

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;domains totalEntries="114" xmlns:ns2="http://www.w3.org/2005/Atom" xmlns="http://docs.rackspacecloud.com/dns/api/v1.0" xmlns:ns3="http://docs.rackspacecloud.com/dns/api/management/v1.0"&gt;
    &lt;domain id="2725257" name="sub1.example.com" emailAddress="sample@rackspace.com" updated="2011-06-23T03:09:34Z" created="2011-06-23T03:09:33Z" comment="1st sample subdomain"/&gt;
&lt;/domains&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
         
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/json"
                               element="dnsaas:domains">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            xml:lang="EN"
                            title="Filter by Partial Name: JSON response">
                     <xsdxt:code xmlns:db="http://docbook.org/ns/docbook">
                        <programlisting language="javascript">Status: 200 OK
Date: Thu, 28 Jul 2011 21:54:21 GMT
X-API-VERSION: 1.0.17
Content-Type: application/json
Content-Length: 284

{
  "domains" : [ {
    "name" : "sub1.example.com",
    "id" : 2725257,
    "comment" : "1st sample subdomain",
    "updated" : "2011-06-23T03:09:34.000+0000",
    "emailAddress" : "sample@rackspace.com",
    "created" : "2011-06-23T03:09:33.000+0000"
  } ],
  "totalEntries" : 114
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>   
            <response status="400 500">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:dnsFault"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="503">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:serviceUnavailable"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="401">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:unauthorized"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="400">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:badRequest"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="404">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:itemNotFound"/>
               <representation mediaType="application/json"/>
            </response>
             
            <response status="413">
               <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                               mediaType="application/xml"
                               element="dnsaas:overLimit"/>
               <representation mediaType="application/json"/>
            </response>
           
         </method>
      </resource>
                  
               
               
            
   </resources>
   <!-- methods -->
   <!-- limits -->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listLimits"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:rates">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listLimitTypes"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:limitTypes">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showLimits"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:rates">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
   <!-- domains -->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDomains"
           name="GET">
      
      <request>
    <!--       <param style="query" type="xs:string" name="name"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>The name of the domain for which to
                  list details.</para></wadl:doc>
         </param> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         
         <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.json"
               />
            </wadl:doc>
         </representation> -->
         
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
         
         <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.json"
               />
            </wadl:doc>
         </representation> -->
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
            
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDomainsbyName"
           name="GET">
      
      <request>
          <param style="query" type="xs:string" name="name" required="false">
            
         </param>
         <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.json"/>
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <!--      <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_request.json"
               />
            </wadl:doc>
         </representation> -->
      </request>
      
      <!--      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.xml"/>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.json"/>
            </wadl:doc>
         </representation>
      </response> -->
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation> 
      
         <!--      <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.xml"
               />
            </wadl:doc>
         </representation>
      
         <representation mediaType="application/json" xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
            element="dnsaas:domains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Partial Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-partial-name_response.json"
               />
            </wadl:doc>
         </representation>  -->
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="searchDomains"
           name="GET">
      
      <request>
         <param style="query" type="xs:string" name="name" required="false">
            
         </param>
         <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domains_request.json"/>
            </wadl:doc>
         </representation> -->
         <!--     <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON request">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_request.json"
               />
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      
      <!--      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.xml"/>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="List domains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domains_response.json"/>
            </wadl:doc>
         </representation>
      </response> -->
      <response status="200">
     <!--     <representation mediaType="application/xml" xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
            element="dnsaas:domains">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified domain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-domain-by-name_response.json"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: XML response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.xml"
               />
            </wadl:doc>
         </representation>
         
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Filter by Fully Qualified Subdomain Name: JSON response">
               <xsdxt:code
                  href="../samples/dns-filter-subdomain-by-name_response.json"
               />
            </wadl:doc>
         </representation> --> 
         
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
         
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/json"
                         element="dnsaas:domains">
            
         </representation>
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listDomainsWithoutSubDomains"
           name="GET">
      
      <request>
   <!--        <param style="query" type="xs:string" name="showRecords"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>If this parameter is set to true,
                  then information about records is returned; if this
                  parameter is set to false, then information about
                  records is not returned.</para></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="showSubdomains"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>If this parameter is set to true,
                  then information about subdomains is returned; if
                  this parameter is set to false, then information
                  about subdomains is not returned.</para></wadl:doc>
         </param> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domain">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>

         <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_response.xml"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details with records and subdomains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-with-records-and-subdomains_response.json"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: XML response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_response.xml"
               />
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="List domain details, no records, no subdomains: JSON response">
               <xsdxt:code
                  href="../samples/dns-list-domain-details-no-records-no-subdomains_response.json"
               />
            </wadl:doc>
         </representation>  -->
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
            
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showDomain"
           name="GET">
      
      <request>
         <param style="query"
                type="xs:string"
                name="showRecords"
                required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="showSubdomains "
                required="false">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      
         <representation mediaType="application/xml">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
     
         <representation mediaType="application/xml">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showDomainChanges"
           name="GET">
      
      <request>
         <param style="query" type="xs:string" name="since" required="false">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domain">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="exportDomain"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domain">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="createDomain"
           name="POST">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
            <!--               <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The name for the
                                domain or subdomain. Must be a valid
                                domain name.</para></wadl:doc>
            </param>
            <param name="emailAddress"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>Email address to use for
                                contacting the domain
                                administrator.</para></wadl:doc>
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>If specified, must be
                                greater than or equal to 300. The default value,
                                if not specified, is
                                <code xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook">3600</code>.</para></wadl:doc>
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>If included, its length
                                must be less than or equal to 160
                                characters.</para></wadl:doc>
            </param>  -->
         </representation>
         <representation mediaType="application/json">
            
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="$.domains[*].name">
               
            </param>
            <param name="emailAddress"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="$.domains[*].emailAddress">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="$.domains[*].ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="$.domains[*].comment">
               
            </param>
         </representation>
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>

         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="409">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemAlreadyExists"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="cloneDomain"
           name="POST">
      
      <request>
         <param style="query"
                type="xs:string"
                name="cloneName"
                required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="cloneSubdomains"
                required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="modifyRecordData"
                required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="modifyEmailAddress"
                required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="modifyComment"
                required="false">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
            
         </representation>
         <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
            
         </representation>
         <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
            
         </representation>
         <representation xmlns:xi="http://www.w3.org/2001/XInclude" mediaType="application/xml">
            
         </representation>
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="409">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemAlreadyExists"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
            
   </method>
   
   <!--<method id="cloneDomainById" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"
         title="Clone domain">
         <para role="shortdesc">Creates specified domain (<code
               xmlns:xi="http://www.w3.org/2001/XInclude"
               >example2.com</code>) by cloning domain with id
               <emphasis xmlns:xi="http://www.w3.org/2001/XInclude"
               >domainId</emphasis>. Options are as specified. See
               <xref xmlns:xi="http://www.w3.org/2001/XInclude"
               linkend="clone_domains_parms_options2"/> for the
            description of options.</para>
         <note>
            <para>This call returns an asynchronous response.
            Refer to the section "Synchronous and Asynchronous Responses" in the Devguide for more information.
               The AsyncResponse returned will be similar to that
               returned for Create domain but with the request element
               absent because the clone request has no body.</para>
         </note>
         <para>This call duplicates a single existing domain
            configuration with a new domain name for a specified
            Cloud account. By default, all records and, optionally,
            subdomain(s) are duplicated as well. Both the existing
            domain (referred to as the <emphasis>reference</emphasis>
            domain) and the new cloned domain must exist under the
            same Cloud account.</para>
         <para>Refer to <xref linkend="clone_domains_parms_options2"/>
            for the parameters and options available to specify how
            the cloning affects subdomains, comments, email addresses,
            and record data.</para>
         <note>
            <title>Notes</title>
            <itemizedlist>
               <listitem>
                  <para>If the corresponding request cannot be
                     fulfilled due to insufficient or invalid data, or
                     if the reference domain does not exist, an HTTP
                     400 (Bad Request) error response will be returned
                     in the body of the response with information
                     regarding the nature of the failure.</para>
               </listitem>
               <listitem>
                  <para>Clone domain is an atomic operation. If there
                     is a failure in the duplication of a single
                     record or subdomain, the entire process will
                     fail. Failures are non-recoverable and require
                     the caller to correct the cause of the failure
                     and <command>POST</command> the request
                     again.</para>
               </listitem>
               <listitem>
                  <para>The Clone domain operation is currently
                     supported for domains under a given Cloud
                     account. The cloned domain must belong to the
                     same account as the reference domain.</para>
               </listitem>
               <listitem>
                  <para>The Clone domain operation will return an
                     exception if the operation would result in
                     creating a domain that already exists. The
                     exception would indicate that the domain already
                     exists.</para>
               </listitem>
               <listitem>
                  <para>The Clone domain operation may take slightly
                     longer to complete than a comparable Create
                     domain request.</para>
               </listitem>
               <listitem>
                  <para>PTR records (for Reverse DNS) are not
                     represented when a domain is created and,
                     therefore, are not included when a domain is
                     cloned.</para>
               </listitem>
               <listitem>
                  <para>If your reference domain already has both
                     default Rackspace Nameserver (NS) records, the
                     cloned domain will be created with no additional
                     default Rackspace NS records. If your reference
                     domain lacks one or both of the default Rackspace
                     NS records, the cloned domain will be created
                     with additional Rackspace default NS records to
                     make a total of two default Rackspace NS records.
                     If the presence of default Rackspace NS records
                     is not your preference, they can be deleted from
                     the cloned domain as long as at least one NS
                     record remains (Rackspace or
                     non-Rackspace).</para>
               </listitem>
               <listitem>
                  <para>Any non-default (non-Rackspace) NS records in
                     the reference domain are cloned and modified in a
                     way that is consistent with all other record
                     types.</para>
               </listitem>
            </itemizedlist>
         </note>
         <para>According to the <emphasis>cloneName</emphasis>
            specified, the domain name and record name(s) will
            automatically be modified and replaced in the new cloned
            domain as part of the cloning process and cannot be
            influenced by any request options. See the table below for
            the parameters and options available to specify how the
            cloning affects subdomains, comments, email addresses, and
            record data.</para>
         <para>The following table lists the parameters and options
            for Clone domain.</para>
         <table xmlns:xi="http://www.w3.org/2001/XInclude" rules="all"
            xml:id="clone_domains_parms_options2">
            <caption>Parameters and Options for Clone domain</caption>
            <thead>
               <tr>
                  <td colspan="1">Parameter/Option Name </td>
                  <td colspan="3">Description</td>
                  <td colspan="1">Required</td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td colspan="1">cloneName</td>
                  <td colspan="3">The name of the new (cloned)
                     domain.</td>
                  <td colspan="1">Yes.</td>
               </tr>
               <tr>
                  <td colspan="1">cloneSubdomains</td>
                  <td colspan="3">Recursively clone subdomains. If set
                     to <code>false</code>, then only the top level
                     domain and its records are cloned. Cloned
                     subdomain configurations are modified the same
                     way that cloned top level domain configurations
                     are modified.</td>
                  <td colspan="1">
                     <para>No.</para>
                     <para>Default=<code>true</code>.</para>
                  </td>
               </tr>
               <tr>
                  <td colspan="1">modifyComment</td>
                  <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in comments
                     on the cloned (new) domain.</td>
                  <td colspan="1">
                     <para>No.</para>
                     <para>Default=<code>true</code>.</para>
                  </td>
               </tr>
               <tr>
                  <td colspan="1">modifyEmailAddress</td>
                  <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in email
                     addresses on the cloned (new) domain.</td>
                  <td colspan="1">
                     <para>No.</para>
                     <para>Default=<code>true</code>.</para>
                  </td>
               </tr>
               <tr>
                  <td colspan="1">modifyRecordData</td>
                  <td colspan="3">Replace occurrences of the reference
                     domain name with the new domain name in data
                     fields (of records) on the cloned (new) domain.
                     Does not affect NS records.</td>
                  <td colspan="1">
                     <para>No.</para>
                     <para>Default=<code>true</code>.</para>
                  </td>
               </tr>
            </tbody>
         </table>
         <para>The following examples show the Clone domain
            requests:</para>
         <note>
            <para>The following examples show the
                  <emphasis>initial</emphasis> 202 Accepted response
               for the asynchronous call and indicate that the task
               has been accepted for processing. Refer to <xref
                  linkend="sync_asynch_responses"/> for a description
               of how the asynchronous call works.</para>
         </note>
         <para>The following are examples of the reference domain and
            the resulting cloned domain:</para>
      </wadl:doc>
      <request>
         <param style="query" type="xs:string" name="cloneName"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><!-\-WRITEME-\-></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="cloneSubdomains"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><!-\-WRITEME-\-></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="modifyRecordData"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><!-\-WRITEME-\-></wadl:doc>
         </param>
         <param style="query" type="xs:string"
            name="modifyEmailAddress" required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><!-\-WRITEME-\-></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="modifyComment"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><!-\-WRITEME-\-></wadl:doc>
         </param>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Clone domain: XML request">
               <xsdxt:code
                  href="../samples/dns-clone-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Clone domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-clone-domain_request.json"/>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Initial (202) Clone domain: XML response">
               <xsdxt:code
                  href="../samples/dns-clone-domain_response.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Initial (202) Clone domain: JSON response">
               <xsdxt:code
                  href="../samples/dns-clone-domain_response.json"/>
            </wadl:doc>
         </representation>
         <representation xmlns="http://wadl.dev.java.net/2009/02"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Reference (Existing) domain cloner.com: XML">
               <xsdxt:code
                  href="../samples/dns-clone-domain-reference-domain_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation xmlns="http://wadl.dev.java.net/2009/02"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Resulting (Cloned) domain clone1.com: XML">
               <xsdxt:code
                  href="../samples/dns-clone-domain-final-result_response.xml"
               />
            </wadl:doc>
         </representation>
         <representation xmlns="http://wadl.dev.java.net/2009/02"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Reference (Existing) domain cloner.com: JSON">
               <xsdxt:code
                  href="../samples/dns-clone-domain-reference-domain_response.json"
               />
            </wadl:doc>
         </representation>
         <representation xmlns="http://wadl.dev.java.net/2009/02"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Resulting (Cloned) domain clone1.com: JSON">
               <xsdxt:code
                  href="../samples/dns-clone-domain-final-result_response.json"
               />
            </wadl:doc>
         </representation>
      </response>
   </method>-->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="importDomain"
           name="POST">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
            <param name="contentType"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@contentType">
               
            </param>
            <param name="contents"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@contents">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
    <!--        <param name="contentType" style="plain" type="xs:string"
               required="true" path="$.domains[*].contentType">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The content type for the bind
                     file. Must be specified as
                  "BIND_9".</para></wadl:doc>
            </param>
            <param name="contents" style="plain" type="xs:string"
               required="true" path="$.domains[*].contents">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The valid configuration contents
                     for the domain to be imported.</para></wadl:doc>
            </param> -->
         </representation>
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="409">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemAlreadyExists"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDomain"
           name="PUT">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
            <param name="id"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@id">
               
            </param>
            <param name="emailAddress"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@emailAddress">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param> 
         </representation>
         <representation mediaType="application/json">
            
   <!--     <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> --> 
         </representation>
      </request> 
      <response status="202"/>
       
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateDomains"
           name="PUT">
      
      <request>
   <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Update domain: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-domain_request.xml"/>
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="FIXME/@id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="FIXME/@emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Update domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-domain_request.json"/>
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>  --> 
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
            <param name="id"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@id">
               
            </param>
            <param name="emailAddress"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@emailAddress">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
   <!--           <param name="id" style="plain" type="xs:string"
               required="true" path="$.domains[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> domains, the id for each
                     domain must be specified as an attribute. Note
                     that for modifying a single domain, the id is a
                     required parameter at the end of the API call
                     URI.</para></wadl:doc>
            </param>
            <param name="emailAddress" style="plain" type="xs:string"
               required="false" path="$.domains[*].emailAddress">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Email address to use for
                     contacting the domain
                  administrator.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.domains[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.domains[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation>
      </request> 
      
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="409">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemAlreadyExists"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDomain"
           name="DELETE">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation> -->
         
         <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation> 
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDomains"
           name="DELETE">
      
      <request>
         <param style="query" type="xs:string" name="id1" required="false">
            
         </param>
         <param style="query" type="xs:string" name="id2" required="false">
            
         </param>
         
         <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> --> 
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDomainAndSubdomains"
           name="DELETE">
      
      <request>
         <param style="query"
                type="xs:string"
                name="deleteSubdomains"
                required="false">
            
         </param>
         <!--        <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domains and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteDomainsAndSubdomains"
           name="DELETE">
      
      <request>
         <param style="query" type="xs:string" name="id1" required="false">
            
         </param>
         <param style="query" type="xs:string" name="id2" required="false">
            
         </param>
         <param style="query"
                type="xs:string"
                name="deleteSubdomains"
                required="false">
            
         </param>
         <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domain: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete domains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domains_request.json"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Delete domain and subdomains: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-domain-subdomains_request.json"
               />
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <!-- subdomains -->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listSubdomains"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:domains">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <!-- records -->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listRecords"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="searchRecords"
           name="GET">
      
      <request>
         <param style="query" type="xs:string" name="type" required="true">
            
         </param>
         <param style="query" type="xs:string" name="name" required="false">
            
         </param>
         <param style="query" type="xs:string" name="data" required="false">
            
         </param>
      </request>
      <response status="200"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showRecord"
           name="GET">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:record">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addRecords"
           name="POST">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:records">
            
            
            <param name="type"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="$.records[*].type">
               
            </param>
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="$.records[*].name">
               
            </param>
            <param name="data"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="$.records[*].data">
               
            </param>
            <param name="priority"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="$.records[*].priority">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="$.records[*].ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="$.records[*].comment">
               
            </param> 
            
            <!--           <param name="type" style="plain" type="xs:string"
               required="true" path="FIXME/@type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type to
                  add.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR, A, and
                     AAAA records must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Required for MX and SRV records,
                     but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation>
         <representation mediaType="application/json">
            
    <!--        <param name="type" style="plain" type="xs:string"
               required="true" path="$.records[*].type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type to
                  add.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR, A, and
                     AAAA records must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Required for MX and SRV records,
                     but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation> 
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:records">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateRecord"
           name="PUT">
      
      <request>
         
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:records">
            
            <param name="id"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@id">
               
            </param>
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               
            </param>
            <param name="data"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@data">
               
            </param>
            <param name="priority"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@priority">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
   <!--           <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>  --> 
         </representation>
         <!--          <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update records Configuration: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-records-config_request.xml"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>For record types other than SRV records, this
                     specifies the name for the domain or subdomain
                     and must be a valid domain name. If the record
                     name attribute is not specified, it is assumed
                     that the record name is the same as the domain
                     name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update records Configuration: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-records-config_request.json"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation> -->
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updateRecords"
           name="PUT">
      
      <request>
  <!--         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update Record Configuration: XML request">
               <xsdxt:code
                  href="../samples/dns-modify-record-config_request.xml"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="FIXME/@id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="FIXME/@name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="FIXME/@data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="FIXME/@priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="FIXME/@ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="FIXME/@comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
  </representation> 
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"
               title="Update Record Configuration: JSON request">
               <xsdxt:code
                  href="../samples/dns-modify-record-config_request.json"
               />
            </wadl:doc>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param>
         </representation> -->
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:records">
            
            <param name="id"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@id">
               
            </param>
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               
            </param>
            <param name="data"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@data">
               
            </param>
            <param name="priority"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@priority">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
 <!--            <param name="id" style="plain" type="xs:string"
               required="true" path="$.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For modifying <emphasis
                        xmlns:xi="http://www.w3.org/2001/XInclude"
                        xmlns="http://docbook.org/ns/docbook"
                        >multiple</emphasis> records, the id for each
                     record must be specified as an attribute. Note
                     that for modifying a single record, the record id
                     is a required parameter at the end of the API
                     call URI.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>For record types other than SRV
                     records, this specifies the name for the domain
                     or subdomain and must be a valid domain name. If
                     the record name attribute is not specified, it is
                     assumed that the record name is the same as the
                     domain name to which the record belongs. The name
                     attribute cannot be modified.</para>
                  <para>For SRV records, this specifies the entire
                     service name, which is made up of the service,
                     protocol, and domain name to which the record
                     belongs. The service and protocol fields of the
                     service name can be modified but not the domain
                     name field. The record name attribute must be
                     specified for SRV records.</para>
               </wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="false" path="$.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="priority" style="plain" type="xs:string"
               required="false" path="$.records[*].priority">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>Can be included for MX and SRV
                     records, but forbidden for other record types. If
                     specified, must be an integer from 0 to
                     65535.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to the domain TTL if
                     available, or 3600 if no TTL is
                  specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false" path="$.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation>
      </request>
      <response status="202"/>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteRecord"
           name="DELETE">
      
      <request>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation>
         <!--<representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete records: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-records_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete records: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-records_request.json"/>
            </wadl:doc>
         </representation>-->
      </request>
      <response status="202"/>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deleteRecords"
           name="DELETE">
      
      <request>
  <!--           <param style="query" type="xs:string" name="id1"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>ID for the first record.</para></wadl:doc>
         </param>
         <param style="query" type="xs:string" name="id2"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>ID for the next record.</para></wadl:doc>
         </param>  -->
         <param style="query" type="xs:string" name="id1" required="true">
            
         </param>
         <param style="query" type="xs:string" name="id2" required="true">
            
         </param>
         
         <!--       <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete Record: XML request">
               <xsdxt:code
                  href="../samples/dns-delete-record_request.xml"/>
            </wadl:doc>
         </representation>
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="Delete Record: JSON request">
               <xsdxt:code
                  href="../samples/dns-delete-record_request.json"/>
            </wadl:doc>
         </representation> -->
         <representation mediaType="application/xml">
            
               
         </representation>
         <representation mediaType="application/xml">
            
         </representation> 
         <representation mediaType="application/xml">
            
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation> 
         
      </request>
      <response status="202"/>   
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <!-- PTR records -->
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="listPTRRecords"
           name="GET">
      
      
      <request>
         <param style="query" type="xs:string" name="href" required="true">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="showPTRRecord"
           name="GET">
      
      <request>
         <param style="query" type="xs:string" name="href" required="false">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="addPTRRecords"
           name="POST">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
            <param name="type"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@type">
               
            </param>
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               
            </param>
            <param name="data"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@data">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
 <!--            <param name="type" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].type">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type as
                  PTR.</para></wadl:doc>
            </param>
            <param name="name" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain
                  name.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field for PTR records
                     must be a valid IPv4 or IPv6 IP
                  address.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.recordsList.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to 3600 if no TTL is
                     specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false"
               path="$.recordsList.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation>
      </request>
      <response status="200">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="updatePTRRecords"
           name="PUT">
      
      <request>
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
            <param name="name"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@name">
               
            </param>
            <param name="id"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@id">
               
            </param>
            <param name="type"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@type">
               
            </param>
            <param name="data"
                   style="plain"
                   type="xs:string"
                   required="true"
                   path="FIXME/@data">
               
            </param>
            <param name="ttl"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@ttl">
               
            </param>
            <param name="comment"
                   style="plain"
                   type="xs:string"
                   required="false"
                   path="FIXME/@comment">
               
            </param>
         </representation>
         <representation mediaType="application/json">
            
  <!--           <param name="name" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].name">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The name for the domain or
                     subdomain. Must be a valid domain name. Can be
                     modified.</para></wadl:doc>
            </param>
            <param name="id" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].id">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The unique ID of the
                     record.</para></wadl:doc>
            </param>
            <param name="type" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].tye">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The record type as
                  PTR.</para></wadl:doc>
            </param>
            <param name="data" style="plain" type="xs:string"
               required="true" path="$.recordsList.records[*].data">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The data field is required for
                     PTR records and must be a valid IPv4 or IPv6 IP
                     address.</para></wadl:doc>
            </param>
            <param name="ttl" style="plain" type="xs:string"
               required="false" path="$.recordsList.records[*].ttl">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If specified, must be greater
                     than 300. Defaults to 3600 if no TTL is
                     specified.</para></wadl:doc>
            </param>
            <param name="comment" style="plain" type="xs:string"
               required="false"
               path="$.recordsList.records[*].comment">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>If included, its length must be
                     less than or equal to 160
                  characters.</para></wadl:doc>
            </param> -->
         </representation>
      </request>
      <response status="202">
         <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:recordsList">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
   
   <method xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:svg="http://www.w3.org/2000/svg"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           id="deletePTRRecords"
           name="DELETE">
      
      <request>
         <param style="query" type="xs:string" name="href" required="false">
            
         </param>
         <param style="query" type="xs:string" name="ip" required="false">
            
         </param>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
         <representation mediaType="application/xml">
            
         </representation>
         <representation mediaType="application/json">
            
         </representation>
      </request>
      <response status="202">
         <representation mediaType="application/xml">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      
         <representation mediaType="application/xml">
            
         </representation>
      
         <representation mediaType="application/json">
            
         </representation>
      </response>  
         <response status="400 500">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:dnsFault"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="503">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:serviceUnavailable"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="401">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:unauthorized"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="400">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:badRequest"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="404">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:itemNotFound"/>
            <representation mediaType="application/json"/>
        </response>
             
         <response status="413">
            <representation xmlns:dnsaas="http://docs.rackspacecloud.com/dns/api/v1.0"
                         mediaType="application/xml"
                         element="dnsaas:overLimit"/>
            <representation mediaType="application/json"/>
        </response>
           
   </method>
</wadl:application>
