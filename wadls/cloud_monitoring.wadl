<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2011 OpenStack LLC., All Rights Reserved -->
<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent os-compute-1.1.wadl             -->
<!--*******************************************************-->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <wadl:grammars xmlns:db="http://docbook.org/ns/docbook"
                  xmlns="http://wadl.dev.java.net/2009/02">
      <wadl:include href="16015-cloud_monitoring-xsd-1.xsd"/>
      <wadl:include href="16015-cloud_monitoring-xsd-2.xsd"/>
   </wadl:grammars>


    <!--*******************************************************-->
    <!--             All Resoruces                             -->
    <!--*******************************************************-->

    <resources xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
              xmlns:db="http://docbook.org/ns/docbook"
              xmlns:csapi="http://docs.openstack.org/compute/api/v2"
              xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
              xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://monitoring.api.rackspacecloud.com/">
        

        <!-- Account -->

        <resource path="account" id="account">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listAccount">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get account information">
               <para role="shortdesc"> Returns information about the specified account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List account information: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;account id="someId"&gt;
  &lt;metadata&gt;
    &lt;key&gt;aValue&lt;/key&gt;
  &lt;/metadata&gt;
  &lt;webhook_token&gt;token12345&lt;/webhook_token&gt;
&lt;/account&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The id assigned to the account.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Lists the collection of metadata associated with the monitoring account, if any. Metadata is
                            formatted as key/value pairs.</para>
                    </wadl:doc>
                  </param>
                  <param name="webhook_token"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Lists the webhook token associated with the monitoring account.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List account information: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "someId",
    "metadata": {
        "key": "aValue"
    },
    "webhook_token": "token12345"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="POST" rax:id="updateAccount">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update properties on an account.">
               <para role="shortdesc"> Updates account properties. </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update account: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;account&gt;
  &lt;webhook_token&gt;test123456&lt;/webhook_token&gt;
&lt;/account&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Update metadata information on the account, or add a new metadata item. Metadata is formatted
                            in key/value string pairs. The key and value attributes are string values between 1 and 255
                            characters long. </para>
                    </wadl:doc>
                  </param>
                  <param name="webhook_token"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A string value, between 10 and 64 characters long that adds or updates a webhook token for
                            Rackspace Cloud Monitoring.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update account: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "webhook_token":"test123456"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
            <response status="500"/>
         </method>
      </resource>
            
            
            
        
        <resource path="limits" id="limits">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listLimits">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List Limits">
               <para role="shortdesc"> Returns resource and rate limits that apply to the specified account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List limits: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;limit&gt;
  &lt;resource&gt;
    &lt;checks&gt;150&lt;/checks&gt;
    &lt;alarms&gt;50&lt;/alarms&gt;
  &lt;/resource&gt;
  &lt;rate&gt;
    &lt;global&gt;
      &lt;limit&gt;50000&lt;/limit&gt;
      &lt;used&gt;500&lt;/used&gt;
      &lt;window&gt;24 hours&lt;/window&gt;
    &lt;/global&gt;
    &lt;test_check&gt;
      &lt;limit&gt;500&lt;/limit&gt;
      &lt;used&gt;5&lt;/used&gt;
      &lt;window&gt;24 hours&lt;/window&gt;
    &lt;/test_check&gt;
    &lt;test_alarm&gt;
      &lt;limit&gt;500&lt;/limit&gt;
      &lt;used&gt;2&lt;/used&gt;
      &lt;window&gt;24 hours&lt;/window&gt;
    &lt;/test_alarm&gt;
  &lt;/rate&gt;
&lt;/limit&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List limits: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "resource": {
        "checks": 150,
        "alarms": 50
    },
    "rate": {
        "global": {
            "limit": 50000,
            "used": 500,
            "window": "24 hours"
        },
        "test_check": {
            "limit": 500,
            "used": 5,
            "window": "24 hours"
        },
        "test_alarm": {
            "limit": 500,
            "used": 2,
            "window": "24 hours"
        }
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
            
            
        
        <resource path="audits" id="audits">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listAudits">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List audit information">
               <para role="shortdesc"> Returns audit information for the specified account. </para>
               <para>Rackspace Cloud Monitoring records every write operation in an audit. See <link linkend="general-api-info-audits">Audits</link>
                for more information on how audits are recorded.</para>
               <para>Audits are accessible as a <link linkend="api-time-series-collections">Time Series Collection</link>. By
                default the API queries the last 7 days of audit information.</para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List audit information: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;audit id="84428400-0b26-11e1-9dd4-d7e69257c9a7"&gt;
      &lt;headers&gt;
        &lt;host&gt;127.0.0.1&lt;/host&gt;
        &lt;user-agent&gt;ele-client/ae0a53c&lt;/user-agent&gt;
        &lt;accept&gt;application/xml&lt;/accept&gt;
        &lt;content-type&gt;application/xml&lt;/content-type&gt;
        &lt;x-auth-token&gt;917ac3575c29e2f27e7236836a732615d62e416d4aead4d5&lt;/x-auth-token&gt;
        &lt;content-length&gt;254&lt;/content-length&gt;
        &lt;connection&gt;close&lt;/connection&gt;
      &lt;/headers&gt;
      &lt;url&gt;/v1.0/entities&lt;/url&gt;
      &lt;app&gt;entities&lt;/app&gt;
      &lt;query/&gt;
      &lt;txnId&gt;.rh-nzQM.h-ele.r-Kxysr1TO.c-189.ts-1320879585331.v-ae0a53c&lt;/txnId&gt;
      &lt;payload&gt;{"label":"0NwhqrC05xKh22OEYZhcQdwkw","ip_addresses":{"default":"10.0.0.2"},"metadata":{"all":"kinds","of":"stuff","can":"go","here":"null is not a valid value"}}&lt;/payload&gt;
      &lt;method&gt;POST&lt;/method&gt;
      &lt;account_id&gt;frank&lt;/account_id&gt;
      &lt;who/&gt;
      &lt;why/&gt;
      &lt;statusCode&gt;201&lt;/statusCode&gt;
    &lt;/audit&gt;
    &lt;audit id="849f22f0-0b26-11e1-9dd4-d7e69257c9a7"&gt;
      &lt;headers&gt;
        &lt;host&gt;127.0.0.1&lt;/host&gt;
        &lt;user-agent&gt;ele-client/ae0a53c&lt;/user-agent&gt;
        &lt;accept&gt;application/xml&lt;/accept&gt;
        &lt;content-type&gt;application/xml&lt;/content-type&gt;
        &lt;x-auth-token&gt;917ac3575c29e2f27e7236836a732615d62e416d4aead4d5&lt;/x-auth-token&gt;
        &lt;content-length&gt;51&lt;/content-length&gt;
        &lt;connection&gt;close&lt;/connection&gt;
      &lt;/headers&gt;
      &lt;url&gt;/v1.0/entities/enuAc9qZRB&lt;/url&gt;
      &lt;app&gt;entities&lt;/app&gt;
      &lt;query/&gt;
      &lt;txnId&gt;.rh-nzQM.h-ele.r-lobnFBE4.c-195.ts-1320879585945.v-ae0a53c&lt;/txnId&gt;
      &lt;payload&gt;{"label":"testing.example.com"}&lt;/payload&gt;
      &lt;method&gt;PUT&lt;/method&gt;
      &lt;account_id&gt;frank&lt;/account_id&gt;
      &lt;who/&gt;
      &lt;why/&gt;
      &lt;statusCode&gt;204&lt;/statusCode&gt;
    &lt;/audit&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;2&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List audit information: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "84428400-0b26-11e1-9dd4-d7e69257c9a7",
            "headers": {
                "host": "127.0.0.1",
                "user-agent": "ele-client/ae0a53c",
                "accept": "application/xml",
                "content-type": "application/xml",
                "x-auth-token": "917ac3575c29e2f27e7236836a732615d62e416d4aead4d5",
                "content-length": 254,
                "connection": "close"
            },
            "url": "/v1.0/entities",
            "app": "entities",
            "query": null,
            "txnId": ".rh-nzQM.h-ele.r-Kxysr1TO.c-189.ts-1320879585331.v-ae0a53c",
            "payload": "{\"label\":\"0NwhqrC05xKh22OEYZhcQdwkw\",\"ip_addresses\":{\"default\":\"10.0.0.2\"},\"metadata\":{\"all\":\"kinds\",\"of\":\"stuff\",\"can\":\"go\",\"here\":\"null is not a valid value\"}}",
            "method": "POST",
            "account_id": "frank",
            "who": null,
            "why": null,
            "statusCode": 201
        },
        {
            "id": "849f22f0-0b26-11e1-9dd4-d7e69257c9a7",
            "headers": {
                "host": "127.0.0.1",
                "user-agent": "ele-client/ae0a53c",
                "accept": "application/xml",
                "content-type": "application/xml",
                "x-auth-token": "917ac3575c29e2f27e7236836a732615d62e416d4aead4d5",
                "content-length": 51,
                "connection": "close"
            },
            "url": "/v1.0/entities/enuAc9qZRB",
            "app": "entities",
            "query": null,
            "txnId": ".rh-nzQM.h-ele.r-lobnFBE4.c-195.ts-1320879585945.v-ae0a53c",
            "payload": "{\"label\":\"testing.example.com\"}",
            "method": "PUT",
            "account_id": "frank",
            "who": null,
            "why": null,
            "statusCode": 204
        }
    ],
    "metadata": {
        "count": 2,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        

        <!-- Entities -->

        <resource path="entities" id="entity">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createEntity">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Add an entity">
               <para role="shortdesc"> Adds an entity to the system. </para>
               <para>When you create a new entity in the monitoring system, you specify the follow parameters:<itemizedlist>
                    <listitem>
                        <para>A meaningful name for the entity.</para>
                    </listitem>
                    <listitem>
                        <para>The IP address(es) for the entity (optional).</para>
                    </listitem>
                    <listitem>
                        <para>The meta-data that the monitoring system uses if an alarm is triggered (optional).</para>
                    </listitem>
                  </itemizedlist>
               </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add an entity: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;entity&gt;
  &lt;label&gt;Brand New Entity&lt;/label&gt;
  &lt;ip_addresses&gt;
    &lt;entity_ip_addresses_hash_key&gt;127.0.0.4&lt;/entity_ip_addresses_hash_key&gt;
    &lt;b&gt;127.0.0.5&lt;/b&gt;
    &lt;c&gt;127.0.0.6&lt;/c&gt;
    &lt;test&gt;127.0.0.7&lt;/test&gt;
  &lt;/ip_addresses&gt;
  &lt;metadata&gt;
    &lt;all&gt;kinds&lt;/all&gt;
    &lt;of&gt;stuff&lt;/of&gt;
    &lt;can&gt;go&lt;/can&gt;
    &lt;here&gt;null is not a valid value&lt;/here&gt;
  &lt;/metadata&gt;
&lt;/entity&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="label"
                         type="xsd:string"
                         style="plain"
                         path="label"
                         required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Defines a name for the entity. Value can be between 1 and 255 characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="ip_addresses"
                         type="xsd:string"
                         style="plain"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of IP addresses that can be referenced by checks on this entity. Values can be an array or
                            object with from 0 to 64 items. Each item must be an IPv4 or IPv6 address between 1 and 64
                            characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Update metadata information on the account, or add a new metadata item. Metadata is formatted
                            in key/value string pairs. The key and value attributes are string values between 1 and 255
                            characters long. </para>
                    </wadl:doc>
                  </param>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Add an entity: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Brand New Entity",
    "ip_addresses": {
        "entity_ip_addresses_hash_key": "127.0.0.4",
        "b": "127.0.0.5",
        "c": "127.0.0.6",
        "test": "127.0.0.7"
    },
    "metadata": {
        "all": "kinds",
        "of": "stuff",
        "can": "go",
        "here": "null is not a valid value"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201"/>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listEntities">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List entities">
               <para role="shortdesc"> Lists the entities associated with this account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List entities for account: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;entity id="enAAAAA"&gt;
      &lt;label&gt;Brand New Entity&lt;/label&gt;
      &lt;ip_addresses&gt;
        &lt;entity_ip_addresses_hash_key&gt;127.0.0.4&lt;/entity_ip_addresses_hash_key&gt;
        &lt;b&gt;127.0.0.5&lt;/b&gt;
        &lt;c&gt;127.0.0.6&lt;/c&gt;
        &lt;test&gt;127.0.0.7&lt;/test&gt;
      &lt;/ip_addresses&gt;
      &lt;metadata&gt;
        &lt;all&gt;kinds&lt;/all&gt;
        &lt;of&gt;stuff&lt;/of&gt;
        &lt;can&gt;go&lt;/can&gt;
        &lt;here&gt;null is not a valid value&lt;/here&gt;
      &lt;/metadata&gt;
    &lt;/entity&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List entities for account: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "enAAAAA",
            "label": "Brand New Entity",
            "ip_addresses": {
                "entity_ip_addresses_hash_key": "127.0.0.4",
                "b": "127.0.0.5",
                "c": "127.0.0.6",
                "test": "127.0.0.7"
            },
            "metadata": {
                "all": "kinds",
                "of": "stuff",
                "can": "go",
                "here": "null is not a valid value"
            }
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="entityId" id="entityId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity lookup. Use the
                        List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getEntityId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get entity by id">
               <para role="shortdesc"> Returns information about the specified entity. </para>
               <para>Use this operation to retrieve the current state of an entity.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get entity by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;entity id="enAAAAA"&gt;
  &lt;label&gt;Brand New Entity&lt;/label&gt;
  &lt;ip_addresses&gt;
    &lt;entity_ip_addresses_hash_key&gt;127.0.0.4&lt;/entity_ip_addresses_hash_key&gt;
    &lt;b&gt;127.0.0.5&lt;/b&gt;
    &lt;c&gt;127.0.0.6&lt;/c&gt;
    &lt;test&gt;127.0.0.7&lt;/test&gt;
  &lt;/ip_addresses&gt;
  &lt;metadata&gt;
    &lt;all&gt;kinds&lt;/all&gt;
    &lt;of&gt;stuff&lt;/of&gt;
    &lt;can&gt;go&lt;/can&gt;
    &lt;here&gt;null is not a valid value&lt;/here&gt;
  &lt;/metadata&gt;
&lt;/entity&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get entity by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "enAAAAA",
    "label": "Brand New Entity",
    "ip_addresses": {
        "entity_ip_addresses_hash_key": "127.0.0.4",
        "b": "127.0.0.5",
        "c": "127.0.0.6",
        "test": "127.0.0.7"
    },
    "metadata": {
        "all": "kinds",
        "of": "stuff",
        "can": "go",
        "here": "null is not a valid value"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateEntity">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update entity by id">
               <para role="shortdesc"> Updates the properties for the specified entity. </para>
               <para>Updates the entity specified by the <code>entityId</code>. You can make partial updates to an entity. When
                you submit the update request, only specify the parameters that you want to update.</para>
               <para>For Rackspace Managed Cloud entities, many fields are managed by Rackspace. If you update these entities,
                you can only update the <code>metadata</code> and <code>agent_id</code> fields using this API
                operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update entity: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;entity&gt;
  &lt;label&gt;Brand New Entity 2&lt;/label&gt;
&lt;/entity&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <!-- Entities request body parameters -->
                  <param name="id" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The id assigned to the account.</para>
                    </wadl:doc>
                  </param>
                  <param name="label"
                         type="xsd:string"
                         style="plain"
                         path="label"
                         required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Defines a name for the entity. Value can be between 1 and 255 characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="agent_id"
                         type="xsd:string"
                         style="plain"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Agent to which this entity is bound to. Value can be a string that matches the regex
                            /^[-\.\w]{1,255}$/.</para>
                    </wadl:doc>
                  </param>
                  <param name="ip_addresses"
                         type="xsd:string"
                         style="plain"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Hash of IP addresses that can be referenced by checks on this entity. Values can be an array or
                            object with from 0 to 64 items. Each item must be an IPv4 or IPv6 address between 1 and 64
                            characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata"
                         type="xsd:string"
                         style="plain"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Arbitrary key/value pairs that are passed during the alerting phase. Values can be an array or
                            object with from 0 to 256 items. The key and value attributes are string values between 1 and 255
                            characters long.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update entity: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Brand New Entity 2"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteEntity">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete entity by id">
               <para role="shortdesc"> Deletes the specified entity. </para>
               <para>Deletes an entity from your account. Also deletes any checks and alarms defined for that entity.</para>
            </wadl:doc>
            <response status="204"/>

            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        

        <!-- Checks -->

        <resource path="entities/{entityId}/checks" id="check">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the monitoring zone. Use the
                        List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createCheck">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create a check">
               <para role="shortdesc"> Creates a Rackspace Cloud Monitoring check and associate it with an entity. </para>
               <para>Create a new check and associate it with an entity using the parameters listed in
                <link linkend="section-Checks">Attributes.</link>
               </para>
               <para>Create a new check in the monitoring system by specifying the following information using the Check <link linkend="section-Checks">Attributes.</link>:<itemizedlist>
                    <listitem>
                        <para>A name for the check</para>
                    </listitem>
                    <listitem>
                        <para>The check's parent entity</para>
                    </listitem>
                    <listitem>
                        <para>The type of check you're creating</para>
                    </listitem>
                    <listitem>
                        <para>Details of the check</para>
                    </listitem>
                    <listitem>
                        <para>The monitoring zones that will launch the check</para>
                    </listitem>
                  </itemizedlist>
               </para>
               <para>The check, as created, does not trigger alert messages until you
                <link linkend="service-alarms">create an alarm</link> to generate notifications, to enable the creation of a
                single alarm that acts upon multiple checks (e.g. alert if any of ten different servers stops responding) or
                multiple alarms off of a single check. (e.g. ensure both that a HTTPS server is responding and that it has a
                valid certificate).</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create a check: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;check&gt;
  &lt;label&gt;Website check 1&lt;/label&gt;
  &lt;type&gt;remote.http&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;http://www.foo.com&lt;/url&gt;
    &lt;method&gt;GET&lt;/method&gt;
  &lt;/details&gt;
  &lt;monitoring_zones_poll&gt;
    &lt;monitoring_zone_id&gt;mzA&lt;/monitoring_zone_id&gt;
  &lt;/monitoring_zones_poll&gt;
  &lt;timeout&gt;30&lt;/timeout&gt;
  &lt;period&gt;100&lt;/period&gt;
  &lt;target_alias&gt;entity_ip_addresses_hash_key&lt;/target_alias&gt;
&lt;/check&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create a check: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Website check 1",
    "type": "remote.http",
    "details": {
        "url": "http://www.foo.com",
        "method": "GET"
    },
    "monitoring_zones_poll": [
        "mzA"
    ],
    "timeout": 30,
    "period": 100,
    "target_alias": "entity_ip_addresses_hash_key"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Created">
                  <para>'Location' header contains a link to the newly created check.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listChecks">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List checks for entity">
               <para role="shortdesc"> Lists the checks associated with a given <code>entityId</code>. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List checks for entity: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;check id="chAAAA"&gt;
      &lt;label&gt;Website check 1&lt;/label&gt;
      &lt;type&gt;remote.http&lt;/type&gt;
      &lt;details&gt;
        &lt;url&gt;http://www.foo.com&lt;/url&gt;
        &lt;method&gt;GET&lt;/method&gt;
        &lt;follow_redirects&gt;true&lt;/follow_redirects&gt;
        &lt;include_body&gt;false&lt;/include_body&gt;
      &lt;/details&gt;
      &lt;monitoring_zones_poll&gt;
        &lt;monitoring_zone_id&gt;mzA&lt;/monitoring_zone_id&gt;
      &lt;/monitoring_zones_poll&gt;
      &lt;timeout&gt;30&lt;/timeout&gt;
      &lt;period&gt;100&lt;/period&gt;
      &lt;target_alias&gt;entity_ip_addresses_hash_key&lt;/target_alias&gt;
    &lt;/check&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List checks for entity: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "chAAAA",
            "label": "Website check 1",
            "type": "remote.http",
            "details": {
                "url": "http://www.foo.com",
                "method": "GET",
                "follow_redirects": true,
                "include_body": false
            },
            "monitoring_zones_poll": [
                "mzA"
            ],
            "timeout": 30,
            "period": 100,
            "target_alias": "entity_ip_addresses_hash_key"
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        
        <resource path="entities/{entityId}/test-check" id="checkTest">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="checkTestNew">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Test a check">
               <para role="shortdesc"> Test a check before creating it. </para>
               <para>This operation causes Rackspace Cloud Monitoring to attempt to run the check on the specified monitoring zones and return the
                results. This operation allows you to test the check parameters in a single step before the check is actually
                created in the system. <note>
                    <para>You can copy the results of a test check response and paste it directly into a test alarm.</para>
                  </note>
               </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test a check: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;test_check&gt;
  &lt;type&gt;remote.http&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;http://www.foo.com&lt;/url&gt;
    &lt;method&gt;GET&lt;/method&gt;
  &lt;/details&gt;
  &lt;monitoring_zones_poll&gt;
    &lt;monitoring_zone_id&gt;mzA&lt;/monitoring_zone_id&gt;
  &lt;/monitoring_zones_poll&gt;
  &lt;timeout&gt;30&lt;/timeout&gt;
  &lt;target_alias&gt;default&lt;/target_alias&gt;
&lt;/test_check&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test a check: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "type": "remote.http",
    "details": {
        "url": "http://www.foo.com",
        "method": "GET"
    },
    "monitoring_zones_poll": [
        "mzA"
    ],
    "timeout": 30,
    "target_alias": "default"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test a check: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;checks_data&gt;
  &lt;check_data&gt;
    &lt;timestamp&gt;1319222001982&lt;/timestamp&gt;
    &lt;monitoring_zone_id&gt;mzxJ4L2IU&lt;/monitoring_zone_id&gt;
    &lt;available&gt;true&lt;/available&gt;
    &lt;status&gt;code=200,rt=0.257s,bytes=0&lt;/status&gt;
    &lt;metrics&gt;
      &lt;bytes&gt;
        &lt;type&gt;i&lt;/type&gt;
        &lt;data&gt;0&lt;/data&gt;
      &lt;/bytes&gt;
      &lt;tt_firstbyte&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;257&lt;/data&gt;
      &lt;/tt_firstbyte&gt;
      &lt;tt_connect&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;128&lt;/data&gt;
      &lt;/tt_connect&gt;
      &lt;code&gt;
        &lt;type&gt;s&lt;/type&gt;
        &lt;data&gt;200&lt;/data&gt;
      &lt;/code&gt;
      &lt;duration&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;257&lt;/data&gt;
      &lt;/duration&gt;
    &lt;/metrics&gt;
  &lt;/check_data&gt;
&lt;/checks_data&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test a check: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">[
    {
        "timestamp": 1319222001982,
        "monitoring_zone_id": "mzxJ4L2IU",
        "available": true,
        "status": "code=200,rt=0.257s,bytes=0",
        "metrics": {
            "bytes": {
                "type": "i",
                "data": "0"
            },
            "tt_firstbyte": {
                "type": "I",
                "data": "257"
            },
            "tt_connect": {
                "type": "I",
                "data": "128"
            },
            "code": {
                "type": "s",
                "data": "200"
            },
            "duration": {
                "type": "I",
                "data": "257"
            }
        }
    }
]</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="entities/{entityId}/checks/test-check" id="checkIdTest">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>The id for the monitoring zone the check is associated with. Use the List entities operation to
                        find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="checkExistingTest">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Test an existing check">
               <para role="shortdesc"> Test an existing check inline. </para>
               <para>This operation causes Rackspace Cloud Monitoring to attempt to run the check on the specified monitoring zones and return the
                results. This allows you to test the check parameters.<note>
                    <para>You can copy the results of a test check response and paste it directly into a test alarm. </para>
                  </note>
                  <note>
                     <para>There is no request body, just posting to the url executes the request.</para>
                  </note>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test an existing check: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;checks_data&gt;
  &lt;check_data&gt;
    &lt;timestamp&gt;1319222001982&lt;/timestamp&gt;
    &lt;monitoring_zone_id&gt;mzxJ4L2IU&lt;/monitoring_zone_id&gt;
    &lt;available&gt;true&lt;/available&gt;
    &lt;status&gt;code=200,rt=0.257s,bytes=0&lt;/status&gt;
    &lt;metrics&gt;
      &lt;bytes&gt;
        &lt;type&gt;i&lt;/type&gt;
        &lt;data&gt;0&lt;/data&gt;
      &lt;/bytes&gt;
      &lt;tt_firstbyte&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;257&lt;/data&gt;
      &lt;/tt_firstbyte&gt;
      &lt;tt_connect&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;128&lt;/data&gt;
      &lt;/tt_connect&gt;
      &lt;code&gt;
        &lt;type&gt;s&lt;/type&gt;
        &lt;data&gt;200&lt;/data&gt;
      &lt;/code&gt;
      &lt;duration&gt;
        &lt;type&gt;I&lt;/type&gt;
        &lt;data&gt;257&lt;/data&gt;
      &lt;/duration&gt;
    &lt;/metrics&gt;
  &lt;/check_data&gt;
&lt;/checks_data&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test an existing check: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">[
    {
        "timestamp": 1319222001982,
        "monitoring_zone_id": "mzxJ4L2IU",
        "available": true,
        "status": "code=200,rt=0.257s,bytes=0",
        "metrics": {
            "bytes": {
                "type": "i",
                "data": "0"
            },
            "tt_firstbyte": {
                "type": "I",
                "data": "257"
            },
            "tt_connect": {
                "type": "I",
                "data": "128"
            },
            "code": {
                "type": "s",
                "data": "200"
            },
            "duration": {
                "type": "I",
                "data": "257"
            }
        }
    }
]</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        
        <resource path="entities/{entityId}/checks/{checkId}" id="checkId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the monitoring zone. Use the
                        List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getCheck">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get check by id">
               <para role="shortdesc"> Returns information about the specified check. </para>
               <para>Use this operation to retrieve the current state of a check.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Get check by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;check id="chAAAA"&gt;
  &lt;label&gt;Website check 1&lt;/label&gt;
  &lt;type&gt;remote.http&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;http://www.foo.com&lt;/url&gt;
    &lt;method&gt;GET&lt;/method&gt;
    &lt;follow_redirects&gt;true&lt;/follow_redirects&gt;
    &lt;include_body&gt;false&lt;/include_body&gt;
  &lt;/details&gt;
  &lt;monitoring_zones_poll&gt;
    &lt;monitoring_zone_id&gt;mzA&lt;/monitoring_zone_id&gt;
  &lt;/monitoring_zones_poll&gt;
  &lt;timeout&gt;30&lt;/timeout&gt;
  &lt;period&gt;100&lt;/period&gt;
  &lt;target_alias&gt;entity_ip_addresses_hash_key&lt;/target_alias&gt;
&lt;/check&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get check by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "chAAAA",
    "label": "Website check 1",
    "type": "remote.http",
    "details": {
        "url": "http://www.foo.com",
        "method": "GET",
        "follow_redirects": true,
        "include_body": false
    },
    "monitoring_zones_poll": [
        "mzA"
    ],
    "timeout": 30,
    "period": 100,
    "target_alias": "entity_ip_addresses_hash_key"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateCheck">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update check by id">
               <para role="shortdesc"> Updates the properties for the specified check. </para>
               <para>Updates the specified check with the attribute values included in the request body. You only have to
                specify the attributes that you want to update.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update check: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;check&gt;
  &lt;label&gt;New check label&lt;/label&gt;
  &lt;timeout&gt;10&lt;/timeout&gt;
&lt;/check&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Update check: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "New check label",
    "timeout": 10
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteCheck">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete a check by id">
               <para role="shortdesc"> Deletes a check from your account. </para>
            </wadl:doc>
            <response status="204"/>

            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        

        <!-- Check Types -->

        <resource path="check_types" id="checkType">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createCheckType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create a Check type">
               <para role="shortdesc"> Users cannot create Check types. </para>
            </wadl:doc>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listCheckTypes">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List Check types">
               <para role="shortdesc"> Lists all available check types. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Check types: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;check_type id="remote.dns"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 53)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;query&lt;/name&gt;
          &lt;description&gt;DNS Query&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;record_type&lt;/name&gt;
          &lt;description&gt;DNS Record Type&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.ssh"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 22)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.smtp"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 25)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ehlo&lt;/name&gt;
          &lt;description&gt;EHLO parameter&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;from&lt;/name&gt;
          &lt;description&gt;From parameter&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;to&lt;/name&gt;
          &lt;description&gt;To parameter (if blank, a "quit" is issued before sending a to line, and the connection is terminated)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;payload&lt;/name&gt;
          &lt;description&gt;Specifies the payload&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;starttls&lt;/name&gt;
          &lt;description&gt;Should the connection be upgraded to TLS/SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.http"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;url&lt;/name&gt;
          &lt;description&gt;Target URL&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;body&lt;/name&gt;
          &lt;description&gt;Body match regular expression (body is limited to 100k)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;headers&lt;/name&gt;
          &lt;description&gt;Arbitrary headers which are sent with the request.&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;body_matches&lt;/name&gt;
          &lt;description&gt;Body match regular expressions (body is limited to 100k, matches are truncated to 80 characters)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;method&lt;/name&gt;
          &lt;description&gt;HTTP method (default: GET)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;auth_user&lt;/name&gt;
          &lt;description&gt;Optional auth user&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;auth_password&lt;/name&gt;
          &lt;description&gt;Optional auth password&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;follow_redirects&lt;/name&gt;
          &lt;description&gt;Follow redirects (default: true)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;payload&lt;/name&gt;
          &lt;description&gt;Specify a request body (limited to 1024 characters). If following a redirect, payload will only be sent to first location&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.tcp"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;banner_match&lt;/name&gt;
          &lt;description&gt;Banner match regex.&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;send_body&lt;/name&gt;
          &lt;description&gt;Send a body. If a banner is provided the body is sent after the banner is verified.&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;body_match&lt;/name&gt;
          &lt;description&gt;Body match regex. Key/Values are captured when matches are specified within the regex. Note: Maximum body size 1024 bytes.&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.ping"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;count&lt;/name&gt;
          &lt;description&gt;Number of pings to send within a single check&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.ftp-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 21)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.imap-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 143)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.pop3-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 110)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.smtp-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 25)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.postgresql-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 5432)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.telnet-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 23)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;banner_match&lt;/name&gt;
          &lt;description&gt;Banner to check&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.mysql-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 3306)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
    &lt;check_type id="remote.mssql-banner"&gt;
      &lt;category&gt;remote&lt;/category&gt;
      &lt;type&gt;remote&lt;/type&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;port&lt;/name&gt;
          &lt;description&gt;Port number (default: 1433)&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;ssl&lt;/name&gt;
          &lt;description&gt;Enable SSL&lt;/description&gt;
          &lt;optional&gt;true&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/check_type&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;14&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Check types: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "remote.dns",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 53)",
                    "optional": true
                },
                {
                    "name": "query",
                    "description": "DNS Query",
                    "optional": false
                },
                {
                    "name": "record_type",
                    "description": "DNS Record Type",
                    "optional": false
                }
            ]
        },
        {
            "id": "remote.ssh",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 22)",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.smtp",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 25)",
                    "optional": true
                },
                {
                    "name": "ehlo",
                    "description": "EHLO parameter",
                    "optional": true
                },
                {
                    "name": "from",
                    "description": "From parameter",
                    "optional": true
                },
                {
                    "name": "to",
                    "description": "To parameter (if blank, a \"quit\" is issued before sending a to line, and the connection is terminated)",
                    "optional": true
                },
                {
                    "name": "payload",
                    "description": "Specifies the payload",
                    "optional": true
                },
                {
                    "name": "starttls",
                    "description": "Should the connection be upgraded to TLS/SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.http",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "url",
                    "description": "Target URL",
                    "optional": false
                },
                {
                    "name": "body",
                    "description": "Body match regular expression (body is limited to 100k)",
                    "optional": true
                },
                {
                    "name": "headers",
                    "description": "Arbitrary headers which are sent with the request.",
                    "optional": true
                },
                {
                    "name": "body_matches",
                    "description": "Body match regular expressions (body is limited to 100k, matches are truncated to 80 characters)",
                    "optional": true
                },
                {
                    "name": "method",
                    "description": "HTTP method (default: GET)",
                    "optional": true
                },
                {
                    "name": "auth_user",
                    "description": "Optional auth user",
                    "optional": true
                },
                {
                    "name": "auth_password",
                    "description": "Optional auth password",
                    "optional": true
                },
                {
                    "name": "follow_redirects",
                    "description": "Follow redirects (default: true)",
                    "optional": true
                },
                {
                    "name": "payload",
                    "description": "Specify a request body (limited to 1024 characters). If following a redirect, payload will only be sent to first location",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.tcp",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number",
                    "optional": false
                },
                {
                    "name": "banner_match",
                    "description": "Banner match regex.",
                    "optional": true
                },
                {
                    "name": "send_body",
                    "description": "Send a body. If a banner is provided the body is sent after the banner is verified.",
                    "optional": true
                },
                {
                    "name": "body_match",
                    "description": "Body match regex. Key/Values are captured when matches are specified within the regex. Note: Maximum body size 1024 bytes.",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.ping",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "count",
                    "description": "Number of pings to send within a single check",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.ftp-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 21)",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.imap-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 143)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.pop3-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 110)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.smtp-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 25)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.postgresql-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 5432)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.telnet-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 23)",
                    "optional": true
                },
                {
                    "name": "banner_match",
                    "description": "Banner to check",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.mysql-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 3306)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        },
        {
            "id": "remote.mssql-banner",
            "category": "remote",
            "type": "remote",
            "fields": [
                {
                    "name": "port",
                    "description": "Port number (default: 1433)",
                    "optional": true
                },
                {
                    "name": "ssl",
                    "description": "Enable SSL",
                    "optional": true
                }
            ]
        }
    ],
    "metadata": {
        "count": 14,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="check_types/checkTypeId" id="checkTypeId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getCheckTypeId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get check by id">
               <para role="shortdesc"> Retrieve information for a single check type. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get Check type by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;check_type id="remote.dns"&gt;
  &lt;category&gt;remote&lt;/category&gt;
  &lt;type&gt;remote&lt;/type&gt;
  &lt;fields&gt;
    &lt;field&gt;
      &lt;name&gt;port&lt;/name&gt;
      &lt;description&gt;Port number (default: 53)&lt;/description&gt;
      &lt;optional&gt;true&lt;/optional&gt;
    &lt;/field&gt;
    &lt;field&gt;
      &lt;name&gt;query&lt;/name&gt;
      &lt;description&gt;DNS Query&lt;/description&gt;
      &lt;optional&gt;false&lt;/optional&gt;
    &lt;/field&gt;
    &lt;field&gt;
      &lt;name&gt;record_type&lt;/name&gt;
      &lt;description&gt;DNS Record Type&lt;/description&gt;
      &lt;optional&gt;false&lt;/optional&gt;
    &lt;/field&gt;
  &lt;/fields&gt;
&lt;/check_type&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get Check type by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "remote.dns",
    "category": "remote",
    "type": "remote",
    "fields": [
        {
            "name": "port",
            "description": "Port number (default: 53)",
            "optional": true
        },
        {
            "name": "query",
            "description": "DNS Query",
            "optional": false
        },
        {
            "name": "record_type",
            "description": "DNS Record Type",
            "optional": false
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="check_types" id="checkTypeNA">
         <method name="PUT" rax:id="updateCheckType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update Check type">
               <para role="shortdesc"> Users cannot update Check types. </para>
            </wadl:doc>
         </method>
         <method name="DELETE" rax:id="deleteCheckType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete a Check type">
               <para role="shortdesc"> Users cannot delete Check types. </para>
            </wadl:doc>
         </method>
      </resource>
            
            
        

        <!-- Metrics resources -->

        <resource path="entities/{entityId}/checks/{checkId}/metrics" id="listMetrics">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity associated with the
                        Check. Use the List check types operation to find the <code>checkTypeId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listMetricsbyCheckId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List Check types">
               <para role="shortdesc"> Lists the metrics associated with the specified <code>checkId</code>. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                  <para>This operation returns a response body that
                    lists the metrics associated with your check. A single check usually generates several metrics. For
                    example, http checks generate the following metrics: bytes, code, duration, truncated, tt_connect,
                    tt_firstbyte. </para>
                  <para>Metrics generated by remote checks are generated for each monitoring zone where the check is
                    issued.</para>
                  <para>Metric names use the syntax:</para>
                  <para>
                     <replaceable>monitoringZone</replaceable>.<replaceable>metricName</replaceable>
                  </para>
                  <para>where:</para>
                  <variablelist>
                    <varlistentry>
                        <term>
                           <replaceable>monitoringZone</replaceable>
                        </term>
                        <listitem>
                            <para>is the monitoring zone where the check was issued.</para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>
                           <replaceable>metricName</replaceable>
                        </term>
                        <listitem>
                            <para>is the name of the metric.</para>
                        </listitem>
                    </varlistentry>
                  </variablelist>
                  <para>For example a metric called <literal>tt_connect</literal>, generated from the <literal>DFW</literal>
                    monitoring zone, is labeled as <literal>mzdfw.tt_connect</literal>.</para>
                  <note>
                    <para>Metrics generated by agent checks have no monitoring zone.</para>
                  </note>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Check types: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;metricinfo&gt;
      &lt;name&gt;mzdfw.available&lt;/name&gt;
    &lt;/metricinfo&gt;
    &lt;metricinfo&gt;
      &lt;name&gt;mzdfw.average&lt;/name&gt;
    &lt;/metricinfo&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;2&lt;/count&gt;
    &lt;limit /&gt;
    &lt;marker /&gt;
    &lt;next_marker /&gt;
    &lt;next_href /&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Check types: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "name": "mzdfw.available"
        },
        {
            "name": "mzdfw.average"
        }
    ],
    "metadata": {
        "count": 2,
        "limit": null,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        
        <resource path="entities/{entityId}/checks/{checkId}" id="fetchMetrics">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="fetchDataPoints">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get metrics by entity and check ids">
               <para role="shortdesc"> Queries for all data points of <code>metricName</code> between two points in time.
            </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Fetch data points: full resolution: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
    &lt;values&gt;
        &lt;rollupmetric&gt;
            &lt;numPoints&gt;1&lt;/numPoints&gt;
            &lt;average&gt;4&lt;/average&gt;
            &lt;timestamp&gt;1335744000000&lt;/timestamp&gt;
        &lt;/rollupmetric&gt;
        &lt;rollupmetric&gt;
            &lt;numPoints&gt;1&lt;/numPoints&gt;
            &lt;average&gt;6&lt;/average&gt;
            &lt;timestamp&gt;1335744000030&lt;/timestamp&gt;
        &lt;/rollupmetric&gt;
    &lt;/values&gt;
    &lt;metadata&gt;
        &lt;count&gt;2&lt;/count&gt;
        &lt;limit /&gt;
        &lt;marker /&gt;
        &lt;next_marker /&gt;
        &lt;next_href /&gt;
    &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Fetch data points: full resolution: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "numPoints": 1,
            "average": 4,
            "timestamp": 1335744000000
        },
        {
            "numPoints": 1,
            "average": 6,
            "timestamp": 1335744000030
        }
    ],
    "metadata": {
        "count": 2,
        "limit": null,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Fetch data points: rollup response in XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
    &lt;values&gt;
        &lt;rollupmetric&gt;
            &lt;numPoints&gt;1141&lt;/numPoints&gt;
            &lt;average&gt;4.1&lt;/average&gt;
            &lt;timestamp&gt;1335744000000&lt;/timestamp&gt;
        &lt;/rollupmetric&gt;
        &lt;rollupmetric&gt;
            &lt;numPoints&gt;2880&lt;/numPoints&gt;
            &lt;average&gt;6.05&lt;/average&gt;
            &lt;timestamp&gt;1335830400000&lt;/timestamp&gt;
        &lt;/rollupmetric&gt;
    &lt;/values&gt;
    &lt;metadata&gt;
        &lt;count&gt;2&lt;/count&gt;
        &lt;limit /&gt;
        &lt;marker /&gt;
        &lt;next_marker /&gt;
        &lt;next_href /&gt;
    &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="numPoints"
                         style="plain"
                         type="xsd:string"
                         required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The number of points. The value is <code>1</code> for full resolution data.</para>
                    </wadl:doc>
                  </param>
                  <param name="average" style="plain" type="integer" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Numerical value. This parameter returns the value of raw sample itself.</para>
                    </wadl:doc>
                  </param>
                  <param name="timestamp"
                         style="plain"
                         type="xsd:string"
                         required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Returns the time when the metric was collected.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Fetch data points: rollup response in JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "numPoints": 1141,
            "average": 4.1,
            "timestamp": 1335744000000
        },
        {
            "numPoints": 2880,
            "average": 6.05,
            "timestamp": 1335830400000
        }
    ],
    "metadata": {
        "count": 2,
        "limit": null,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
            
            
            
        

        <!-- Alarms resources -->

        <resource path="entities/{entityId}/alarms" id="alarms">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity associated with the
                        Alarm. Use the List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createAlarm">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create alarm">
               <para role="shortdesc"> Creates a new alarm for the specified entity. Specify the alarm's characteristics using a
                valid set of parameters from the <link linkend="alarms_attributes">Attributes</link> table. </para>
            </wadl:doc>
            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted">
                  <para>'Location' header contains a link to the newly created alarm.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create an alarm: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm&gt;
  &lt;check_id&gt;chAAAA&lt;/check_id&gt;
  &lt;criteria&gt;if (metric["duration"] &amp;gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);&lt;/criteria&gt;
  &lt;notification_plan_id&gt;npAAAAA&lt;/notification_plan_id&gt;
&lt;/alarm&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id" style="header" type="URI">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Returns a link to the newly created check.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create an alarm: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "check_id": "chAAAA",
    "criteria": "if (metric[\"duration\"] &gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);",
    "notification_plan_id": "npAAAAA"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listAlarms">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List alarms">
               <para role="shortdesc"> List the alarms on the specified <code>entityId</code>. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List Alarms: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;alarm id="alAAAA"&gt;
      &lt;check_id&gt;chAAAA&lt;/check_id&gt;
      &lt;criteria&gt;if (metric["duration"] &amp;gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);&lt;/criteria&gt;
    &lt;/alarm&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List Alarms: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "alAAAA",
            "check_id": "chAAAA",
            "criteria": "if (metric[\"duration\"] &gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);"
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        
        <resource path="entities/{entityId}/test-alarm" id="test_alarm">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity associated with the
                        Alarm. Use the List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="alarmsTest">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Test an alarm">
               <para role="shortdesc"> Test an alarm before putting it in production. </para>
            </wadl:doc>

            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test an alarm: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;test_run_alarm&gt;
  &lt;criteria&gt;if (metric["code"] == "404") { return new AlarmStatus(CRITICAL, "not found"); } return new AlarmStatus(OK);&lt;/criteria&gt;
  &lt;checks_data&gt;
    &lt;check_data&gt;
      &lt;timestamp&gt;1319222001982&lt;/timestamp&gt;
      &lt;monitoring_zone_id&gt;mzxJ4L2IU&lt;/monitoring_zone_id&gt;
      &lt;available&gt;true&lt;/available&gt;
      &lt;status&gt;code=200,rt=0.257s,bytes=0&lt;/status&gt;
      &lt;metrics&gt;
        &lt;bytes&gt;
          &lt;type&gt;i&lt;/type&gt;
          &lt;data&gt;0&lt;/data&gt;
        &lt;/bytes&gt;
        &lt;tt_firstbyte&gt;
          &lt;type&gt;I&lt;/type&gt;
          &lt;data&gt;257&lt;/data&gt;
        &lt;/tt_firstbyte&gt;
        &lt;tt_connect&gt;
          &lt;type&gt;I&lt;/type&gt;
          &lt;data&gt;128&lt;/data&gt;
        &lt;/tt_connect&gt;
        &lt;code&gt;
          &lt;type&gt;s&lt;/type&gt;
          &lt;data&gt;200&lt;/data&gt;
        &lt;/code&gt;
        &lt;duration&gt;
          &lt;type&gt;I&lt;/type&gt;
          &lt;data&gt;257&lt;/data&gt;
        &lt;/duration&gt;
      &lt;/metrics&gt;
    &lt;/check_data&gt;
  &lt;/checks_data&gt;
&lt;/test_run_alarm&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test an alarm: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "criteria": "if (metric[\"code\"] == \"404\") { return new AlarmStatus(CRITICAL, \"not found\"); } return new AlarmStatus(OK);",
    "check_data": [
        {
            "timestamp": 1319222001982,
            "monitoring_zone_id": "mzxJ4L2IU",
            "available": true,
            "status": "code=200,rt=0.257s,bytes=0",
            "metrics": {
                "bytes": {
                    "type": "i",
                    "data": "0"
                },
                "tt_firstbyte": {
                    "type": "I",
                    "data": "257"
                },
                "tt_connect": {
                    "type": "I",
                    "data": "128"
                },
                "code": {
                    "type": "s",
                    "data": "200"
                },
                "duration": {
                    "type": "I",
                    "data": "257"
                }
            }
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test an alarm: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm_data&gt;
  &lt;alarm_data&gt;
    &lt;timestamp&gt;1319224500831&lt;/timestamp&gt;
    &lt;state&gt;OK&lt;/state&gt;
    &lt;status&gt;Matched default return statement&lt;/status&gt;
  &lt;/alarm_data&gt;
&lt;/alarm_data&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Test an alarm: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">[
    {
        "timestamp": 1319224500831,
        "state": "OK",
        "status": "Matched default return statement"
    }
]</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        

        <resource path="entities/{entityId}/alarms/{alarmId}" id="alarmId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAlarmId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get alarm by id">
               <para role="shortdesc"> Get information for a single alarm. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarms by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm id="alAAAA"&gt;
  &lt;check_id&gt;chAAAA&lt;/check_id&gt;
  &lt;criteria&gt;if (metric["duration"] &amp;gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);&lt;/criteria&gt;
&lt;/alarm&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarms by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "alAAAA",
    "check_id": "chAAAA",
    "criteria": "if (metric[\"duration\"] &gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateAlarm">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update alarm by id">
               <para role="shortdesc"> Updates the specified alarm with the properties submitted with the request. </para>
               <para>You can make partial updates to a notification plan. When you submit the update request, only include the
                parameters for values you want to change.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update alarm by id: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm&gt;
  &lt;criteria&gt;if (metric["average"] &amp;lt; 100) { return new AlarmStatus(OK); } return new AlarmStatus(WARNING);&lt;/criteria&gt;
&lt;/alarm&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="label" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Friendly name for the notification plan, between 1 and 255 characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="critical_state"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the
                            notification list to send to when the state is <code>CRITICAL</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Update metadata information on the account, or add a new metadata item. Metadata is formatted
                            in key/value string pairs. The key and value attributes are string values between 1 and 255
                            characters long. </para>
                    </wadl:doc>
                  </param>
                  <param name="ok_state" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the notification list to send to when the state is <code>OK</code>.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="warning_state"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the notification list to send to when the state is <code>WARNING</code>.
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update alarm by id: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "criteria": "if (metric[\"average\"] &lt; 100) { return new AlarmStatus(OK); } return new AlarmStatus(WARNING);"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>

         </method>
         <method name="DELETE" rax:id="deleteAlarm">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete alarm">
               <para role="shortdesc"> Delete an alarm from your account. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        
        <!-- Notification plan resources -->

        <resource path="notification_plans" id="notifyPlans">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createNotifyPlan">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create notification plan">
               <para role="shortdesc"> Creates a notification plan. </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create motification plan: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification_plan&gt;
  &lt;label&gt;Notification Plan 1&lt;/label&gt;
  &lt;critical_state&gt;
    &lt;notification_id&gt;ntAAAA&lt;/notification_id&gt;
  &lt;/critical_state&gt;
  &lt;warning_state&gt;
    &lt;notification_id&gt;ntCCCCC&lt;/notification_id&gt;
  &lt;/warning_state&gt;
  &lt;ok_state&gt;
    &lt;notification_id&gt;ntBBBB&lt;/notification_id&gt;
  &lt;/ok_state&gt;
&lt;/notification_plan&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="label" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Friendly name for the notification plan, between 1 and 255 characters long.</para>
                    </wadl:doc>
                  </param>
                  <param name="critical_state"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the
                            notification list to send to when the state is <code>CRITICAL</code>.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Update metadata information on the account, or add a new metadata item. Metadata is formatted
                            in key/value string pairs. The key and value attributes are string values between 1 and 255
                            characters long. </para>
                    </wadl:doc>
                  </param>
                  <param name="ok_state" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the notification list to send to when the state is <code>OK</code>.
                        </para>
                    </wadl:doc>
                  </param>
                  <param name="warning_state"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>An array that defines the notification list to send to when the state is <code>WARNING</code>.
                        </para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create notification plan: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Notification Plan 1",
    "critical_state": [
        "ntAAAA"
    ],
    "warning_state": [
        "ntCCCCC"
    ],
    "ok_state": [
        "ntBBBB"
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>

            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted">
                  <para>'Location' header contains a link to the newly created notification plan.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listNotifyPlan">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List notification plan">
               <para role="shortdesc"> Lists the notification plans for the Rackspace Cloud Monitoring account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notification plans: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;notification_plan&gt;
      &lt;label&gt;Notification Plan 1&lt;/label&gt;
      &lt;critical_state&gt;
        &lt;notification_id&gt;ntAAAA&lt;/notification_id&gt;
      &lt;/critical_state&gt;
      &lt;warning_state&gt;
        &lt;notification_id&gt;ntCCCCC&lt;/notification_id&gt;
      &lt;/warning_state&gt;
      &lt;ok_state&gt;
        &lt;notification_id&gt;ntBBBB&lt;/notification_id&gt;
      &lt;/ok_state&gt;
    &lt;/notification_plan&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notification plans: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "label": "Notification Plan 1",
            "critical_state": [
                "ntAAAA"
            ],
            "warning_state": [
                "ntCCCCC"
            ],
            "ok_state": [
                "ntBBBB"
            ]
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        

        <resource path="notification_plans/notificationPlanId" id="notifyPlanId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="notifyPlanId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the notification plan to
                        lookup. Use the List notification plan operation to find the <code>notificationPlanId</code> if you
                        don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getNotifyPlan">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get notification plan by id">
               <para role="shortdesc"> Returns information about the specified notification plan. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification plan by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification_plan&gt;
  &lt;label&gt;Notification Plan 1&lt;/label&gt;
  &lt;critical_state&gt;
    &lt;notification_id&gt;ntAAAA&lt;/notification_id&gt;
  &lt;/critical_state&gt;
  &lt;warning_state&gt;
    &lt;notification_id&gt;ntCCCCC&lt;/notification_id&gt;
  &lt;/warning_state&gt;
  &lt;ok_state&gt;
    &lt;notification_id&gt;ntBBBB&lt;/notification_id&gt;
  &lt;/ok_state&gt;
&lt;/notification_plan&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification plan by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Notification Plan 1",
    "critical_state": [
        "ntAAAA"
    ],
    "warning_state": [
        "ntCCCCC"
    ],
    "ok_state": [
        "ntBBBB"
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateNotifyPlan">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update notification plan by id">
               <para role="shortdesc"> Updates the notification plan properties. </para>
               <para>You can make partial updates to a notification plan. When you submit the update request, only specify the
                parameters you want to update.</para>
            </wadl:doc>
         </method>
         <method name="DELETE" rax:id="deleteNotifyPlan">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete notification plan">
               <para role="shortdesc"> Delete a notification plan from your account. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        

        <!-- Monitoring zone resources -->

        <resource path="monitoring_zones" id="monitoringZones">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listMonitorZone">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List monitoring zone">
               <para role="shortdesc"> Lists the monitoring zones for the Rackspace Cloud Monitoring account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List monitoring zones: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;monitoring_zone id="mzAAAAA"&gt;
      &lt;label&gt;US South (Atlanta) - 5&lt;/label&gt;
      &lt;country_code&gt;US&lt;/country_code&gt;
      &lt;source_ips&gt;
        &lt;ip&gt;1.2.0.0/24&lt;/ip&gt;
      &lt;/source_ips&gt;
    &lt;/monitoring_zone&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List monitoring zones: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "mzAAAAA",
            "label": "US South (Atlanta) - 5",
            "country_code": "US",
            "source_ips": [
                "1.2.0.0/24"
            ]
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        
        <resource path="monitoring_zones/monitorintZoneId" id="monitoringZonesId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="monitorZoneId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the monitoring zone to lookup.
                        Use the List monitoring zone operation to find the <code>notificationPlanId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getMonitorZone">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get monitoring zone by id">
               <para role="shortdesc"> Returns information about the specified monitoring zone. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get monitoring zone by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;monitoring_zone id="mzAAAAA"&gt;
  &lt;label&gt;US South (Atlanta) - 5&lt;/label&gt;
  &lt;country_code&gt;US&lt;/country_code&gt;
  &lt;source_ips&gt;
    &lt;ip&gt;1.2.0.0/24&lt;/ip&gt;
  &lt;/source_ips&gt;
&lt;/monitoring_zone&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get monitoring zone by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "mzAAAAA",
    "label": "US South (Atlanta) - 5",
    "country_code": "US",
    "source_ips": [
        "1.2.0.0/24"
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            <resource path="monitoring_zones/monitorintZoneId/traceroute" id="traceroutezone">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="tracerouteMonitorZone">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Perform a tracerouts from a monitoring zone">
               <para role="shortdesc"> Performs a traceroute from a collector in the specified monitoring zones. </para>
               <para>This API operation lets you run a traceroute from a monitoring zone to a Hostname or IP address. Like all
                Cloud Monitoring features, the Traceroute API is fully dual stack, supporting both IPv4 and IPv6. The
                Traceroute API can be used to debug networking issues between the Cloud Monitoring collectors and your
                infrastructure. </para>
               <para>Note that hop numbers can repeat, which indicates a split in the route.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Traceroute: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;traceroute&gt;
  &lt;target&gt;google.com&lt;/target&gt;
  &lt;target_resolver&gt;IPv4&lt;/target_resolver&gt;
&lt;/traceroute&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="target" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Valid fully-qualified domain name (FQDN), IPv4 or IPv6 address.</para>
                    </wadl:doc>
                  </param>
                  <param name="target_resolver"
                         style="plain"
                         type="string"
                         required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Target resolver type. Value can be either IPv4 or IPv6. This attribute is applicable only if a
                            hostname value is specified in the <code>target</code> parameter.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Traceroute: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "target": "google.com",
    "target_resolver": "IPv4"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Traceroute: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;traceroute&gt;
  &lt;hops&gt;
    &lt;hop&gt;
      &lt;number&gt;1&lt;/number&gt;
      &lt;rtts&gt;3.025&lt;/rtts&gt;
      &lt;rtts&gt;3.116&lt;/rtts&gt;
      &lt;rtts&gt;3.189&lt;/rtts&gt;
      &lt;ip&gt;50.57.208.106&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;2&lt;/number&gt;
      &lt;rtts&gt;0.675&lt;/rtts&gt;
      &lt;rtts&gt;0.943&lt;/rtts&gt;
      &lt;rtts&gt;1.083&lt;/rtts&gt;
      &lt;ip&gt;50.56.6.34&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;3&lt;/number&gt;
      &lt;rtts&gt;0.558&lt;/rtts&gt;
      &lt;rtts&gt;0.824&lt;/rtts&gt;
      &lt;ip&gt;50.56.6.16&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;3&lt;/number&gt;
      &lt;rtts&gt;0.606&lt;/rtts&gt;
      &lt;ip&gt;50.56.6.18&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;4&lt;/number&gt;
      &lt;rtts&gt;0.239&lt;/rtts&gt;
      &lt;rtts&gt;0.252&lt;/rtts&gt;
      &lt;rtts&gt;0.247&lt;/rtts&gt;
      &lt;ip&gt;184.106.126.139&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;5&lt;/number&gt;
      &lt;rtts&gt;3.418&lt;/rtts&gt;
      &lt;rtts&gt;3.444&lt;/rtts&gt;
      &lt;rtts&gt;3.453&lt;/rtts&gt;
      &lt;ip&gt;69.31.110.241&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;6&lt;/number&gt;
      &lt;rtts&gt;1.219&lt;/rtts&gt;
      &lt;rtts&gt;1.231&lt;/rtts&gt;
      &lt;ip&gt;69.31.110.249&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;6&lt;/number&gt;
      &lt;rtts&gt;1.3&lt;/rtts&gt;
      &lt;ip&gt;69.31.110.253&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;7&lt;/number&gt;
      &lt;rtts&gt;2.463&lt;/rtts&gt;
      &lt;rtts&gt;2.224&lt;/rtts&gt;
      &lt;rtts&gt;2.196&lt;/rtts&gt;
      &lt;ip&gt;206.223.119.21&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;8&lt;/number&gt;
      &lt;rtts&gt;1.831&lt;/rtts&gt;
      &lt;rtts&gt;2.041&lt;/rtts&gt;
      &lt;rtts&gt;1.814&lt;/rtts&gt;
      &lt;ip&gt;209.85.254.130&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;9&lt;/number&gt;
      &lt;rtts&gt;2.558&lt;/rtts&gt;
      &lt;rtts&gt;1.977&lt;/rtts&gt;
      &lt;rtts&gt;3.105&lt;/rtts&gt;
      &lt;ip&gt;72.14.237.133&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;10&lt;/number&gt;
      &lt;rtts&gt;51.028&lt;/rtts&gt;
      &lt;ip&gt;216.239.46.214&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;10&lt;/number&gt;
      &lt;rtts&gt;29.526&lt;/rtts&gt;
      &lt;ip&gt;216.239.46.216&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;10&lt;/number&gt;
      &lt;rtts&gt;48.987&lt;/rtts&gt;
      &lt;ip&gt;216.239.46.214&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;11&lt;/number&gt;
      &lt;rtts&gt;105.6&lt;/rtts&gt;
      &lt;ip&gt;216.239.46.219&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;11&lt;/number&gt;
      &lt;rtts&gt;128.521&lt;/rtts&gt;
      &lt;ip&gt;216.239.43.5&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;11&lt;/number&gt;
      &lt;rtts&gt;105.548&lt;/rtts&gt;
      &lt;ip&gt;216.239.46.219&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;12&lt;/number&gt;
      &lt;rtts&gt;109.492&lt;/rtts&gt;
      &lt;ip&gt;72.14.235.175&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;12&lt;/number&gt;
      &lt;rtts&gt;106.523&lt;/rtts&gt;
      &lt;ip&gt;72.14.235.173&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;12&lt;/number&gt;
      &lt;rtts&gt;105.952&lt;/rtts&gt;
      &lt;ip&gt;72.14.235.175&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;13&lt;/number&gt;
      &lt;rtts&gt;106.482&lt;/rtts&gt;
      &lt;ip&gt;216.239.43.233&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;13&lt;/number&gt;
      &lt;rtts&gt;106.92&lt;/rtts&gt;
      &lt;rtts&gt;106.681&lt;/rtts&gt;
      &lt;ip&gt;209.85.253.20&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;14&lt;/number&gt;
      &lt;rtts&gt;129.616&lt;/rtts&gt;
      &lt;ip&gt;72.14.236.191&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;14&lt;/number&gt;
      &lt;rtts&gt;106.329&lt;/rtts&gt;
      &lt;ip&gt;209.85.252.83&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;14&lt;/number&gt;
      &lt;rtts&gt;106.253&lt;/rtts&gt;
      &lt;ip&gt;216.239.49.45&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;15&lt;/number&gt;
      &lt;ip&gt;*&lt;/ip&gt;
    &lt;/hop&gt;
    &lt;hop&gt;
      &lt;number&gt;16&lt;/number&gt;
      &lt;rtts&gt;106.101&lt;/rtts&gt;
      &lt;rtts&gt;106.075&lt;/rtts&gt;
      &lt;rtts&gt;106.48&lt;/rtts&gt;
      &lt;ip&gt;173.194.78.139&lt;/ip&gt;
    &lt;/hop&gt;
  &lt;/hops&gt;
&lt;/traceroute&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Traceroute: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "result": [
        {
            "number": 1,
            "rtts": [
                3.025,
                3.116,
                3.189
            ],
            "ip": "50.57.208.106"
        },
        {
            "number": 2,
            "rtts": [
                0.675,
                0.943,
                1.083
            ],
            "ip": "50.56.6.34"
        },
        {
            "number": 3,
            "rtts": [
                0.558,
                0.824
            ],
            "ip": "50.56.6.16"
        },
        {
            "number": 3,
            "rtts": [
                0.606
            ],
            "ip": "50.56.6.18"
        },
        {
            "number": 4,
            "rtts": [
                0.239,
                0.252,
                0.247
            ],
            "ip": "184.106.126.139"
        },
        {
            "number": 5,
            "rtts": [
                3.418,
                3.444,
                3.453
            ],
            "ip": "69.31.110.241"
        },
        {
            "number": 6,
            "rtts": [
                1.219,
                1.231
            ],
            "ip": "69.31.110.249"
        },
        {
            "number": 6,
            "rtts": [
                1.3
            ],
            "ip": "69.31.110.253"
        },
        {
            "number": 7,
            "rtts": [
                2.463,
                2.224,
                2.196
            ],
            "ip": "206.223.119.21"
        },
        {
            "number": 8,
            "rtts": [
                1.831,
                2.041,
                1.814
            ],
            "ip": "209.85.254.130"
        },
        {
            "number": 9,
            "rtts": [
                2.558,
                1.977,
                3.105
            ],
            "ip": "72.14.237.133"
        },
        {
            "number": 10,
            "rtts": [
                51.028
            ],
            "ip": "216.239.46.214"
        },
        {
            "number": 10,
            "rtts": [
                29.526
            ],
            "ip": "216.239.46.216"
        },
        {
            "number": 10,
            "rtts": [
                48.987
            ],
            "ip": "216.239.46.214"
        },
        {
            "number": 11,
            "rtts": [
                105.6
            ],
            "ip": "216.239.46.219"
        },
        {
            "number": 11,
            "rtts": [
                128.521
            ],
            "ip": "216.239.43.5"
        },
        {
            "number": 11,
            "rtts": [
                105.548
            ],
            "ip": "216.239.46.219"
        },
        {
            "number": 12,
            "rtts": [
                109.492
            ],
            "ip": "72.14.235.175"
        },
        {
            "number": 12,
            "rtts": [
                106.523
            ],
            "ip": "72.14.235.173"
        },
        {
            "number": 12,
            "rtts": [
                105.952
            ],
            "ip": "72.14.235.175"
        },
        {
            "number": 13,
            "rtts": [
                106.482
            ],
            "ip": "216.239.43.233"
        },
        {
            "number": 13,
            "rtts": [
                106.92,
                106.681
            ],
            "ip": "209.85.253.20"
        },
        {
            "number": 14,
            "rtts": [
                129.616
            ],
            "ip": "72.14.236.191"
        },
        {
            "number": 14,
            "rtts": [
                106.329
            ],
            "ip": "209.85.252.83"
        },
        {
            "number": 14,
            "rtts": [
                106.253
            ],
            "ip": "216.239.49.45"
        },
        {
            "number": 15,
            "rtts": [],
            "ip": "*"
        },
        {
            "number": 16,
            "rtts": [
                106.101,
                106.075,
                106.48
            ],
            "ip": "173.194.78.139"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                
            
        

        <!-- Alarm notification history resources -->

        <resource path="entities/{entityId}/alarms/{alarmId}/notification_history"
                id="discoverAlarmHistory">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity associated with the
                        alarm. Use the List check types operation to find the <code>checkTypeId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="discoverNotifyHistory">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Discover alarm notification history">
               <para role="shortdesc"> List checks for which alarm notification history is available. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Alarm notification history discovery: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;alarm_checks_map&gt;
  &lt;check_ids&gt;
    &lt;check_id&gt;chOne&lt;/check_id&gt;
    &lt;check_id&gt;chTwo&lt;/check_id&gt;
  &lt;/check_ids&gt;
&lt;/alarm_checks_map&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Alarm notification history discovery: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "check_ids": [
        "chOne",
        "chTwo"
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            <resource path="entities/{entityId}/alarms/{alarmId}/notification_history/checkId"
                id="ListAlarmHistory">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="listAlarmNotificationHistory">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List alarm notification history">
               <para role="shortdesc"> Lists alarm notification history for a given entity, alarm and check. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm notification history: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;alarm_notification_history_item id="646ac7b0-0b34-11e1-a0a1-0ff89fa2fa26"&gt;
      &lt;timestamp&gt;1320885544875&lt;/timestamp&gt;
      &lt;notification_plan_id&gt;npOne&lt;/notification_plan_id&gt;
      &lt;transaction_id&gt;sometransaction&lt;/transaction_id&gt;
      &lt;status&gt;matched return statement on line 6&lt;/status&gt;
      &lt;state&gt;WARNING&lt;/state&gt;
      &lt;previous_state&gt;OK&lt;/previous_state&gt;
      &lt;notification_results&gt;
        &lt;notification_result&gt;
          &lt;notification_id&gt;ntOne&lt;/notification_id&gt;
          &lt;notification_type&gt;webhook&lt;/notification_type&gt;
          &lt;notification_details&gt;
            &lt;url&gt;http://admin.example.com/notify/&lt;/url&gt;
          &lt;/notification_details&gt;
          &lt;in_progress&gt;false&lt;/in_progress&gt;
          &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
          &lt;success&gt;true&lt;/success&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;Unexpected status code "404". Expected one of: /2[0-9]{2}/&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
        &lt;/notification_result&gt;
        &lt;notification_result&gt;
          &lt;notification_id&gt;ntFive&lt;/notification_id&gt;
          &lt;notification_type&gt;webhook&lt;/notification_type&gt;
          &lt;notification_details&gt;
            &lt;url&gt;https://down.example.com/notify/&lt;/url&gt;
          &lt;/notification_details&gt;
          &lt;in_progress&gt;false&lt;/in_progress&gt;
          &lt;success&gt;false&lt;/success&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;attempts&gt;
            &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
            &lt;from&gt;ele&lt;/from&gt;
          &lt;/attempts&gt;
          &lt;message&gt;Notification failed after 10 attempts&lt;/message&gt;
        &lt;/notification_result&gt;
      &lt;/notification_results&gt;
    &lt;/alarm_notification_history_item&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm notification history: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "646ac7b0-0b34-11e1-a0a1-0ff89fa2fa26",
            "timestamp": 1320885544875,
            "notification_plan_id": "npOne",
            "transaction_id": "sometransaction",
            "status": "matched return statement on line 6",
            "state": "WARNING",
            "previous_state": "OK",
            "notification_results": [
                {
                    "notification_id": "ntOne",
                    "notification_type": "webhook",
                    "notification_details": {
                        "url": "http://admin.example.com/notify/"
                    },
                    "in_progress": false,
                    "message": "Success: Webhook successfully executed",
                    "success": true,
                    "attempts": [
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "Unexpected status code \"404\". Expected one of: /2[0-9]{2}/",
                            "from": "ele"
                        },
                        {
                            "message": "Success: Webhook successfully executed",
                            "from": "ele"
                        }
                    ]
                },
                {
                    "notification_id": "ntFive",
                    "notification_type": "webhook",
                    "notification_details": {
                        "url": "https://down.example.com/notify/"
                    },
                    "in_progress": false,
                    "success": false,
                    "attempts": [
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        },
                        {
                            "message": "ECONNREFUSED, Connection refused",
                            "from": "ele"
                        }
                    ],
                    "message": "Notification failed after 10 attempts"
                }
            ]
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                
                
                <resource path="entities/{entityId}/alarms/{alarmId}/notification_history/checkId/uuid"
                id="GetAlarmNotHistory">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAlarmNotifyHistory">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get alarm notification history">
               <para role="shortdesc"> Retrieve the alarm notification history for the specified alarm. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm notification history: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm_notification_history_item id="646ac7b0-0b34-11e1-a0a1-0ff89fa2fa26"&gt;
  &lt;timestamp&gt;1320885544875&lt;/timestamp&gt;
  &lt;notification_plan_id&gt;npOne&lt;/notification_plan_id&gt;
  &lt;transaction_id&gt;sometransaction&lt;/transaction_id&gt;
  &lt;status&gt;matched return statement on line 6&lt;/status&gt;
  &lt;state&gt;WARNING&lt;/state&gt;
  &lt;previous_state&gt;OK&lt;/previous_state&gt;
  &lt;notification_results&gt;
    &lt;notification_result&gt;
      &lt;notification_id&gt;ntOne&lt;/notification_id&gt;
      &lt;notification_type&gt;webhook&lt;/notification_type&gt;
      &lt;notification_details&gt;
        &lt;url&gt;http://admin.example.com/notify/&lt;/url&gt;
      &lt;/notification_details&gt;
      &lt;in_progress&gt;false&lt;/in_progress&gt;
      &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
      &lt;success&gt;true&lt;/success&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;Unexpected status code "404". Expected one of: /2[0-9]{2}/&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
    &lt;/notification_result&gt;
    &lt;notification_result&gt;
      &lt;notification_id&gt;ntFive&lt;/notification_id&gt;
      &lt;notification_type&gt;webhook&lt;/notification_type&gt;
      &lt;notification_details&gt;
        &lt;url&gt;https://down.example.com/notify/&lt;/url&gt;
      &lt;/notification_details&gt;
      &lt;in_progress&gt;false&lt;/in_progress&gt;
      &lt;success&gt;false&lt;/success&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;attempts&gt;
        &lt;message&gt;ECONNREFUSED, Connection refused&lt;/message&gt;
        &lt;from&gt;ele&lt;/from&gt;
      &lt;/attempts&gt;
      &lt;message&gt;Notification failed after 10 attempts&lt;/message&gt;
    &lt;/notification_result&gt;
  &lt;/notification_results&gt;
&lt;/alarm_notification_history_item&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm notification history: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "646ac7b0-0b34-11e1-a0a1-0ff89fa2fa26",
    "timestamp": 1320885544875,
    "notification_plan_id": "npOne",
    "transaction_id": "sometransaction",
    "status": "matched return statement on line 6",
    "state": "WARNING",
    "previous_state": "OK",
    "notification_results": [
        {
            "notification_id": "ntOne",
            "notification_type": "webhook",
            "notification_details": {
                "url": "http://admin.example.com/notify/"
            },
            "in_progress": false,
            "message": "Success: Webhook successfully executed",
            "success": true,
            "attempts": [
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "Unexpected status code \"404\". Expected one of: /2[0-9]{2}/",
                    "from": "ele"
                },
                {
                    "message": "Success: Webhook successfully executed",
                    "from": "ele"
                }
            ]
        },
        {
            "notification_id": "ntFive",
            "notification_type": "webhook",
            "notification_details": {
                "url": "https://down.example.com/notify/"
            },
            "in_progress": false,
            "success": false,
            "attempts": [
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                },
                {
                    "message": "ECONNREFUSED, Connection refused",
                    "from": "ele"
                }
            ],
            "message": "Notification failed after 10 attempts"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                    
                
            
        

        <!-- Notification resources -->

        <resource path="notifications" id="notifications">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createNotification">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create a notification">
               <para role="shortdesc"> Creates a notification. </para>
               <para>Create a new check and associate it with an entity using the parameters listed in
                <link linkend="section-Checks">Attributes.</link>
               </para>
               <para>Create a new notification in the monitoring system by specifying the following information:<link linkend="swiz-notifications.xml-2">attributes.</link>:<itemizedlist>
                    <listitem>
                        <para>A name for the notification.</para>
                    </listitem>
                    <listitem>
                        <para>The type of notification you are creating.</para>
                    </listitem>
                    <listitem>
                        <para>Details of the notification</para>
                    </listitem>
                  </itemizedlist>
               </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create webhook notification: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification&gt;
  &lt;label&gt;my webhook #1&lt;/label&gt;
  &lt;type&gt;webhook&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;https://systems.example.org/alert&lt;/url&gt;
  &lt;/details&gt;
&lt;/notification&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create webhook notification: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "my webhook #1",
    "type": "webhook",
    "details": {
        "url": "https://systems.example.org/alert"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create email notification: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification&gt;
  &lt;label&gt;my email #1&lt;/label&gt;
  &lt;type&gt;email&lt;/type&gt;
  &lt;details&gt;
    &lt;address&gt;test@example.com&lt;/address&gt;
  &lt;/details&gt;
&lt;/notification&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create email notification: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "my email #1",
    "type": "email",
    "details": {
        "address": "test@example.com"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted">
                  <para>'Location' header contains a link to the newly created check.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listNotifications">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List Notifications">
               <para role="shortdesc"> Lists the notifications for the account. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notifications: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;notification id="ntAAAA"&gt;
      &lt;label&gt;my webhook #1&lt;/label&gt;
      &lt;type&gt;webhook&lt;/type&gt;
      &lt;details&gt;
        &lt;url&gt;https://systems.example.org/alert&lt;/url&gt;
      &lt;/details&gt;
    &lt;/notification&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notifications: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "ntAAAA",
            "label": "my webhook #1",
            "type": "webhook",
            "details": {
                "url": "https://systems.example.org/alert"
            }
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="notifications/test-notification" id="testNotify">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="TestNotification">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Test a notification">
               <para role="shortdesc"> Test a notification. </para>
               <para>This operation allows you to test a notification before creating it. The actual notification comes from the
                same server where the actual alert messages come from. This allow you to, among other things, verify that
                your firewall is configured properly. <note>
                    <para>You can copy the results of a test notification response and paste it directly into a test
                        notification.</para>
                  </note>
               </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test notification: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;test_notification&gt;
  &lt;type&gt;webhook&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;http://my.web-server.com:5981/&lt;/url&gt;
  &lt;/details&gt;
&lt;/test_notification&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test a notification: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "type": "webhook",
    "details": {
        "url": "http://my.web-server.com:5981/"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test a notification: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification_data&gt;
  &lt;status&gt;success&lt;/status&gt;
  &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
&lt;/notification_data&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test a notification: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "success",
    "message": "Success: Webhook successfully executed"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        
        <resource path="notifications/{notificationId}/test" id="TestNotifyId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="TestNotificationId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Test an existing notification">
               <para role="shortdesc"> Tests an existing notification. </para>
               <para>This operation allows you to test an existing notification. The notification comes from the same server
                that the alert messages come from. One use for this test is to verify that your firewall is configured
                properly.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test an existing notification: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification_data&gt;
  &lt;status&gt;success&lt;/status&gt;
  &lt;message&gt;Success: Webhook successfully executed&lt;/message&gt;
&lt;/notification_data&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Test an existing notification: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "success",
    "message": "Success: Webhook successfully executed"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="notifications/{notificationId}" id="notificationId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the notification Use the List
                        notifications operation to find the <code>notificationId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getNotification">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get notification by id">
               <para role="shortdesc"> Returns information about the specified notification. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification id="ntAAAA"&gt;
  &lt;label&gt;my webhook #1&lt;/label&gt;
  &lt;type&gt;webhook&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;https://systems.example.org/alert&lt;/url&gt;
  &lt;/details&gt;
&lt;/notification&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "ntAAAA",
    "label": "my webhook #1",
    "type": "webhook",
    "details": {
        "url": "https://systems.example.org/alert"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateNotification">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update notification">
               <para role="shortdesc"> Updates the specified notification with update attribute values submitted with the
                request. </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update notification: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification&gt;
  &lt;type&gt;webhook&lt;/type&gt;
  &lt;details&gt;
    &lt;url&gt;https://systems.example.org/new_alert&lt;/url&gt;
  &lt;/details&gt;
&lt;/notification&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update notification: JSON request">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "type": "webhook",
    "details": {
        "url": "https://systems.example.org/new_alert"
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="204"/>
         </method>
         <method name="DELETE" rax:id="deleteNotification">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete a notification">
               <para role="shortdesc"> Deletes a notification from the user account. </para>
            </wadl:doc>
            <response status="204"/>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        
        <!-- Notification type resources -->

        <resource path="notification_types" id="notificationTypes">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createNotificationType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create a notification type">
               <para role="shortdesc"> Users cannot create notification types. </para>
            </wadl:doc>
         </method>
         <method name="GET" rax:id="listNotificationTypes">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List notification types">
               <para role="shortdesc"> Lists available notification types. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notification types: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;notification_type id="webhook"&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;url&lt;/name&gt;
          &lt;description&gt;An HTTP or HTTPS URL to POST to&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/notification_type&gt;
    &lt;notification_type id="email"&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;address&lt;/name&gt;
          &lt;description&gt;Email address to send notifications to&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/notification_type&gt;
    &lt;notification_type id="pagerduty"&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;service_key&lt;/name&gt;
          &lt;description&gt;The PagerDuty service key to use.&lt;/description&gt;
          &lt;optional&gt;false&lt;/optional&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/notification_type&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;3&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List notification types: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "webhook",
            "fields": [
                {
                    "name": "url",
                    "description": "An HTTP or HTTPS URL to POST to",
                    "optional": false
                }
            ]
        },
        {
            "id": "email",
            "fields": [
                {
                    "name": "address",
                    "description": "Email address to send notifications to",
                    "optional": false
                }
            ]
        },
        {
            "id": "pagerduty",
            "fields": [
                {
                    "name": "service_key",
                    "description": "The PagerDuty service key to use.",
                    "optional": false
                }
            ]
        }
    ],
    "metadata": {
        "count": 3,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        

        <resource path="notification_types/{notificationTypeId}" id="notificationTypeId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="notificationId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the Notification type. Use the
                        List notification types operation to find the <code>notifyID</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getNotificationType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get notification type by id">
               <para role="shortdesc"> Returns information about the specified Notification type. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification type by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;notification_type id="webhook"&gt;
  &lt;fields&gt;
    &lt;field&gt;
      &lt;name&gt;url&lt;/name&gt;
      &lt;description&gt;An HTTP or HTTPS URL to POST to&lt;/description&gt;
      &lt;optional&gt;false&lt;/optional&gt;
    &lt;/field&gt;
  &lt;/fields&gt;
&lt;/notification_type&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get notification type by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "webhook",
    "fields": [
        {
            "name": "url",
            "description": "An HTTP or HTTPS URL to POST to",
            "optional": false
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateNotificationType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update notification type">
               <para role="shortdesc"> Users cannot update notification types. </para>
            </wadl:doc>
         </method>
         <method name="DELETE" rax:id="deleteNotificationType">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete a notification type">
               <para role="shortdesc"> Users cannot delete a notification type. </para>
            </wadl:doc>
            <response status="204"/>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        

        <!-- Changelogs resources -->

        <resource path="changelogs/alarms" id="changelogs">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The monitoring service records changelogs for
                    alarm statuses. Use the Changelogs API operation to view changelogs as a
                    <link linkend="api-time-series-collections">Time Series
                        Collection</link>. By
                    default the API queries the last 7 days of changelog information.</para>
         </wadl:doc>
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity that you want to
                        view changelogs for. Use the List entities operation to find the <code>entityId</code> if you don't
                        know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getchangelogAlarms">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List types">
               <para role="shortdesc"> Lists alarm changelogs for this account, filtered by a given <code>entityId</code>. </para>
               <para>To filter returned changelogs by a given entityId, include a query string with an <code>entityId</code>
                parameter in the request.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Alarm changelog list: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;alarm_changelog id="4c5e28f0-0b3f-11e1-860d-c55c4705a286"&gt;
      &lt;timestamp&gt;1320890228991&lt;/timestamp&gt;
      &lt;entity_id&gt;enPhid7noo&lt;/entity_id&gt;
      &lt;alarm_id&gt;alahf9vuNa&lt;/alarm_id&gt;
      &lt;check_id&gt;chIe7vohba&lt;/check_id&gt;
      &lt;state&gt;WARNING&lt;/state&gt;
      &lt;analyzed_by_monitoring_zone_id&gt;DFW&lt;/analyzed_by_monitoring_zone_id&gt;
    &lt;/alarm_changelog&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Alarm changelog list: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "4c5e28f0-0b3f-11e1-860d-c55c4705a286",
            "timestamp": 1320890228991,
            "entity_id": "enPhid7noo",
            "alarm_id": "alahf9vuNa",
            "check_id": "chIe7vohba",
            "state": "WARNING",
            "analyzed_by_monitoring_zone_id": "DFW"
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        

        <!-- Views resources -->
        <resource path="views/overview" id="viewsOvw">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getviewOvw">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get overview view">
               <para role="shortdesc"> Returns the overview view for this account. </para>
               <para>Views contain a combination of data that usually includes multiple, different objects. The primary purpose
                of a view is to save API calls and make data retrieval more efficient. Instead of doing multiple API calls
                and then combining the result yourself, you can perform a single API call against the view endpoint.</para>
               <para>The overview view includes a list of entities on your account and each entity's child check and alarm
                objects. Along with the child check and alarm objects, the view also includes the latest computed state for
                each check and alarm pair. If the latest state for a check and alarm pair is not available, the alarm hasn't
                been evaluated yet and the current state for pair is 'UNKNOWN'.</para>
               <note>
                  <para>In a request, you can filter for returned entities by URI or entityId, but you cannnot use both filter
                    types in the same request. When filtering by entityId, an HTTP 404 error is returned if any supplied
                    entityIds are unknown or incorrect, When filtering requests by Entity URI, unknown URIs areignored, and
                    entities are returned for any correct URIs. An HTTP 404 error is returned only if no known URIs are
                    supplied.</para>
               </note>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get overview view: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;overview&gt;
      &lt;entity&gt;
        &lt;id&gt;enBBBBIPV4&lt;/id&gt;
        &lt;label&gt;entity b v4&lt;/label&gt;
        &lt;ip_addresses&gt;
          &lt;default&gt;127.0.0.1&lt;/default&gt;
        &lt;/ip_addresses&gt;
        &lt;metadata/&gt;
      &lt;/entity&gt;
      &lt;checks&gt;
        &lt;check&gt;
          &lt;id&gt;chFour&lt;/id&gt;
          &lt;label&gt;ch a&lt;/label&gt;
          &lt;type&gt;remote.http&lt;/type&gt;
          &lt;details&gt;
            &lt;url&gt;http://www.foo.com&lt;/url&gt;
            &lt;method&gt;GET&lt;/method&gt;
          &lt;/details&gt;
          &lt;monitoring_zones_poll&gt;mzA&lt;/monitoring_zones_poll&gt;
          &lt;timeout&gt;30&lt;/timeout&gt;
          &lt;period&gt;60&lt;/period&gt;
          &lt;target_alias&gt;default&lt;/target_alias&gt;
          &lt;target_hostname/&gt;
          &lt;target_resolver/&gt;
          &lt;disabled&gt;false&lt;/disabled&gt;
        &lt;/check&gt;
      &lt;/checks&gt;
      &lt;alarms&gt;
        &lt;alarm&gt;
          &lt;id&gt;alThree&lt;/id&gt;
          &lt;check_id&gt;chFour&lt;/check_id&gt;
          &lt;criteria&gt;if (metric["size"] &amp;gt;= 200) { return new AlarmStatus(CRITICAL); }&lt;/criteria&gt;
          &lt;notification_plan_id&gt;npOne&lt;/notification_plan_id&gt;
        &lt;/alarm&gt;
      &lt;/alarms&gt;
      &lt;latest_alarm_states&gt;
        &lt;latest_alarm_state&gt;
          &lt;timestamp&gt;1321898988&lt;/timestamp&gt;
          &lt;entity_id&gt;enBBBBIPV4&lt;/entity_id&gt;
          &lt;alarm_id&gt;alThree&lt;/alarm_id&gt;
          &lt;check_id&gt;chFour&lt;/check_id&gt;
          &lt;status&gt;everything is ok&lt;/status&gt;
          &lt;state&gt;OK&lt;/state&gt;
          &lt;previous_state&gt;WARNING&lt;/previous_state&gt;
          &lt;analyzed_by_monitoring_zone_id/&gt;
        &lt;/latest_alarm_state&gt;
      &lt;/latest_alarm_states&gt;
    &lt;/overview&gt;
    &lt;overview&gt;
      &lt;entity&gt;
        &lt;id&gt;enCCCCIPV4&lt;/id&gt;
        &lt;label&gt;entity c v4&lt;/label&gt;
        &lt;ip_addresses&gt;
          &lt;default&gt;127.0.0.1&lt;/default&gt;
        &lt;/ip_addresses&gt;
        &lt;metadata/&gt;
      &lt;/entity&gt;
      &lt;checks/&gt;
      &lt;alarms/&gt;
      &lt;latest_alarm_states/&gt;
    &lt;/overview&gt;
    &lt;overview&gt;
      &lt;entity&gt;
        &lt;id&gt;enAAAAIPV4&lt;/id&gt;
        &lt;label&gt;entity a&lt;/label&gt;
        &lt;ip_addresses&gt;
          &lt;default&gt;127.0.0.1&lt;/default&gt;
        &lt;/ip_addresses&gt;
        &lt;metadata/&gt;
      &lt;/entity&gt;
      &lt;checks&gt;
        &lt;check&gt;
          &lt;id&gt;chOne&lt;/id&gt;
          &lt;label&gt;ch a&lt;/label&gt;
          &lt;type&gt;remote.http&lt;/type&gt;
          &lt;details&gt;
            &lt;url&gt;http://www.foo.com&lt;/url&gt;
            &lt;method&gt;GET&lt;/method&gt;
          &lt;/details&gt;
          &lt;monitoring_zones_poll&gt;mzA&lt;/monitoring_zones_poll&gt;
          &lt;timeout&gt;30&lt;/timeout&gt;
          &lt;period&gt;60&lt;/period&gt;
          &lt;target_alias&gt;default&lt;/target_alias&gt;
          &lt;target_hostname/&gt;
          &lt;target_resolver/&gt;
          &lt;disabled&gt;false&lt;/disabled&gt;
        &lt;/check&gt;
        &lt;check&gt;
          &lt;id&gt;chThree&lt;/id&gt;
          &lt;label&gt;ch a&lt;/label&gt;
          &lt;type&gt;remote.http&lt;/type&gt;
          &lt;details&gt;
            &lt;url&gt;http://www.foo.com&lt;/url&gt;
            &lt;method&gt;GET&lt;/method&gt;
          &lt;/details&gt;
          &lt;monitoring_zones_poll&gt;mzA&lt;/monitoring_zones_poll&gt;
          &lt;timeout&gt;30&lt;/timeout&gt;
          &lt;period&gt;60&lt;/period&gt;
          &lt;target_alias&gt;default&lt;/target_alias&gt;
          &lt;target_hostname/&gt;
          &lt;target_resolver/&gt;
          &lt;disabled&gt;false&lt;/disabled&gt;
        &lt;/check&gt;
        &lt;check&gt;
          &lt;id&gt;chTwo&lt;/id&gt;
          &lt;label&gt;ch a&lt;/label&gt;
          &lt;type&gt;remote.http&lt;/type&gt;
          &lt;details&gt;
            &lt;url&gt;http://www.foo.com&lt;/url&gt;
            &lt;method&gt;GET&lt;/method&gt;
          &lt;/details&gt;
          &lt;monitoring_zones_poll&gt;mzA&lt;/monitoring_zones_poll&gt;
          &lt;timeout&gt;30&lt;/timeout&gt;
          &lt;period&gt;60&lt;/period&gt;
          &lt;target_alias&gt;default&lt;/target_alias&gt;
          &lt;target_hostname/&gt;
          &lt;target_resolver/&gt;
          &lt;disabled&gt;false&lt;/disabled&gt;
        &lt;/check&gt;
      &lt;/checks&gt;
      &lt;alarms&gt;
        &lt;alarm&gt;
          &lt;id&gt;alOne&lt;/id&gt;
          &lt;label&gt;Alarm 1&lt;/label&gt;
          &lt;check_id&gt;chOne&lt;/check_id&gt;
          &lt;criteria&gt;if (metric["duration"] &amp;gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);&lt;/criteria&gt;
          &lt;notification_plan_id&gt;npOne&lt;/notification_plan_id&gt;
        &lt;/alarm&gt;
        &lt;alarm&gt;
          &lt;id&gt;alTwo&lt;/id&gt;
          &lt;label&gt;Alarm 2&lt;/label&gt;
          &lt;check_id&gt;chOne&lt;/check_id&gt;
          &lt;criteria&gt;if (metric["size"] &amp;gt;= 200) { return CRITICAL } return OK&lt;/criteria&gt;
          &lt;notification_plan_id&gt;npOne&lt;/notification_plan_id&gt;
        &lt;/alarm&gt;
      &lt;/alarms&gt;
      &lt;latest_alarm_states&gt;
        &lt;latest_alarm_state&gt;
          &lt;timestamp&gt;1321898988&lt;/timestamp&gt;
          &lt;entity_id&gt;enAAAAIPV4&lt;/entity_id&gt;
          &lt;alarm_id&gt;alOne&lt;/alarm_id&gt;
          &lt;check_id&gt;chOne&lt;/check_id&gt;
          &lt;status&gt;matched return statement on line 7&lt;/status&gt;
          &lt;state&gt;WARNING&lt;/state&gt;
          &lt;previous_state&gt;OK&lt;/previous_state&gt;
          &lt;analyzed_by_monitoring_zone_id/&gt;
        &lt;/latest_alarm_state&gt;
        &lt;latest_alarm_state&gt;
          &lt;timestamp&gt;1321898988&lt;/timestamp&gt;
          &lt;entity_id&gt;enAAAAIPV4&lt;/entity_id&gt;
          &lt;alarm_id&gt;alOne&lt;/alarm_id&gt;
          &lt;check_id&gt;chTwo&lt;/check_id&gt;
          &lt;state&gt;CRITICAL&lt;/state&gt;
          &lt;analyzed_by_monitoring_zone_id/&gt;
        &lt;/latest_alarm_state&gt;
      &lt;/latest_alarm_states&gt;
    &lt;/overview&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;3&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get overview view: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "entity": {
                "id": "enBBBBIPV4",
                "label": "entity b v4",
                "ip_addresses": {
                    "default": "127.0.0.1"
                },
                "metadata": null
            },
            "checks": [
                {
                    "id": "chFour",
                    "label": "ch a",
                    "type": "remote.http",
                    "details": {
                        "url": "http://www.foo.com",
                        "method": "GET"
                    },
                    "monitoring_zones_poll": [
                        "mzA"
                    ],
                    "timeout": 30,
                    "period": 60,
                    "target_alias": "default",
                    "target_hostname": "",
                    "target_resolver": "",
                    "disabled": false
                }
            ],
            "alarms": [
                {
                    "id": "alThree",
                    "check_id": "chFour",
                    "criteria": "if (metric[\"size\"] &gt;= 200) { return new AlarmStatus(CRITICAL); }",
                    "notification_plan_id": "npOne"
                }
            ],
            "latest_alarm_states": [
                {
                    "timestamp": 1321898988,
                    "entity_id": "enBBBBIPV4",
                    "alarm_id": "alThree",
                    "check_id": "chFour",
                    "status": "everything is ok",
                    "state": "OK",
                    "previous_state": "WARNING",
                    "analyzed_by_monitoring_zone_id": null
                }
            ]
        },
        {
            "entity": {
                "id": "enCCCCIPV4",
                "label": "entity c v4",
                "ip_addresses": {
                    "default": "127.0.0.1"
                },
                "metadata": null
            },
            "checks": [],
            "alarms": [],
            "latest_alarm_states": []
        },
        {
            "entity": {
                "id": "enAAAAIPV4",
                "label": "entity a",
                "ip_addresses": {
                    "default": "127.0.0.1"
                },
                "metadata": null
            },
            "checks": [
                {
                    "id": "chOne",
                    "label": "ch a",
                    "type": "remote.http",
                    "details": {
                        "url": "http://www.foo.com",
                        "method": "GET"
                    },
                    "monitoring_zones_poll": [
                        "mzA"
                    ],
                    "timeout": 30,
                    "period": 60,
                    "target_alias": "default",
                    "target_hostname": "",
                    "target_resolver": "",
                    "disabled": false
                },
                {
                    "id": "chThree",
                    "label": "ch a",
                    "type": "remote.http",
                    "details": {
                        "url": "http://www.foo.com",
                        "method": "GET"
                    },
                    "monitoring_zones_poll": [
                        "mzA"
                    ],
                    "timeout": 30,
                    "period": 60,
                    "target_alias": "default",
                    "target_hostname": "",
                    "target_resolver": "",
                    "disabled": false
                },
                {
                    "id": "chTwo",
                    "label": "ch a",
                    "type": "remote.http",
                    "details": {
                        "url": "http://www.foo.com",
                        "method": "GET"
                    },
                    "monitoring_zones_poll": [
                        "mzA"
                    ],
                    "timeout": 30,
                    "period": 60,
                    "target_alias": "default",
                    "target_hostname": "",
                    "target_resolver": "",
                    "disabled": false
                }
            ],
            "alarms": [
                {
                    "id": "alOne",
                    "label": "Alarm 1",
                    "check_id": "chOne",
                    "criteria": "if (metric[\"duration\"] &gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);",
                    "notification_plan_id": "npOne"
                },
                {
                    "id": "alTwo",
                    "label": "Alarm 2",
                    "check_id": "chOne",
                    "criteria": "if (metric[\"size\"] &gt;= 200) { return CRITICAL } return OK",
                    "notification_plan_id": "npOne"
                }
            ],
            "latest_alarm_states": [
                {
                    "timestamp": 1321898988,
                    "entity_id": "enAAAAIPV4",
                    "alarm_id": "alOne",
                    "check_id": "chOne",
                    "status": "matched return statement on line 7",
                    "state": "WARNING",
                    "previous_state": "OK",
                    "analyzed_by_monitoring_zone_id": null
                },
                {
                    "timestamp": 1321898988,
                    "entity_id": "enAAAAIPV4",
                    "alarm_id": "alOne",
                    "check_id": "chTwo",
                    "state": "CRITICAL",
                    "analyzed_by_monitoring_zone_id": null
                }
            ]
        }
    ],
    "metadata": {
        "count": 3,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        

        <!-- Alarm example resources -->

        <resource path="alarm_examples" id="alarmexamples">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAlarmExamples">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List alarm examples">
               <para role="shortdesc"> Returns a list of alarm examples. </para>
               <para>The alarm examples list provides a complete view of all the example alarms. The list includes additional
                information for each alarm such as a list of fields with description and type.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm examples: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;alarm_template id="remote.http_body_match_1"&gt;
      &lt;label&gt;Body match - string found&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the provided string is found in the body&lt;/description&gt;
      &lt;check_type&gt;remote.http&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['body_match'] regex '${string}') {
  return new AlarmStatus(CRITICAL, '${string} found, returning CRITICAL.');
}
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;string&lt;/name&gt;
          &lt;description&gt;String to check for in the body&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.http_body_match_missing_string"&gt;
      &lt;label&gt;Body match - string not found&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the provided string is not found in the body&lt;/description&gt;
      &lt;check_type&gt;remote.http&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['body_match'] == '') {
  return new AlarmStatus(CRITICAL, 'HTTP response did not contain the correct content.');
}

return new AlarmStatus(OK, 'HTTP response contains the correct content');
&lt;/criteria&gt;
      &lt;fields/&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.http_connection_time"&gt;
      &lt;label&gt;Connection time&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING or CRITICAL based on the connection time&lt;/description&gt;
      &lt;check_type&gt;remote.http&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['duration'] &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, 'HTTP request took more than ${critical_threshold} milliseconds.');
}

if (metric['duration'] &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, 'HTTP request took more than ${warning_threshold} milliseconds.');
}

return new AlarmStatus(OK, 'HTTP connection time is normal');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Warning threshold (in milliseconds) for the connection time&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Critical threshold (in milliseconds) for the connection time&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.http_status_code"&gt;
      &lt;label&gt;Status code&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING if the server responses with 4xx status code or CRITICAL if it responds with 5xx status code&lt;/description&gt;
      &lt;check_type&gt;remote.http&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['code'] regex '4[0-9][0-9]') {
  return new AlarmStatus(CRITICAL, 'HTTP server responding with 4xx status');
}

if (metric['code'] regex '5[0-9][0-9]') {
  return new AlarmStatus(CRITICAL, 'HTTP server responding with 5xx status');
}

return new AlarmStatus(OK, 'HTTP server is functioning normally');
&lt;/criteria&gt;
      &lt;fields/&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.http_cert_expiration"&gt;
      &lt;label&gt;SSL certificate expiration time&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING or CRITICAL based on the certificate expiration date&lt;/description&gt;
      &lt;check_type&gt;remote.http&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['cert_end_in'] &amp;lt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, 'Cert expiring in less than ${critical_threshold} seconds.');
}

if (metric['cert_end_in'] &amp;lt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, 'Cert expiring in less than ${warning_threshold} seconds.');
}

return new AlarmStatus(OK, 'HTTP certificate doesn\'t expire soon.');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Warning threshold (in seconds) for the certificate expiration&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Critical threshold (in seconds) for the certificate expiration&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.dns_address_match"&gt;
      &lt;label&gt;DNS record address match&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the DNS record is not resolved to the provided address&lt;/description&gt;
      &lt;check_type&gt;remote.dns&lt;/check_type&gt;
      &lt;criteria&gt;# Match if the 127... address was in the resolution
# if it wasn't than default to CRITICAL

if (metric['answer'] regex '.*${address}.*') {
  return new AlarmStatus(OK, 'Resolved the correct address!');
}
return new AlarmStatus(CRITICAL);
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;address&lt;/name&gt;
          &lt;description&gt;Address to which the DNS record must resolve to&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.ssh_fingerprint_match"&gt;
      &lt;label&gt;SSH fingerprint match&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the SSH fingerprint doesn't match the provided one&lt;/description&gt;
      &lt;check_type&gt;remote.ssh&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['fingerprint'] != '${fingerprint}') {
  return new AlarmStatus(CRITICAL, 'SSH fingerprint didn\'t match the expected one ${fingerprint}');
}

return new AlarmStatus(OK, 'Got expected SSH fingerprint (${fingerprint})');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;fingerprint&lt;/name&gt;
          &lt;description&gt;Expected SSH fingerprint&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.ping_packet_loss"&gt;
      &lt;label&gt;Ping packet loss&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING if the packet loss is greater than 5% and CRITICAL if it's greater than 20%&lt;/description&gt;
      &lt;check_type&gt;remote.ping&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['available'] &amp;lt; 80) {
  return new AlarmStatus(CRITICAL, 'Packet loss is greater than 20%');
}

if (metric['available'] &amp;lt; 95) {
  return new AlarmStatus(WARNING, 'Packet loss is greater than 5%');
}

return new AlarmStatus(OK, 'Packet loss is normal');
&lt;/criteria&gt;
      &lt;fields/&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.tcp_connection_time"&gt;
      &lt;label&gt;Connection time&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING or CRITICAL based on the connection time&lt;/description&gt;
      &lt;check_type&gt;remote.tcp&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['duration'] &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, 'TCP Connection took more than ${critical_threshold} milliseconds.');
}

if (metric['duration'] &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, 'TCP Connection took more than ${warning_threshold} milliseconds.');
}

return new AlarmStatus(OK, 'TCP connection time is normal');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Warning threshold (in seconds) for the connection time&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Critical threshold (in seconds) for the connection time&lt;/description&gt;
          &lt;type&gt;integer&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.dns_spf_record_include_match"&gt;
      &lt;label&gt;SPF TXT record&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the SPF record doesn't contain an include clause with the provided domain.&lt;/description&gt;
      &lt;check_type&gt;remote.dns&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['answer'] regex 'v=spf1.* include:${domain} .*[~|-]all') {
  return new AlarmStatus(OK, 'SPF record with include clause for domain ${domain} exists');
}

return new AlarmStatus(CRITICAL, 'SPF record doesn\'t contain an include clause for domain ${domain}');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;domain&lt;/name&gt;
          &lt;description&gt;Domain to check for&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="remote.dns_dkim_public_key_match"&gt;
      &lt;label&gt;DKIM TXT record&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL if the DKIM record doesn't contain or match the provided public key.&lt;/description&gt;
      &lt;check_type&gt;remote.dns&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['answer'] regex '.*p=${public_key}$') {
  return new AlarmStatus(OK, 'DKIM record contains a provided public key');
}

return new AlarmStatus(CRITICAL, 'DKIM record doesn\'t contain a provided public key');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;public_key&lt;/name&gt;
          &lt;description&gt;Public key to check for. Note: Special characters must be escaped.&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.cpu_usage_average"&gt;
      &lt;label&gt;CPU Usage&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based upon average CPU usage&lt;/description&gt;
      &lt;check_type&gt;agent.cpu&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['usage_average'] &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, 'CPU usage is #{usage_average}%, above your critical threshold of ${critical_threshold}%');
}

if (metric['usage_average'] &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, 'CPU usage is #{usage_average}%, above your warning threshold of ${warning_threshold}%');
}

return new AlarmStatus(OK, 'CPU usage is #{usage_average}%, below your warning threshold of ${warning_threshold}%');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;CPU usage percentage above which CRITICAL is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;CPU usage percentage above which WARNING is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.memory_usage"&gt;
      &lt;label&gt;Memory usage&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based upon memory usage&lt;/description&gt;
      &lt;check_type&gt;agent.memory&lt;/check_type&gt;
      &lt;criteria&gt;if (percentage(metric['actual_used'], metric['total']) &amp;gt; 90) {
  return new AlarmStatus(CRITICAL, "Memory usage is above your critical threshold of 90%");
}

if (percentage(metric['actual_used'], metric['total']) &amp;gt; 80) {
  return new AlarmStatus(WARNING, "Memory usage is above your warning threshold of 80%");
}

return new AlarmStatus(OK, "Memory usage is below your warning threshold of 80%");
&lt;/criteria&gt;
      &lt;fields/&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.filesystem_usage"&gt;
      &lt;label&gt;Filesystem usage&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based upon filesystem usage&lt;/description&gt;
      &lt;check_type&gt;agent.filesystem&lt;/check_type&gt;
      &lt;criteria&gt;if (percentage(metric['used'], metric['total']) &amp;gt; 90) {
  return new AlarmStatus(CRITICAL, "Disk usage is above your critical threshold of 90%");
}

if (percentage(metric['used'], metric['total']) &amp;gt; 80) {
  return new AlarmStatus(WARNING, "Disk usage is above your warning threshold of 80%");
}

return new AlarmStatus(OK, "Disk usage is below your warning threshold of 80%");
&lt;/criteria&gt;
      &lt;fields/&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.high_load_average"&gt;
      &lt;label&gt;High Load Average&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based on load average&lt;/description&gt;
      &lt;check_type&gt;agent.load_average&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['5m'] &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, '5 minute load average is #{5m}, above your critical threshold of ${critical_threshold}');
}

if (metric['5m'] &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, '5 minute load average is #{5m}, above your warning threshold of ${warning_threshold}');
}

return new AlarmStatus(OK, '5 minute load average is #{5m}, below your warning threshold of ${warning_threshold}');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Load average above which CRITICAL is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Load average above which WARNING is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.network_transmit_rate"&gt;
      &lt;label&gt;Network transmit rate&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based upon network transmit rate&lt;/description&gt;
      &lt;check_type&gt;agent.network&lt;/check_type&gt;
      &lt;criteria&gt;if (rate(metric['tx_bytes']) &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, "Network transmit rate on ${interface} is above your critical threshold of ${critical_threshold}B/s");
}

if (rate(metric['tx_bytes']) &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, "Network transmit rate on ${interface} is above your warning threshold of ${warning_threshold}B/s");
}

return new AlarmStatus(OK, "Network transmit rate on ${interface} is below your warning threshold of ${warning_threshold}B/s");
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;interface&lt;/name&gt;
          &lt;description&gt;The network interface to alert on&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Network transmit rate, in bytes per second, above which CRITICAL is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Network transmit rate, in bytes per second, above which WARNING is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.network_receive_rate"&gt;
      &lt;label&gt;Network receive rate&lt;/label&gt;
      &lt;description&gt;Alarm which returns CRITICAL, WARNING or OK based upon network receive rate&lt;/description&gt;
      &lt;check_type&gt;agent.network&lt;/check_type&gt;
      &lt;criteria&gt;if (rate(metric['rx_bytes']) &amp;gt; ${critical_threshold}) {
  return new AlarmStatus(CRITICAL, "Network receive rate on ${interface} is above your critical threshold of ${critical_threshold}B/s");
}

if (rate(metric['rx_bytes']) &amp;gt; ${warning_threshold}) {
  return new AlarmStatus(WARNING, "Network receive rate on ${interface} is above your warning threshold of ${warning_threshold}B/s");
}

return new AlarmStatus(OK, "Network receive rate on ${interface} is below your warning threshold of ${warning_threshold}B/s");
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;interface&lt;/name&gt;
          &lt;description&gt;The network interface to alert on&lt;/description&gt;
          &lt;type&gt;string&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;critical_threshold&lt;/name&gt;
          &lt;description&gt;Network receive rate, in bytes per second, above which CRITICAL is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
        &lt;field&gt;
          &lt;name&gt;warning_threshold&lt;/name&gt;
          &lt;description&gt;Network receive rate, in bytes per second, above which WARNING is returned&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
    &lt;alarm_template id="agent.mysql_threads_connected_threshold"&gt;
      &lt;label&gt;Connected Threads&lt;/label&gt;
      &lt;description&gt;Alarm which returns WARNING if the threads connected is over the specified threshold and OK if it is under the specified threshold.&lt;/description&gt;
      &lt;check_type&gt;agent.mysql&lt;/check_type&gt;
      &lt;criteria&gt;if (metric['threads.connected'] &amp;gt; ${threads.connected.threshold}) {
	return new AlarmStatus(WARNING, 'Total number of threads connected are above your threshold of ${threads.connected.threshold}');
}
return new AlarmStatus(OK, 'Total number of threads connected are below your warning threshold of ${threads.connected.threshold}');
&lt;/criteria&gt;
      &lt;fields&gt;
        &lt;field&gt;
          &lt;name&gt;threads.connected.threshold&lt;/name&gt;
          &lt;description&gt;Warning threshold for the number of connections&lt;/description&gt;
          &lt;type&gt;whole number (may be zero padded)&lt;/type&gt;
        &lt;/field&gt;
      &lt;/fields&gt;
    &lt;/alarm_template&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;18&lt;/count&gt;
    &lt;limit/&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List alarm examples: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "remote.http_body_match_1",
            "label": "Body match - string found",
            "description": "Alarm which returns CRITICAL if the provided string is found in the body",
            "check_type": "remote.http",
            "criteria": "if (metric['body_match'] regex '${string}') {\n  return new AlarmStatus(CRITICAL, '${string} found, returning CRITICAL.');\n}\n",
            "fields": [
                {
                    "name": "string",
                    "description": "String to check for in the body",
                    "type": "string"
                }
            ]
        },
        {
            "id": "remote.http_body_match_missing_string",
            "label": "Body match - string not found",
            "description": "Alarm which returns CRITICAL if the provided string is not found in the body",
            "check_type": "remote.http",
            "criteria": "if (metric['body_match'] == '') {\n  return new AlarmStatus(CRITICAL, 'HTTP response did not contain the correct content.');\n}\n\nreturn new AlarmStatus(OK, 'HTTP response contains the correct content');\n",
            "fields": []
        },
        {
            "id": "remote.http_connection_time",
            "label": "Connection time",
            "description": "Alarm which returns WARNING or CRITICAL based on the connection time",
            "check_type": "remote.http",
            "criteria": "if (metric['duration'] &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, 'HTTP request took more than ${critical_threshold} milliseconds.');\n}\n\nif (metric['duration'] &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, 'HTTP request took more than ${warning_threshold} milliseconds.');\n}\n\nreturn new AlarmStatus(OK, 'HTTP connection time is normal');\n",
            "fields": [
                {
                    "name": "warning_threshold",
                    "description": "Warning threshold (in milliseconds) for the connection time",
                    "type": "integer"
                },
                {
                    "name": "critical_threshold",
                    "description": "Critical threshold (in milliseconds) for the connection time",
                    "type": "integer"
                }
            ]
        },
        {
            "id": "remote.http_status_code",
            "label": "Status code",
            "description": "Alarm which returns WARNING if the server responses with 4xx status code or CRITICAL if it responds with 5xx status code",
            "check_type": "remote.http",
            "criteria": "if (metric['code'] regex '4[0-9][0-9]') {\n  return new AlarmStatus(CRITICAL, 'HTTP server responding with 4xx status');\n}\n\nif (metric['code'] regex '5[0-9][0-9]') {\n  return new AlarmStatus(CRITICAL, 'HTTP server responding with 5xx status');\n}\n\nreturn new AlarmStatus(OK, 'HTTP server is functioning normally');\n",
            "fields": []
        },
        {
            "id": "remote.http_cert_expiration",
            "label": "SSL certificate expiration time",
            "description": "Alarm which returns WARNING or CRITICAL based on the certificate expiration date",
            "check_type": "remote.http",
            "criteria": "if (metric['cert_end_in'] &lt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, 'Cert expiring in less than ${critical_threshold} seconds.');\n}\n\nif (metric['cert_end_in'] &lt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, 'Cert expiring in less than ${warning_threshold} seconds.');\n}\n\nreturn new AlarmStatus(OK, 'HTTP certificate doesn\\'t expire soon.');\n",
            "fields": [
                {
                    "name": "warning_threshold",
                    "description": "Warning threshold (in seconds) for the certificate expiration",
                    "type": "integer"
                },
                {
                    "name": "critical_threshold",
                    "description": "Critical threshold (in seconds) for the certificate expiration",
                    "type": "integer"
                }
            ]
        },
        {
            "id": "remote.dns_address_match",
            "label": "DNS record address match",
            "description": "Alarm which returns CRITICAL if the DNS record is not resolved to the provided address",
            "check_type": "remote.dns",
            "criteria": "# Match if the 127... address was in the resolution\n# if it wasn't than default to CRITICAL\n\nif (metric['answer'] regex '.*${address}.*') {\n  return new AlarmStatus(OK, 'Resolved the correct address!');\n}\nreturn new AlarmStatus(CRITICAL);\n",
            "fields": [
                {
                    "name": "address",
                    "description": "Address to which the DNS record must resolve to",
                    "type": "string"
                }
            ]
        },
        {
            "id": "remote.ssh_fingerprint_match",
            "label": "SSH fingerprint match",
            "description": "Alarm which returns CRITICAL if the SSH fingerprint doesn't match the provided one",
            "check_type": "remote.ssh",
            "criteria": "if (metric['fingerprint'] != '${fingerprint}') {\n  return new AlarmStatus(CRITICAL, 'SSH fingerprint didn\\'t match the expected one ${fingerprint}');\n}\n\nreturn new AlarmStatus(OK, 'Got expected SSH fingerprint (${fingerprint})');\n",
            "fields": [
                {
                    "name": "fingerprint",
                    "description": "Expected SSH fingerprint",
                    "type": "string"
                }
            ]
        },
        {
            "id": "remote.ping_packet_loss",
            "label": "Ping packet loss",
            "description": "Alarm which returns WARNING if the packet loss is greater than 5% and CRITICAL if it's greater than 20%",
            "check_type": "remote.ping",
            "criteria": "if (metric['available'] &lt; 80) {\n  return new AlarmStatus(CRITICAL, 'Packet loss is greater than 20%');\n}\n\nif (metric['available'] &lt; 95) {\n  return new AlarmStatus(WARNING, 'Packet loss is greater than 5%');\n}\n\nreturn new AlarmStatus(OK, 'Packet loss is normal');\n",
            "fields": []
        },
        {
            "id": "remote.tcp_connection_time",
            "label": "Connection time",
            "description": "Alarm which returns WARNING or CRITICAL based on the connection time",
            "check_type": "remote.tcp",
            "criteria": "if (metric['duration'] &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, 'TCP Connection took more than ${critical_threshold} milliseconds.');\n}\n\nif (metric['duration'] &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, 'TCP Connection took more than ${warning_threshold} milliseconds.');\n}\n\nreturn new AlarmStatus(OK, 'TCP connection time is normal');\n",
            "fields": [
                {
                    "name": "warning_threshold",
                    "description": "Warning threshold (in seconds) for the connection time",
                    "type": "integer"
                },
                {
                    "name": "critical_threshold",
                    "description": "Critical threshold (in seconds) for the connection time",
                    "type": "integer"
                }
            ]
        },
        {
            "id": "remote.dns_spf_record_include_match",
            "label": "SPF TXT record",
            "description": "Alarm which returns CRITICAL if the SPF record doesn't contain an include clause with the provided domain.",
            "check_type": "remote.dns",
            "criteria": "if (metric['answer'] regex 'v=spf1.* include:${domain} .*[~|-]all') {\n  return new AlarmStatus(OK, 'SPF record with include clause for domain ${domain} exists');\n}\n\nreturn new AlarmStatus(CRITICAL, 'SPF record doesn\\'t contain an include clause for domain ${domain}');\n",
            "fields": [
                {
                    "name": "domain",
                    "description": "Domain to check for",
                    "type": "string"
                }
            ]
        },
        {
            "id": "remote.dns_dkim_public_key_match",
            "label": "DKIM TXT record",
            "description": "Alarm which returns CRITICAL if the DKIM record doesn't contain or match the provided public key.",
            "check_type": "remote.dns",
            "criteria": "if (metric['answer'] regex '.*p=${public_key}$') {\n  return new AlarmStatus(OK, 'DKIM record contains a provided public key');\n}\n\nreturn new AlarmStatus(CRITICAL, 'DKIM record doesn\\'t contain a provided public key');\n",
            "fields": [
                {
                    "name": "public_key",
                    "description": "Public key to check for. Note: Special characters must be escaped.",
                    "type": "string"
                }
            ]
        },
        {
            "id": "agent.cpu_usage_average",
            "label": "CPU Usage",
            "description": "Alarm which returns CRITICAL, WARNING or OK based upon average CPU usage",
            "check_type": "agent.cpu",
            "criteria": "if (metric['usage_average'] &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, 'CPU usage is #{usage_average}%, above your critical threshold of ${critical_threshold}%');\n}\n\nif (metric['usage_average'] &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, 'CPU usage is #{usage_average}%, above your warning threshold of ${warning_threshold}%');\n}\n\nreturn new AlarmStatus(OK, 'CPU usage is #{usage_average}%, below your warning threshold of ${warning_threshold}%');\n",
            "fields": [
                {
                    "name": "critical_threshold",
                    "description": "CPU usage percentage above which CRITICAL is returned",
                    "type": "whole number (may be zero padded)"
                },
                {
                    "name": "warning_threshold",
                    "description": "CPU usage percentage above which WARNING is returned",
                    "type": "whole number (may be zero padded)"
                }
            ]
        },
        {
            "id": "agent.memory_usage",
            "label": "Memory usage",
            "description": "Alarm which returns CRITICAL, WARNING or OK based upon memory usage",
            "check_type": "agent.memory",
            "criteria": "if (percentage(metric['actual_used'], metric['total']) &gt; 90) {\n  return new AlarmStatus(CRITICAL, \"Memory usage is above your critical threshold of 90%\");\n}\n\nif (percentage(metric['actual_used'], metric['total']) &gt; 80) {\n  return new AlarmStatus(WARNING, \"Memory usage is above your warning threshold of 80%\");\n}\n\nreturn new AlarmStatus(OK, \"Memory usage is below your warning threshold of 80%\");\n",
            "fields": []
        },
        {
            "id": "agent.filesystem_usage",
            "label": "Filesystem usage",
            "description": "Alarm which returns CRITICAL, WARNING or OK based upon filesystem usage",
            "check_type": "agent.filesystem",
            "criteria": "if (percentage(metric['used'], metric['total']) &gt; 90) {\n  return new AlarmStatus(CRITICAL, \"Disk usage is above your critical threshold of 90%\");\n}\n\nif (percentage(metric['used'], metric['total']) &gt; 80) {\n  return new AlarmStatus(WARNING, \"Disk usage is above your warning threshold of 80%\");\n}\n\nreturn new AlarmStatus(OK, \"Disk usage is below your warning threshold of 80%\");\n",
            "fields": []
        },
        {
            "id": "agent.high_load_average",
            "label": "High Load Average",
            "description": "Alarm which returns CRITICAL, WARNING or OK based on load average",
            "check_type": "agent.load_average",
            "criteria": "if (metric['5m'] &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, '5 minute load average is #{5m}, above your critical threshold of ${critical_threshold}');\n}\n\nif (metric['5m'] &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, '5 minute load average is #{5m}, above your warning threshold of ${warning_threshold}');\n}\n\nreturn new AlarmStatus(OK, '5 minute load average is #{5m}, below your warning threshold of ${warning_threshold}');\n",
            "fields": [
                {
                    "name": "critical_threshold",
                    "description": "Load average above which CRITICAL is returned",
                    "type": "whole number (may be zero padded)"
                },
                {
                    "name": "warning_threshold",
                    "description": "Load average above which WARNING is returned",
                    "type": "whole number (may be zero padded)"
                }
            ]
        },
        {
            "id": "agent.network_transmit_rate",
            "label": "Network transmit rate",
            "description": "Alarm which returns CRITICAL, WARNING or OK based upon network transmit rate",
            "check_type": "agent.network",
            "criteria": "if (rate(metric['tx_bytes']) &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, \"Network transmit rate on ${interface} is above your critical threshold of ${critical_threshold}B/s\");\n}\n\nif (rate(metric['tx_bytes']) &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, \"Network transmit rate on ${interface} is above your warning threshold of ${warning_threshold}B/s\");\n}\n\nreturn new AlarmStatus(OK, \"Network transmit rate on ${interface} is below your warning threshold of ${warning_threshold}B/s\");\n",
            "fields": [
                {
                    "name": "interface",
                    "description": "The network interface to alert on",
                    "type": "string"
                },
                {
                    "name": "critical_threshold",
                    "description": "Network transmit rate, in bytes per second, above which CRITICAL is returned",
                    "type": "whole number (may be zero padded)"
                },
                {
                    "name": "warning_threshold",
                    "description": "Network transmit rate, in bytes per second, above which WARNING is returned",
                    "type": "whole number (may be zero padded)"
                }
            ]
        },
        {
            "id": "agent.network_receive_rate",
            "label": "Network receive rate",
            "description": "Alarm which returns CRITICAL, WARNING or OK based upon network receive rate",
            "check_type": "agent.network",
            "criteria": "if (rate(metric['rx_bytes']) &gt; ${critical_threshold}) {\n  return new AlarmStatus(CRITICAL, \"Network receive rate on ${interface} is above your critical threshold of ${critical_threshold}B/s\");\n}\n\nif (rate(metric['rx_bytes']) &gt; ${warning_threshold}) {\n  return new AlarmStatus(WARNING, \"Network receive rate on ${interface} is above your warning threshold of ${warning_threshold}B/s\");\n}\n\nreturn new AlarmStatus(OK, \"Network receive rate on ${interface} is below your warning threshold of ${warning_threshold}B/s\");\n",
            "fields": [
                {
                    "name": "interface",
                    "description": "The network interface to alert on",
                    "type": "string"
                },
                {
                    "name": "critical_threshold",
                    "description": "Network receive rate, in bytes per second, above which CRITICAL is returned",
                    "type": "whole number (may be zero padded)"
                },
                {
                    "name": "warning_threshold",
                    "description": "Network receive rate, in bytes per second, above which WARNING is returned",
                    "type": "whole number (may be zero padded)"
                }
            ]
        },
        {
            "id": "agent.mysql_threads_connected_threshold",
            "label": "Connected Threads",
            "description": "Alarm which returns WARNING if the threads connected is over the specified threshold and OK if it is under the specified threshold.",
            "check_type": "agent.mysql",
            "criteria": "if (metric['threads.connected'] &gt; ${threads.connected.threshold}) {\n\treturn new AlarmStatus(WARNING, 'Total number of threads connected are above your threshold of ${threads.connected.threshold}');\n}\nreturn new AlarmStatus(OK, 'Total number of threads connected are below your warning threshold of ${threads.connected.threshold}');\n",
            "fields": [
                {
                    "name": "threads.connected.threshold",
                    "description": "Warning threshold for the number of connections",
                    "type": "whole number (may be zero padded)"
                }
            ]
        }
    ],
    "metadata": {
        "count": 18,
        "limit": null,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            

            
        
        <resource path="alarm_examples//{alarmExampleId}" id="alarmexampleId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="alarmId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the alarm example that you
                        want to lookup. Use the List alarm examples operation to find the <code>entityId</code> if you don't
                        know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAlarmExampleId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get alarm example by id">
               <para role="shortdesc"> Returns the alarm example for the specified <code>alarmExampleId</code>. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarm example by id response: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm_template id="remote.http_body_match_1"&gt;
  &lt;label&gt;Body match - string found&lt;/label&gt;
  &lt;description&gt;Alarm which returns CRITICAL if the provided string is found in the body&lt;/description&gt;
  &lt;check_type&gt;remote.http&lt;/check_type&gt;
  &lt;criteria&gt;if (metric['body_match'] regex '${string}') {
  return new AlarmStatus(CRITICAL, '${string} found, returning CRITICAL.');
}
&lt;/criteria&gt;
  &lt;fields&gt;
    &lt;field&gt;
      &lt;name&gt;string&lt;/name&gt;
      &lt;description&gt;String to check for in the body&lt;/description&gt;
      &lt;type&gt;string&lt;/type&gt;
    &lt;/field&gt;
  &lt;/fields&gt;
&lt;/alarm_template&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarm example by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "remote.http_body_match_1",
    "label": "Body match - string found",
    "description": "Alarm which returns CRITICAL if the provided string is found in the body",
    "check_type": "remote.http",
    "criteria": "if (metric['body_match'] regex '${string}') {\n  return new AlarmStatus(CRITICAL, '${string} found, returning CRITICAL.');\n}\n",
    "fields": [
        {
            "name": "string",
            "description": "String to check for in the body",
            "type": "string"
        }
    ]
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="POST" rax:id="evaluateAlarmExampleId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Evaluate alarm example">
               <para role="shortdesc"> Evaluates the template of a specified alarm example. </para>
               <para>The Evaluate alarm example operation evaluates the template of a single alarm example by posting the alarm
                to an endpoint. The operation uses the arbitrary key/value pairs as specified by the fields section of the
                List alarm example by id API operation.</para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarm example by id: JSON request">
                    <para> This example evaluates a remote.http body match against '12345'. <command>POST</command> to
                            https://monitoring.api.rackspacecloud.com/v1.0/<replaceable>tenantId</replaceable>/alarm_examples/remote.http_body_match_1 </para>
                    <xsdxt:code>
                        <programlisting language="xml">{
  "values": {
    "string": "12345"
  }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get alarm example by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
  "bound_criteria": "if (metric['body_match'] regex '12345') {\n  return new AlarmStatus(CRITICAL, '12345 found, returning CRITICAL.');\n}\n"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        

        <!-- Suppressions resources -->

        <resource path="suppressions" id="suppression">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="entityId" style="query" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the entity associated with the
                        Alarm. Use the List entities operation to find the <code>entityId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createSuppression">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create alarm">
               <para role="shortdesc"> Creates a new suppression. </para>
               <para>Specify the characteristics for the suppression using a valid set of parameters from the
                <link linkend="swiz-suppressions.xml">Suppressions attributes</link> table.</para>
               <para>The different lists (notification_plans, entities, checks, and alarms) represent the different levels at
                which suppressions can be defined. When creating a suppression, carefully consider which scopes you want to
                use in order to avoid accidentally suppressing an alarm you did not mean to. Here are several examples of how
                suppressions are scoped and targeted:</para>
               <note>
                  <para>When creating a suppression, the <emphasis role="bold">start_time</emphasis> can only be set to 0 or a
                    time in the future. There is some wiggle room allocated to account for the time it takes to receive and
                    process a request, meaning that if the <emphasis role="bold">start_time</emphasis> is less than 60
                    seconds in the past, it will be considered to be <emphasis>now</emphasis> instead of causing a validation
                    error. If you want the suppression to begin immediately, set the <emphasis role="bold">start_time</emphasis> to 0. </para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create suppressiom: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;suppression&gt;
  &lt;notification_plans&gt;
    &lt;notification_plan_id&gt;npfooBar&lt;/notification_plan_id&gt;
  &lt;/notification_plans&gt;
  &lt;checks&gt;
    &lt;check_id&gt;en123:ch123&lt;/check_id&gt;
  &lt;/checks&gt;
  &lt;start_time&gt;1378492433027&lt;/start_time&gt;
  &lt;end_time&gt;1378492433027&lt;/end_time&gt;
&lt;/suppression&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create a suppression: JSON request">
                    <xsdxt:code>
                        <programlisting language="xml">{
    "notification_plans": ["npfooBar"],
    "checks": ["en123:ch123"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted">
                  <para>'Location' header contains a link to the newly created alarm.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create an alarm: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;alarm&gt;
  &lt;check_id&gt;chAAAA&lt;/check_id&gt;
  &lt;criteria&gt;if (metric["duration"] &amp;gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);&lt;/criteria&gt;
  &lt;notification_plan_id&gt;npAAAAA&lt;/notification_plan_id&gt;
&lt;/alarm&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id" style="header" type="URI">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Returns a link to the newly created check.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create an alarm: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "check_id": "chAAAA",
    "criteria": "if (metric[\"duration\"] &gt;= 2) { return new AlarmStatus(OK); } return new AlarmStatus(CRITICAL);",
    "notification_plan_id": "npAAAAA"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress notifications for alarms on ch123 on en123 that use npfooBar JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "notification_plans": ["npfooBar"],
    "checks": ["en123:ch123"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress notifications for en123 for all notification plans JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "entities": ["en123"],
    "checks": ["en123:ch123"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress only ch123 on en123 for all notification plans JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "checks": ["en123:ch123"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress all notifications for enMonkey and notifications for ch123 on en123 for all notification plans JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "entities": ["enMonkey"],
    "checks": ["en123:ch123"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress all notifications for npTechnical JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "notification_plans": ["npTechnical"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Suppress al123 on en123 and alBaz on enMonkey for the npTechnical notification plan JSON example">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "notification_plans": ["npTechnical"],
    "alarms": ["en123:al123", "enMonkey:alBaz"],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>

            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listSuppressions">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List suppressions">
               <para role="shortdesc"> Lists the suppressions. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Suppressions: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;suppression id="spAAAAA"&gt;
      &lt;notification_plans&gt;
        &lt;notification_plan_id&gt;npfooBar&lt;/notification_plan_id&gt;
      &lt;/notification_plans&gt;
      &lt;checks&gt;
        &lt;check_id&gt;en123:ch123&lt;/check_id&gt;
      &lt;/checks&gt;
      &lt;start_time&gt;1378492433027&lt;/start_time&gt;
      &lt;end_time&gt;1378492433027&lt;/end_time&gt;
    &lt;/suppression&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List Suppressions: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "spAAAAA",
            "notification_plans": ['npfooBar'],
            "entities": [],
            "checks": ['en123:ch123'],
            "alarms": [],
            "start_time": 1378492433027,
            "end_time": 1378492433027
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        

        <resource path="suppressions/{suppressionId}" id="suppressionId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getSuppressionId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Gets a suppression by id">
               <para role="shortdesc"> Retrieves the current state of the specified suppression. </para>
               <para>This operation returns the suppression specified by the <code>suppressionId</code>.</para>
            </wadl:doc>

            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get a suppression: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;suppression id="spAAAAA"&gt;
  &lt;notification_plans&gt;
    &lt;notification_plan_id&gt;npfooBar&lt;/notification_plan_id&gt;
  &lt;/notification_plans&gt;
  &lt;checks&gt;
    &lt;check_id&gt;en123:ch123&lt;/check_id&gt;
  &lt;/checks&gt;
  &lt;start_time&gt;1378492433027&lt;/start_time&gt;
  &lt;end_time&gt;1378492433027&lt;/end_time&gt;
&lt;/suppression&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get a suppression: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "spAAAAA",
    "notification_plans": ['npfooBar'],
    "entities": [],
    "checks": ['en123:ch123'],
    "alarms": [],
    "start_time": 1378492433027,
    "end_time": 1378492433027
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateSuppression">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update suppression">
               <para role="shortdesc"> Updates the suppression specified by the <code>suppressionId</code>. </para>
               <para>You can complete partial updates for a suppression. When you submit the request only include values for the
                attributes you want to update. The values on omitted parameters are not updated. Note that updating a list
                completely replaces the previous list.</para>
               <note>
                  <para>Keep the following points in mind when updating a suppression:<itemizedlist>
                        <listitem>
                            <para>Until the <emphasis role="bold">start_time</emphasis>, you can modify any field on the
                                suppression; however, after that time has passed and the suppression has begun only the
                                    <emphasis role="bold">end_time</emphasis> can be updated.</para>
                        </listitem>
                        <listitem>
                            <para>The <emphasis role="bold">end_time</emphasis> can only be set to 0 or a time in the future.
                                As with the <emphasis role="bold">start_time</emphasis>, there is an allowance of 60 seconds
                                made to account for the time it takes to receive and process a request. This means that if
                                the provided <emphasis role="bold">end_time</emphasis> is less than 60 seconds in the past,
                                it will be considered to be <emphasis>now</emphasis> instead of causing a validation error.
                                If you want the suppression to end immediately, set the <emphasis role="bold">end_time</emphasis> to 0.</para>
                        </listitem>
                    </itemizedlist>
                  </para>
               </note>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update suppression: XML request">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;suppression&gt;
  &lt;entities&gt;
    &lt;entity_id&gt;en234&lt;/entity_id&gt;
  &lt;/entities&gt;
  &lt;end_time&gt;1378495433027&lt;/end_time&gt;
&lt;/suppression&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update suppression JSON request">
                    <xsdxt:code>
                        <programlisting language="xml">{
  "entities": ["en234"],
  "end_time": 1378495433027
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>Request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteSuppression">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete suppression">
               <para role="shortdesc"> Delete a suppression from your account. </para>
               <para>You can delete a suppression at any point, even while it is active. If an active suppression is deleted, it
                ends immediately. </para>
            </wadl:doc>
            <response status="204"/>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            
        

        <!-- Suppression log -->
        <resource path="suppressions_logs" id="suppressionLog">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getSuppressionLog">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get suppression log">
               <para role="shortdesc"> Lists suppression logs for this account. </para>
               <note>
                  <para>When a suppression log is written, the corresponding alarm changelog will be updated. Though no
                    notification will be sent, the notification history will be updated to include a message saying that the
                    notification was suppressed. </para>
               </note>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List suppression log list: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;suppression_log id="5a628ca0-8ca4-11e3-811c-fb1e1c039d36"&gt;
      &lt;entity_id&gt;enXXXXX&lt;/entity_id&gt;
      &lt;alarm_id&gt;alXXXXX&lt;/alarm_id&gt;
      &lt;check_id&gt;chXXXXX&lt;/check_id&gt;
      &lt;notification_plan_id&gt;npXXXXX&lt;/notification_plan_id&gt;
      &lt;suppressions&gt;
	&lt;suppression_id&gt;spXXXXX&lt;/suppression_id&gt;
      &lt;/suppressions&gt;
      &lt;state&gt;OK&lt;/state&gt;
      &lt;timestamp&gt;1391412327018&lt;/timestamp&gt;
      &lt;transaction_id&gt;.rh-Skiy.h-ord1-maas-stage-api1.r-zzTqFcaG.c-1553.ts-1391108878406.v-65f8f6c&lt;/transaction_id&gt;
    &lt;/suppression_log&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit/&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List suppression log list: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": '5a628ca0-8ca4-11e3-811c-fb1e1c039d36',
            "entity_id": 'enXXXXX',
            "alarm_id": 'alXXXXX',
            "check_id": 'chXXXXX',
            "notification_plan_id": 'npXXXXX',
            "suppressions": [
                "spXXXXX"
            ],
            "state": 'OK',
            "timestamp": '1391412327018',
            "transaction_id": '.rh-Skiy.h-ord1-maas-stage-api1.r-zzTqFcaG.c-1553.ts-1391108878406.v-65f8f6c'
        }
    ],
    "metadata": {
        "count": 1,
        "limit": null,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        

        <resource path="agents" id="agents">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgents">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="List agents">
               <para role="shortdesc"> Lists all agents that have connected in the last 30 days. </para>
               <para>This operation lists the Agent IDs that have been connected to your account and when they were last
                connected. If an agent ID does not connect to the account for 30 days, the agent ID is automatically deleted
                from this list. Time is shown in Coordinated Universal Time (UTC) as the number of milliseconds that have
                elapsed since January 1, 1970.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List agents: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;agent id="00-agent.example.com"&gt;
      &lt;last_connected&gt;1334685407&lt;/last_connected&gt;
    &lt;/agent&gt;
    &lt;agent id="i-need-a-new-agent.example.com"&gt;
      &lt;last_connected&gt;1334685407&lt;/last_connected&gt;
    &lt;/agent&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;2&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="List agents: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "00-agent.example.com",
            "last_connected": 1334685407
        },
        {
            "id": "i-need-a-new-agent.example.com",
            "last_connected": 1334685407
        }
    ],
    "metadata": {
        "count": 2,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        
        <resource path="agents/{agentId}" id="agentId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agentId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgentId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get agent by id">
               <para role="shortdesc"> Returns information about the agent specified by <code>agentId</code>. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get agent response: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent id="00-agent.example.com"&gt;
  &lt;last_connected&gt;1334685407&lt;/last_connected&gt;
&lt;/agent&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Get agent JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "00-agent.example.com",
    "last_connected": 1334685407
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            

        
        <resource path="agents/{agentId}/connections" id="agentConnections">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agentId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <param name="connId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the connection that you want
                        to lookup. Use the List connections operation to find the <code>connId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgentConnections">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List agent connections">
               <para role="shortdesc"> Lists the connections for the specified agent. </para>
               <para>This operation lists the connections that are currently active for an agent. Agents are connected to three
                monitoring zones when operating normally.</para>
            </wadl:doc>

            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent connections: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;agent_connection id="cntl4qsIbA"&gt;
      &lt;guid&gt;0b49b96d-24c9-45ca-c585-4040707f4880&lt;/guid&gt;
      &lt;agent_id&gt;00-agent.example.com&lt;/agent_id&gt;
      &lt;process_version&gt;0.1.2.16&lt;/process_version&gt;
      &lt;bundle_version&gt;0.1.2.16&lt;/bundle_version&gt;
      &lt;agent_ip&gt;10.1.2.3&lt;/agent_ip&gt;
    &lt;/agent_connection&gt;
    &lt;agent_connection id="cnyHsfATLd"&gt;
      &lt;guid&gt;0b49b96d-24c9-45ca-c585-4040707f4880&lt;/guid&gt;
      &lt;agent_id&gt;00-agent.example.com&lt;/agent_id&gt;
      &lt;process_version&gt;0.1.2.16&lt;/process_version&gt;
      &lt;bundle_version&gt;0.1.2.16&lt;/bundle_version&gt;
      &lt;agent_ip&gt;10.1.2.3&lt;/agent_ip&gt;
    &lt;/agent_connection&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;2&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="id" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Agent connection ID.</para>
                    </wadl:doc>
                  </param>
                  <param name="guid" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>When an agent starts, the agent
                            generates a session GUID to uniquely identify itself to the service. Note that the generated GUID
                            is simply a string and does not always conform to the UUID standard format.</para>
                    </wadl:doc>
                  </param>
                  <param name="agent_id" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The ID of the agent.</para>
                    </wadl:doc>
                  </param>
                  <param name="datacenter" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The datacenter of the agent
                            connection end point.</para>
                    </wadl:doc>
                  </param>
                  <param name="process_version" style="plain" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Process version of the agent.</para>
                    </wadl:doc>
                  </param>
                  <param name="bundle_version" style="plain">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Bundle version of the agent.</para>
                    </wadl:doc>
                  </param>
                  <param name="agent_ip" style="plain">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The remote IP of the agent.</para>
                    </wadl:doc>
                  </param>
                  <param name="agent_port" style="plain">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The remote port number of the
                            agent.</para>
                    </wadl:doc>
                  </param>
                  <param name="metadata" style="plain" type="string" required="false">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Lists the collection of metadata associated with the agent, if any. Metadata is formatted as
                            key/value pairs.</para>
                    </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent connections: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "id": "cntl4qsIbA",
            "guid": "0b49b96d-24c9-45ca-c585-4040707f4880",
            "agent_id": "00-agent.example.com",
            "process_version": "0.1.2.16",
            "bundle_version": "0.1.2.16",
            "agent_ip": "10.1.2.3"
        },
        {
            "id": "cnyHsfATLd",
            "guid": "0b49b96d-24c9-45ca-c585-4040707f4880",
            "agent_id": "00-agent.example.com",
            "process_version": "0.1.2.16",
            "bundle_version": "0.1.2.16",
            "agent_ip": "10.1.2.3"
        }
    ],
    "metadata": {
        "count": 2,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        
        <resource path="agents/{agentId}/connections/{connId}" id="agentConectionId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agentId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <param name="connId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the connection that you want
                        to lookup. Use the List connections operation to find the <code>connId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgentConnection">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List agent connection by id">
               <para role="shortdesc"> Get information about a specific connection for the specified agent. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
        

        <!-- Agent target resource -->

        <resource path="entities/{entityId}/agent/check_types/{agentCheckType}/targets"
                id="agentTarget">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgentTarget">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List agent check targets">
               <para role="shortdesc"> Lists agent check targets for this account. </para>
               <para>Enumerate the devices allowed for the specified agent check type on the server where the agent is
                installed. See a list of agent check types in <xref linkend="appendix-check-types-agent"/>.</para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent check types: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_check_target&gt;
  &lt;targets&gt;
    &lt;targets&gt;/&lt;/targets&gt;
    &lt;targets&gt;/proc&lt;/targets&gt;
    &lt;targets&gt;/sys&lt;/targets&gt;
    &lt;targets&gt;/sys/fs/fuse/connections&lt;/targets&gt;
    &lt;targets&gt;/sys/kernel/debug&lt;/targets&gt;
    &lt;targets&gt;/sys/kernel/security&lt;/targets&gt;
    &lt;targets&gt;/dev&lt;/targets&gt;
    &lt;targets&gt;/dev/pts&lt;/targets&gt;
    &lt;targets&gt;/dev/shm&lt;/targets&gt;
    &lt;targets&gt;/var/run&lt;/targets&gt;
    &lt;targets&gt;/var/lock&lt;/targets&gt;
    &lt;targets&gt;/lib/init/rw&lt;/targets&gt;
    &lt;targets&gt;/var/lib/ureadahead/debugfs&lt;/targets&gt;
    &lt;targets&gt;/boot&lt;/targets&gt;
    &lt;targets&gt;/mnt/hgfs&lt;/targets&gt;
    &lt;targets&gt;/var/run/vmblock-fuse&lt;/targets&gt;
  &lt;/targets&gt;
&lt;/agent_check_target&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent check types: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "targets": [
        "/",
        "/proc",
        "/sys",
        "/sys/fs/fuse/connections",
        "/sys/kernel/debug",
        "/sys/kernel/security",
        "/dev",
        "/dev/pts",
        "/dev/shm",
        "/var/run",
        "/var/lock",
        "/lib/init/rw",
        "/var/lib/ureadahead/debugfs",
        "/boot",
        "/mnt/hgfs",
        "/var/run/vmblock-fuse"
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
        

        <!-- Agent token resources  -->

        <resource path="agent_tokens" id="agentToken">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <method name="POST" rax:id="createAgentToken">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create token">
               <para role="shortdesc"> Creates an agent token. </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Create token request: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_token&gt;
  &lt;label&gt;Some Label&lt;/label&gt;
&lt;/agent_token&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="label" style="plain" type="string" required="true">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>A friendly name for the token. Value can be between 1 and 255 characters long.</para>
                    </wadl:doc>
                  </param>

               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create token: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "Some Label"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </request>
            <response status="201">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Accepted">
                  <para>'Location' header contains a link to the newly created check.</para>
               </wadl:doc>
            </response>

            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="GET" rax:id="listAgentTokens">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List tokens for agent tokens">
               <para role="shortdesc"> List the agent tokens. </para>
               <para>This operation can be paginated. For information, see
                <link xlink:href="http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/api-paginated-collections.html">Rackspace Cloud Monitoring Developer Guide Paginated collections</link>
               </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent tokens: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;container&gt;
  &lt;values&gt;
    &lt;agent_token&gt;
      &lt;token&gt;4c5e28f0-0b3f-11e1-860d-c55c4705a286:1234&lt;/token&gt;
      &lt;label&gt;aLabel&lt;/label&gt;
    &lt;/agent_token&gt;
  &lt;/values&gt;
  &lt;metadata&gt;
    &lt;count&gt;1&lt;/count&gt;
    &lt;limit&gt;50&lt;/limit&gt;
    &lt;marker/&gt;
    &lt;next_marker/&gt;
    &lt;next_href/&gt;
  &lt;/metadata&gt;
&lt;/container&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="List agent tokens: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "values": [
        {
            "token": "4c5e28f0-0b3f-11e1-860d-c55c4705a286:1234",
            "label": "aLabel"
        }
    ],
    "metadata": {
        "count": 1,
        "limit": 50,
        "marker": null,
        "next_marker": null,
        "next_href": null
    }
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
        
        <resource path="agent_tokens/{tokenId}" id="agentTokenId">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="query" required="false">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent token that you want
                        to lookup. Use the List tokens operation to find the <code>tokenId</code> if you don't know
                        it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="getAgentTokenId">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get agent token by id">
               <para role="shortdesc"> Get information for the specified agent token. </para>
            </wadl:doc>

            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get agent token by id: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_token id="someId"&gt;
  &lt;token&gt;4c5e28f0-0b3f-11e1-860d-c55c4705a286:1234&lt;/token&gt;
  &lt;label&gt;aLabel&lt;/label&gt;
&lt;/agent_token&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Get agent token by id: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "someId",
    "token": "4c5e28f0-0b3f-11e1-860d-c55c4705a286:1234",
    "label": "aLabel"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="PUT" rax:id="updateAgentToken">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update agent token">
               <para role="shortdesc"> Update a token with the specified <code>tokenId</code> (label). </para>
            </wadl:doc>
            <response status="204">
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update agent token: XML response">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_token&gt;
  &lt;label&gt;aNewLabel&lt;/label&gt;
&lt;/agent_token&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                            title="Update agent token: JSON response">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "label": "aNewLabel"
}</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
         <method name="DELETE" rax:id="deleteAgentToken">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete agent token">
               <para role="shortdesc"> Delete the agent token with the specified <code>tokenId</code> (label). </para>
            </wadl:doc>
            <response status="204"/>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
            
            
            
            
            

        

        <!-- Agent host info resources -->

        <resource path="agents/{agentId}/host_info/cpus" id="AgentHostInfoCPUs">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoCPUs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get CPU information">
               <para role="shortdesc"> Get information about the host CPUs. </para>
               <!--<xi:include href="../.."-->
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>


               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354038806121&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;cpu&gt;
      &lt;name&gt;cpu.0&lt;/name&gt;
      &lt;vendor&gt;Intel&lt;/vendor&gt;
      &lt;model&gt;Core(TM) i7-2760QM CPU @ 2.40GHz&lt;/model&gt;
      &lt;mhz&gt;2394&lt;/mhz&gt;
      &lt;idle&gt;32964780&lt;/idle&gt;
      &lt;irq&gt;2320&lt;/irq&gt;
      &lt;soft_irq&gt;3450&lt;/soft_irq&gt;
      &lt;nice&gt;10&lt;/nice&gt;
      &lt;sys&gt;248460&lt;/sys&gt;
      &lt;user&gt;236100&lt;/user&gt;
      &lt;wait&gt;12190&lt;/wait&gt;
      &lt;total&gt;33467310&lt;/total&gt;
      &lt;total_cores&gt;2&lt;/total_cores&gt;
      &lt;total_sockets&gt;2&lt;/total_sockets&gt;
    &lt;/cpu&gt;
    &lt;cpu&gt;
      &lt;name&gt;cpu.1&lt;/name&gt;
      &lt;vendor&gt;Intel&lt;/vendor&gt;
      &lt;model&gt;Core(TM) i7-2760QM CPU @ 2.40GHz&lt;/model&gt;
      &lt;mhz&gt;2394&lt;/mhz&gt;
      &lt;idle&gt;33014520&lt;/idle&gt;
      &lt;soft_irq&gt;10940&lt;/soft_irq&gt;
      &lt;sys&gt;240080&lt;/sys&gt;
      &lt;user&gt;237290&lt;/user&gt;
      &lt;wait&gt;12030&lt;/wait&gt;
      &lt;total&gt;33514860&lt;/total&gt;
      &lt;total_cores&gt;2&lt;/total_cores&gt;
      &lt;total_sockets&gt;2&lt;/total_sockets&gt;
    &lt;/cpu&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stolen" style="plain" required="false" path="$.stolen">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The amount of time a hypervisor is scheduling a different virtual
                        machine.</para>
                     </wadl:doc>
                  </param>
                  <param name="cores_per_socket"
                         style="plain"
                         required="false"
                         path="$.cores_per_socket">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Number of cores on the CPU socket (to be deleted).</para>
                     </wadl:doc>
                  </param>
                  <param name="cache_size"
                         style="plain"
                         required="false"
                         path="$.cache_size">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Cache size of this CPU core (to be deleted).</para>
                     </wadl:doc>
                  </param>
                  <param name="user" style="plain" required="false" path="$.user">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent in user space.</para>
                     </wadl:doc>
                  </param>
                  <param name="mhz" style="plain" required="false" path="$.mhz">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU clock speed.</para>
                     </wadl:doc>
                  </param>
                  <param name="irq" style="plain" required="false" path="$.irq">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent servicing/handling hardware interrupts.</para>
                     </wadl:doc>
                  </param>
                  <param name="idle" style="plain" required="false" path="$.idle">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent idle.</para>
                     </wadl:doc>
                  </param>
                  <param name="model" style="plain" required="false" path="$.model">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU Vendor model string.</para>
                     </wadl:doc>
                  </param>
                  <param name="name" style="plain" required="false" path="$.name">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU name. For example, cpu.0.</para>
                     </wadl:doc>
                  </param>
                  <param name="nice" style="plain" path="$.nice">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent on low-priority processes.</para>
                     </wadl:doc>
                  </param>
                  <param name="soft_irq"
                         style="plain"
                         required="false"
                         path="$.soft_irq">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent servicing/handling software interrupts.</para>
                     </wadl:doc>
                  </param>
                  <param name="sys" style="plain" path="$.sys">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU time spent in kernel space.</para>
                     </wadl:doc>
                  </param>
                  <param name="total" style="plain" required="false" path="$.total">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Total CPU time.</para>
                     </wadl:doc>
                  </param>
                  <param name="total_cores"
                         style="plain"
                         required="false"
                         path="$.total_cores">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Total cores on all sockets.</para>
                     </wadl:doc>
                  </param>
                  <param name="total_sockets"
                         style="plain"
                         required="false"
                         path="$.total_sockets">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>Total number of sockets.</para>
                     </wadl:doc>
                  </param>
                  <param name="vendor" style="plain" required="false" path="$.vendor">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>The container for import input parameters.</para>
                     </wadl:doc>
                  </param>
                  <param name="wait" style="plain" required="false" path="$.wait">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>CPU Vendor. For example, AMD or Intel.</para>
                     </wadl:doc>
                  </param>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354038712351,
    "info": [
        {
            "name": "cpu.0",
            "vendor": "Intel",
            "model": "Core(TM) i7-2760QM CPU @ 2.40GHz",
            "mhz": 2394,
            "idle": 32872370,
            "irq": 2320,
            "soft_irq": 3390,
            "nice": 10,
            "sys": 247780,
            "user": 235470,
            "wait": 12180,
            "total": 33373520,
            "total_cores": 2,
            "total_sockets": 2
        },
        {
            "name": "cpu.1",
            "vendor": "Intel",
            "model": "Core(TM) i7-2760QM CPU @ 2.40GHz",
            "mhz": 2394,
            "idle": 32921490,
            "soft_irq": 10910,
            "sys": 239540,
            "user": 236780,
            "wait": 12020,
            "total": 33420740,
            "total_cores": 2,
            "total_sockets": 2
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/disks" id="AgentHostInfoDisks">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoDisks">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get disk information">
               <para role="shortdesc"> Get information about the disks available on the host. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354039271000&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;disk&gt;
      &lt;read_bytes&gt;213685248&lt;/read_bytes&gt;
      &lt;reads&gt;23758&lt;/reads&gt;
      &lt;rtime&gt;18160&lt;/rtime&gt;
      &lt;write_bytes&gt;8401027072&lt;/write_bytes&gt;
      &lt;writes&gt;2056620&lt;/writes&gt;
      &lt;wtime&gt;3342110&lt;/wtime&gt;
      &lt;time&gt;458730&lt;/time&gt;
      &lt;name&gt;/&lt;/name&gt;
    &lt;/disk&gt;
    &lt;disk&gt;
      &lt;read_bytes&gt;22974464&lt;/read_bytes&gt;
      &lt;reads&gt;899&lt;/reads&gt;
      &lt;rtime&gt;440&lt;/rtime&gt;
      &lt;write_bytes&gt;15360&lt;/write_bytes&gt;
      &lt;writes&gt;8&lt;/writes&gt;
      &lt;time&gt;400&lt;/time&gt;
      &lt;name&gt;/boot&lt;/name&gt;
    &lt;/disk&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table describes the response body parameters.</para>
                    <informaltable rules="all" width="100%" version="5.0">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>wtime</command>
                              </td>
                                <td>Total number of milliseconds spent reading (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>read_bytes</command>
                              </td>
                                <td>Total number of bytes read from disk (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>queue</command>
                              </td>
                                <td>(to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>name</command>
                              </td>
                                <td>The device name (TODO: Fix this to be the block device name).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>reads</command>
                              </td>
                                <td>Total number of completed read requests.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rtime</command>
                              </td>
                                <td>Total number of milliseconds spent reading (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>service_time</command>
                              </td>
                                <td>(to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>snaptime</command>
                              </td>
                                <td>(to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time</command>
                              </td>
                                <td>Total time spend doing I/O (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>write_bytes</command>
                              </td>
                                <td>Total number of bytes written to disk (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>writes</command>
                              </td>
                                <td>Total number of completed write requests.</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354039239737,
    "info": [
        {
            "read_bytes": 213685248,
            "reads": 23758,
            "rtime": 18160,
            "write_bytes": 8399753216,
            "writes": 2056309,
            "wtime": 3341340,
            "time": 458360,
            "name": "/"
        },
        {
            "read_bytes": 22974464,
            "reads": 899,
            "rtime": 440,
            "write_bytes": 15360,
            "writes": 8,
            "time": 400,
            "name": "/boot"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <!-- Common Faults --> 
     
            <response xml:lang="EN">
               <representation mediaType="application/xml" element="Fault"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad request">
                  <para>The system received an invalid value in a request.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="badRequest"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Unauthorized">
                  <para>The system received a request from a user that is not authenticated.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="unauthorizedError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="403">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Forbidden error">
                  <para>The system received a request that the user is not authorized to make.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="forbiddenError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="413">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Request too large">
                  <para>The response body is too large.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="requestTooLargeError"/>
               <representation mediaType="application/json"/>
            </response>
            <response status="503">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="systemFailureError">
                  <para>The system is experiencing heavy load or another system failure.</para>
               </wadl:doc>
               <representation mediaType="application/xml" element="identity:systemFailureError"/>
               <representation mediaType="application/json"/>
            </response>
            </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/filesystems"
                id="AgentHostInfoFileSystems">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoProcesses">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get host process information">
               <para role="shortdesc"> Get information about the host processes. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354040856776&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;process&gt;
      &lt;pid&gt;1&lt;/pid&gt;
      &lt;exe_name&gt;/sbin/init&lt;/exe_name&gt;
      &lt;exe_cwd&gt;/&lt;/exe_cwd&gt;
      &lt;exe_root&gt;/&lt;/exe_root&gt;
      &lt;time_total&gt;2080&lt;/time_total&gt;
      &lt;time_sys&gt;2010&lt;/time_sys&gt;
      &lt;time_user&gt;70&lt;/time_user&gt;
      &lt;time_start_time&gt;1354005304000&lt;/time_start_time&gt;
      &lt;state_name&gt;init&lt;/state_name&gt;
      &lt;state_priority&gt;20&lt;/state_priority&gt;
      &lt;state_threads&gt;1&lt;/state_threads&gt;
      &lt;memory_size&gt;24387584&lt;/memory_size&gt;
      &lt;memory_resident&gt;2088960&lt;/memory_resident&gt;
      &lt;memory_share&gt;1335296&lt;/memory_share&gt;
      &lt;memory_major_faults&gt;24&lt;/memory_major_faults&gt;
      &lt;memory_minor_faults&gt;7810&lt;/memory_minor_faults&gt;
      &lt;memory_page_faults&gt;7834&lt;/memory_page_faults&gt;
    &lt;/process&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table shows the response body parameters.</para>
                    <informaltable rules="all" width="100%">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>state_nice</command>
                              </td>
                                <td>Nice value set on the process. If nice is not set, the value will be null (higher numbers
                                    are lower priority).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>cred_group</command>
                              </td>
                                <td>Group of user who owns the process</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_threads</command>
                              </td>
                                <td>Number of threads the process owns.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_cwd</command>
                              </td>
                                <td>Current working directory of the process.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>cred_user</command>
                              </td>
                                <td>User who owns the process</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_resident</command>
                              </td>
                                <td>Total resident memory of the process (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>pid</command>
                              </td>
                                <td>Process ID.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_page_faults</command>
                              </td>
                                <td>Total number of faults.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_minor_faults</command>
                              </td>
                                <td>Total number of major page faults. Major faults generally involve disk latency.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_major_faults</command>
                              </td>
                                <td>Total number of minor page faults. Minor faults generally do not involve disk
                                    latency.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_share</command>
                              </td>
                                <td>Total resident memory that is shared with other processes (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_name</command>
                              </td>
                                <td>Path to the executable.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_root</command>
                              </td>
                                <td>Root namespace of the process.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_size</command>
                              </td>
                                <td>Total address space of the process (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_name</command>
                              </td>
                                <td>Name of the executable.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_ppid</command>
                              </td>
                                <td>Parent process ID.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_priority</command>
                              </td>
                                <td>Priority of the process (higher numbers are lower priority).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_processor</command>
                              </td>
                                <td>CPU ID of the processor running the process (to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_tty</command>
                              </td>
                                <td>(to be deleted)</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_start_time</command>
                              </td>
                                <td>Start time of the process (Epoch timestamp in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_sys</command>
                              </td>
                                <td>Total time executing system calls (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_total</command>
                              </td>
                                <td>Total time executing (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_user</command>
                              </td>
                                <td>Total time executing in user mode (in milliseconds).</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354040508264,
    "info": [
        {
            "pid": 1,
            "exe_name": "/sbin/init",
            "exe_cwd": "/",
            "exe_root": "/",
            "time_total": 2080,
            "time_sys": 2010,
            "time_user": 70,
            "time_start_time": 1354005304000,
            "state_name": "init",
            "state_priority": 20,
            "state_threads": 1,
            "memory_size": 24387584,
            "memory_resident": 2088960,
            "memory_share": 1335296,
            "memory_major_faults": 24,
            "memory_minor_faults": 7810,
            "memory_page_faults": 7834
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/memory" id="AgentHostInfoMemory">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoMemory">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get host memory information">
               <para role="shortdesc"> Get information about the host memory use. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354039061635&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;agent_host_info_memory&gt;
      &lt;actual_free&gt;3052249088&lt;/actual_free&gt;
      &lt;actual_used&gt;1516371968&lt;/actual_used&gt;
      &lt;free&gt;2660339712&lt;/free&gt;
      &lt;ram&gt;4360&lt;/ram&gt;
      &lt;swap_free&gt;926932992&lt;/swap_free&gt;
      &lt;swap_page_in&gt;926932992&lt;/swap_page_in&gt;
      &lt;swap_page_out&gt;926932992&lt;/swap_page_out&gt;
      &lt;swap_total&gt;926932992&lt;/swap_total&gt;
      &lt;swap_used&gt;926932992&lt;/swap_used&gt;
      &lt;total&gt;4568621056&lt;/total&gt;
      &lt;used&gt;1908281344&lt;/used&gt;
    &lt;/agent_host_info_memory&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>This table describes the response body parameters.</para>
                    <informaltable rules="all" width="100%">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>ram</command>
                              </td>
                                <td>Megabytes of RAM available to the system (in megabytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>actual_free</command>
                              </td>
                                <td>Free memory. Counts purgeable OS caches as free (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>actual_used</command>
                              </td>
                                <td>Used memory. Counts purgeable OS caches as free (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>free</command>
                              </td>
                                <td>Free memory which counts purgeable OS caches as used (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>swap_free</command>
                              </td>
                                <td>Free swap space (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>swap_page_in</command>
                              </td>
                                <td>Count of pages swapped in.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>swap_page_out</command>
                              </td>
                                <td>Count of pages swapped out.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>swap_total</command>
                              </td>
                                <td>Total swap space (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>swap_used</command>
                              </td>
                                <td>Used swap space (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>total</command>
                              </td>
                                <td>Total memory (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>used</command>
                              </td>
                                <td>Used memory which counts purgeable OS caches as used (in bytes).</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354038868450,
    "info": {
        "actual_free": 3117314048,
        "actual_used": 1451307008,
        "free": 2726739968,
        "ram": 4360,
        "swap_free": 926932992
        "swap_page_in": 926932992,
        "swap_page_out": 926932992,
        "swap_total": 926932992,
        "swap_used": 926932992,
        "total": 4568621056,
        "used": 1841881088
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/network_interaces"
                id="AgentHostInfoNetworkInterfaces">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoNetworkInterfaces">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get host network interface information">
               <para role="shortdesc"> Get information about the host network interfaces. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354038964857&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;interface&gt;
      &lt;name&gt;lo&lt;/name&gt;
      &lt;type&gt;Local Loopback&lt;/type&gt;
      &lt;address&gt;127.0.0.1&lt;/address&gt;
      &lt;netmask&gt;255.0.0.0&lt;/netmask&gt;
      &lt;address6&gt;::1&lt;/address6&gt;
      &lt;broadcast&gt;0.0.0.0&lt;/broadcast&gt;
      &lt;hwaddr&gt;00:00:00:00:00:00&lt;/hwaddr&gt;
      &lt;mtu&gt;16436&lt;/mtu&gt;
      &lt;rx_packets&gt;365761&lt;/rx_packets&gt;
      &lt;rx_bytes&gt;92988980&lt;/rx_bytes&gt;
      &lt;tx_packets&gt;365761&lt;/tx_packets&gt;
      &lt;tx_bytes&gt;92988980&lt;/tx_bytes&gt;
      &lt;flags&gt;73&lt;/flags&gt;
    &lt;/interface&gt;
    &lt;interface&gt;
      &lt;name&gt;eth0&lt;/name&gt;
      &lt;type&gt;Ethernet&lt;/type&gt;
      &lt;address&gt;192.168.95.128&lt;/address&gt;
      &lt;netmask&gt;255.255.255.0&lt;/netmask&gt;
      &lt;address6&gt;fe80::250:56ff:fe24:bbbb&lt;/address6&gt;
      &lt;broadcast&gt;192.168.95.255&lt;/broadcast&gt;
      &lt;hwaddr&gt;00:00:00:00:00:00&lt;/hwaddr&gt;
      &lt;mtu&gt;1500&lt;/mtu&gt;
      &lt;rx_packets&gt;13172&lt;/rx_packets&gt;
      &lt;rx_bytes&gt;1842916&lt;/rx_bytes&gt;
      &lt;tx_packets&gt;12110&lt;/tx_packets&gt;
      &lt;tx_bytes&gt;6289940&lt;/tx_bytes&gt;
      &lt;flags&gt;2115&lt;/flags&gt;
    &lt;/interface&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table describes the response body parameters.</para>
                    <informaltable rules="all" width="100%" version="5.0">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>flags</command>
                              </td>
                                <td>Operating system specific interface flags.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>name</command>
                              </td>
                                <td>Network interface name.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>address</command>
                              </td>
                                <td>IPv4 address as a string.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>destination</command>
                              </td>
                                <td>Route destination (to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>address6</command>
                              </td>
                                <td>IPv6 address as a string.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>broadcast</command>
                              </td>
                                <td>Broadcast address as a string.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>hwaddr</command>
                              </td>
                                <td>Ethernet address as a string.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>mtu</command>
                              </td>
                                <td>Ethernet maximum transmission unit.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>metric</command>
                              </td>
                                <td>(to be deleted)</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_errors</command>
                              </td>
                                <td>Total numnber of transmit errors.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_bytes</command>
                              </td>
                                <td>Total number of bytes received.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>netmask</command>
                              </td>
                                <td>Netmask as a string.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_overruns</command>
                              </td>
                                <td>Total number of transmit buffer overruns.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>speed</command>
                              </td>
                                <td>Currently not implemented on linux (to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_overruns</command>
                              </td>
                                <td>Total number of receive buffer overruns.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_dropped</command>
                              </td>
                                <td>Total number of dropped packets received.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_frame</command>
                              </td>
                                <td>Total number of errors caused by malformed frames.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_packets</command>
                              </td>
                                <td>Total number of packets received.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>rx_errors</command>
                              </td>
                                <td>Total number of receive errors caused by malformed frames.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_bytes</command>
                              </td>
                                <td>Total number of bytes sent.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_carrier</command>
                              </td>
                                <td>Total number of carrier errors (usually cable disconnects).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_collisions</command>
                              </td>
                                <td>Total number of packet collisions on transmit.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_dropped</command>
                              </td>
                                <td>Total number of dropped transmit packets.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>tx_packets</command>
                              </td>
                                <td>Total number of packets sent.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>type</command>
                              </td>
                                <td>Interface type (for example, Ethernet, Local Loopback, and so on).</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>

               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354038900510,
    "info": [
        {
            "name": "lo",
            "type": "Local Loopback",
            "address": "127.0.0.1",
            "netmask": "255.0.0.0",
            "address6": "::1",
            "broadcast": "0.0.0.0",
            "hwaddr": "00:00:00:00:00:00",
            "mtu": 16436,
            "rx_packets": 361762,
            "rx_bytes": 92488304,
            "tx_packets": 361762,
            "tx_bytes": 92488304,
            "flags": 73
        },
        {
            "name": "eth0",
            "type": "Ethernet",
            "address": "192.168.95.128",
            "netmask": "255.255.255.0",
            "address6": "fe80::250:56ff:fe24:bbbb",
            "broadcast": "192.168.95.255",
            "hwaddr": "00:00:00:00:00:00",
            "mtu": 1500,
            "rx_packets": 13142,
            "rx_bytes": 1838773,
            "tx_packets": 12087,
            "tx_bytes": 6282141,
            "flags": 2115
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/processes" id="AgentHostInfoProcesses">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoProcesses">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get host process information">
               <para role="shortdesc"> Get information about the host processes. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354040856776&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;process&gt;
      &lt;pid&gt;1&lt;/pid&gt;
      &lt;exe_name&gt;/sbin/init&lt;/exe_name&gt;
      &lt;exe_cwd&gt;/&lt;/exe_cwd&gt;
      &lt;exe_root&gt;/&lt;/exe_root&gt;
      &lt;time_total&gt;2080&lt;/time_total&gt;
      &lt;time_sys&gt;2010&lt;/time_sys&gt;
      &lt;time_user&gt;70&lt;/time_user&gt;
      &lt;time_start_time&gt;1354005304000&lt;/time_start_time&gt;
      &lt;state_name&gt;init&lt;/state_name&gt;
      &lt;state_priority&gt;20&lt;/state_priority&gt;
      &lt;state_threads&gt;1&lt;/state_threads&gt;
      &lt;memory_size&gt;24387584&lt;/memory_size&gt;
      &lt;memory_resident&gt;2088960&lt;/memory_resident&gt;
      &lt;memory_share&gt;1335296&lt;/memory_share&gt;
      &lt;memory_major_faults&gt;24&lt;/memory_major_faults&gt;
      &lt;memory_minor_faults&gt;7810&lt;/memory_minor_faults&gt;
      &lt;memory_page_faults&gt;7834&lt;/memory_page_faults&gt;
    &lt;/process&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table shows the response body parameters.</para>
                    <informaltable rules="all" width="100%">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>state_nice</command>
                              </td>
                                <td>Nice value set on the process. If nice is not set, the value will be null (higher numbers
                                    are lower priority).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>cred_group</command>
                              </td>
                                <td>Group of user who owns the process</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_threads</command>
                              </td>
                                <td>Number of threads the process owns.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_cwd</command>
                              </td>
                                <td>Current working directory of the process.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>cred_user</command>
                              </td>
                                <td>User who owns the process</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_resident</command>
                              </td>
                                <td>Total resident memory of the process (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>pid</command>
                              </td>
                                <td>Process ID.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_page_faults</command>
                              </td>
                                <td>Total number of faults.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_minor_faults</command>
                              </td>
                                <td>Total number of major page faults. Major faults generally involve disk latency.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_major_faults</command>
                              </td>
                                <td>Total number of minor page faults. Minor faults generally do not involve disk
                                    latency.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_share</command>
                              </td>
                                <td>Total resident memory that is shared with other processes (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_name</command>
                              </td>
                                <td>Path to the executable.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>exe_root</command>
                              </td>
                                <td>Root namespace of the process.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>memory_size</command>
                              </td>
                                <td>Total address space of the process (in bytes).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_name</command>
                              </td>
                                <td>Name of the executable.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_ppid</command>
                              </td>
                                <td>Parent process ID.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_priority</command>
                              </td>
                                <td>Priority of the process (higher numbers are lower priority).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_processor</command>
                              </td>
                                <td>CPU ID of the processor running the process (to be deleted).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>state_tty</command>
                              </td>
                                <td>(to be deleted)</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_start_time</command>
                              </td>
                                <td>Start time of the process (Epoch timestamp in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_sys</command>
                              </td>
                                <td>Total time executing system calls (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_total</command>
                              </td>
                                <td>Total time executing (in milliseconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time_user</command>
                              </td>
                                <td>Total time executing in user mode (in milliseconds).</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354040508264,
    "info": [
        {
            "pid": 1,
            "exe_name": "/sbin/init",
            "exe_cwd": "/",
            "exe_root": "/",
            "time_total": 2080,
            "time_sys": 2010,
            "time_user": 70,
            "time_start_time": 1354005304000,
            "state_name": "init",
            "state_priority": 20,
            "state_threads": 1,
            "memory_size": 24387584,
            "memory_resident": 2088960,
            "memory_share": 1335296,
            "memory_major_faults": 24,
            "memory_minor_faults": 7810,
            "memory_page_faults": 7834
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>

         </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/system" id="AgentHostInfoSystem">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoSystem">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get host system information">
               <para role="shortdesc"> Get system information for the host. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354039172582&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;system&gt;
      &lt;name&gt;Linux&lt;/name&gt;
      &lt;arch&gt;x86_64&lt;/arch&gt;
      &lt;version&gt;2.6.32-44-server&lt;/version&gt;
      &lt;vendor&gt;Ubuntu&lt;/vendor&gt;
      &lt;vendor_version&gt;10.04&lt;/vendor_version&gt;
    &lt;/system&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table shows the response body parameters.</para>
                    <informaltable rules="all" width="100%" version="5.0">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>arch</command>
                              </td>
                                <td>CPU Architecture.</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>description</command>
                              </td>
                                <td>Long form description (for example, Debian 6.0.6, Microsoft Windows XP). (to be
                                    deleted)</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>name</command>
                              </td>
                                <td>Generic name of the Operating System (for example, Linux, MacOSX, Win32, FreeBSD, and so
                                    on).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>vendor</command>
                              </td>
                                <td>Vendor name (for example, Microsoft, Debian).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>vendor_code_name</command>
                              </td>
                                <td>(to be deleted)</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>vendor_version</command>
                              </td>
                                <td>Vendor version name (for example, 6.0.6, XP).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>version</command>
                              </td>
                                <td>Version (for example, 2.6.32-5-xen-amd64, 2600.xpsp_sp3_gdr).</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>
               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354039150948,
    "info": {
        "name": "Linux",
        "arch": "x86_64",
        "version": "2.6.32-44-server",
        "vendor": "Ubuntu",
        "vendor_version": "10.04"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                
            <resource path="agents/{agentId}/host_info/who" id="AgentHostInfoWho">
         <param name="X-Auth-Token"
                style="header"
                type="xsd:string"
                required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para>A valid authentication token with administrative access. </para>
                </wadl:doc>
            </param>
         <param name="agentId" style="template" required="true">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The id for the agent that you want to
                        lookup. Use the List agents operation to find the <code>agnetId</code> if you don't know it.</para>
                </wadl:doc>
            </param>
         <method name="GET" rax:id="GetAgentHostInfoWho">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get information about host users">
               <para role="shortdesc"> Get information on users who are logged into the host. </para>
            </wadl:doc>
            <response status="200">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK">
                  <para>The request completed.</para>
               </wadl:doc>
               <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;agent_host_info&gt;
  &lt;timestamp&gt;1354124700977&lt;/timestamp&gt;
  &lt;info&gt;
    &lt;user&gt;
      &lt;user&gt;testuser&lt;/user&gt;
      &lt;device&gt;tty1&lt;/device&gt;
      &lt;time&gt;1353953846&lt;/time&gt;
    &lt;/user&gt;
    &lt;user&gt;
      &lt;user&gt;testuser&lt;/user&gt;
      &lt;device&gt;pts/2&lt;/device&gt;
      &lt;time&gt;1354117532&lt;/time&gt;
      &lt;host&gt;192.168.95.1&lt;/host&gt;
    &lt;/user&gt;
    &lt;user&gt;
      &lt;user&gt;testuser&lt;/user&gt;
      &lt;device&gt;pts/3&lt;/device&gt;
      &lt;time&gt;1354124463&lt;/time&gt;
      &lt;host&gt;comp8dv7m.local&lt;/host&gt;
    &lt;/user&gt;
    &lt;user&gt;
      &lt;user&gt;testuser&lt;/user&gt;
      &lt;device&gt;pts/4&lt;/device&gt;
      &lt;time&gt;1354124661&lt;/time&gt;
      &lt;host&gt;comp8dv7m.local&lt;/host&gt;
    &lt;/user&gt;
  &lt;/info&gt;
&lt;/agent_host_info&gt;
</programlisting>
                     </xsdxt:code>
                    <para>The following table describes the response body parameters.</para>
                    <informaltable rules="all" width="100%" version="5.0">
                        <thead>
                            <tr>
                              <td>Name</td>
                              <td>Description</td>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                                <td>
                                 <command>device</command>
                              </td>
                                <td>Device they are attached to (for example, pts/1).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>host</command>
                              </td>
                                <td>Originating host of the login (for example, 127.0.0.1).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>time</command>
                              </td>
                                <td>Login time as a unix timestamp (in seconds).</td>
                            </tr>
                            <tr>
                                <td>
                                 <command>user</command>
                              </td>
                                <td>Username as a string.</td>
                            </tr>
                        </tbody>
                    </informaltable>
                  </wadl:doc>

               </representation>
               <representation mediaType="application/json" xml:lang="EN" element="csapi">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook">
                    <xsdxt:code>
                        <programlisting language="javascript">{
    "timestamp": 1354124700975,
    "info": [
        {
            "user": "testuser",
            "device": "tty1",
            "time": 1353953846
        },
        {
            "user": "testuser",
            "device": "pts/2",
            "time": 1354117532,
            "host": "192.168.95.1"
        },
        {
            "user": "testuser",
            "device": "pts/3",
            "time": 1354124463,
            "host": "comp8dv7m.local"
        },
        {
            "user": "testuser",
            "device": "pts/4",
            "time": 1354124661,
            "host": "comp8dv7m.local"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                
            


    </resources>

    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

    <!-- Account methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listAccount">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="id" style="plain" type="string" required="true">
                    
                </param>
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
                <param name="webhook_token"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="updateAccount">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
                <param name="webhook_token"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="204"/>
        <response status="500"/>
    </method>

    <!-- Limits -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listLimits">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>

    <!-- Audits -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listAudits">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Entities methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createEntity">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="label"
                   type="xsd:string"
                   style="plain"
                   path="label"
                   required="true">
                    
                </param>
                <param name="ip_addresses"
                   type="xsd:string"
                   style="plain"
                   required="false">
                    
                </param>
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="201"/>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listEntities">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getEntityId">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateEntity">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <!-- Entities request body parameters -->
                <param name="id" style="plain" type="string" required="true">
                    
                </param>
                <param name="label"
                   type="xsd:string"
                   style="plain"
                   path="label"
                   required="true">
                    
                </param>
                <param name="agent_id"
                   type="xsd:string"
                   style="plain"
                   required="false">
                    
                </param>
                <param name="ip_addresses"
                   type="xsd:string"
                   style="plain"
                   required="false">
                    
                </param>
                <param name="metadata"
                   type="xsd:string"
                   style="plain"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteEntity">
        
        <response status="204"/>

        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Checks methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createCheck">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="201">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="checkTestNew">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="checkExistingTest">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listChecks">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getCheck">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateCheck">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteCheck">
        
        <response status="204"/>

        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Check Type methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createCheckType">
        
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listCheckTypes">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getCheckTypeId">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateCheckType">
        
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteCheckType">
        
    </method>

    <!-- Metrics methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listMetricsbyCheckId">
        
        <response status="200">
            
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="fetchDataPoints">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="numPoints"
                   style="plain"
                   type="xsd:string"
                   required="true">
                    
                </param>
                <param name="average" style="plain" type="integer" required="true">
                    
                </param>
                <param name="timestamp"
                   style="plain"
                   type="xsd:string"
                   required="true">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Alarm methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createAlarm">
        
        <response status="201">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="id" style="header" type="URI">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listAlarms">
        
        <response status="200">
            
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="alarmsTest">
        

        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAlarmId">
        
        <response status="200">
            
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateAlarm">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="label" style="plain" type="string" required="true">
                    
                </param>
                <param name="critical_state"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
                <param name="ok_state" style="plain" type="string" required="false">
                    
                </param>
                <param name="warning_state"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="204"/>

    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteAlarm">
        
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Notification plan methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createNotifyPlan">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="label" style="plain" type="string" required="true">
                    
                </param>
                <param name="critical_state"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
                <param name="ok_state" style="plain" type="string" required="false">
                    
                </param>
                <param name="warning_state"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>

        <response status="201">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listNotifyPlan">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getNotifyPlan">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateNotifyPlan">
        
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteNotifyPlan">
        
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Monitoring zone methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listMonitorZone">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getMonitorZone">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="tracerouteMonitorZone">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="target" style="plain" type="string" required="true">
                    
                </param>
                <param name="target_resolver"
                   style="plain"
                   type="string"
                   required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>

    <!-- Alarm notification history resources -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="discoverNotifyHistory">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listAlarmNotificationHistory">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAlarmNotifyHistory">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Notifications methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createNotification">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="201">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listNotifications">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="TestNotification">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="TestNotificationId">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getNotification">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateNotification">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="204"/>
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteNotification">
        
        <response status="204"/>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Notification Types methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createNotificationType">
        
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listNotificationTypes">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getNotificationType">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateNotificationType">
        
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteNotificationType">
        
        <response status="204"/>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Changelog methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getchangelogAlarms">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Views methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getviewOvw">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Alarm example methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAlarmExamples">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAlarmExampleId">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="evaluateAlarmExampleId">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Suppressions methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createSuppression">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="201">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="id" style="header" type="URI">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>

        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listSuppressions">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getSuppressionId">
        

        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateSuppression">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteSuppression">
        
        <response status="204"/>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Suppresion logs method -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getSuppressionLog">
        
        <response status="200">
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Agent target method -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgentTarget">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Agent methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgents">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgentId">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgentConnections">
        

        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="id" style="plain" required="true">
                    
                </param>
                <param name="guid" style="plain" required="true">
                    
                </param>
                <param name="agent_id" style="plain" required="true">
                    
                </param>
                <param name="datacenter" style="plain" required="true">
                    
                </param>
                <param name="process_version" style="plain" required="true">
                    
                </param>
                <param name="bundle_version" style="plain">
                    
                </param>
                <param name="agent_ip" style="plain">
                    
                </param>
                <param name="agent_port" style="plain">
                    
                </param>
                <param name="metadata" style="plain" type="string" required="false">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgentConnection">
        
        <response status="200">
            
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Agent token methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="createAgentToken">
        
        <request>
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="label" style="plain" type="string" required="true">
                    
                </param>

            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </request>
        <response status="201">
            
        </response>

        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listAgentTokens">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="getAgentTokenId">
        

        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="updateAgentToken">
        
        <response status="204">
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="deleteAgentToken">
        
        <response status="204"/>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>

    <!-- Agent Host Info methods -->
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoCPUs">
        
        <response status="200">
            


            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
                <param name="stolen" style="plain" required="false" path="$.stolen">
                    
                </param>
                <param name="cores_per_socket"
                   style="plain"
                   required="false"
                   path="$.cores_per_socket">
                    
                </param>
                <param name="cache_size"
                   style="plain"
                   required="false"
                   path="$.cache_size">
                    
                </param>
                <param name="user" style="plain" required="false" path="$.user">
                    
                </param>
                <param name="mhz" style="plain" required="false" path="$.mhz">
                    
                </param>
                <param name="irq" style="plain" required="false" path="$.irq">
                    
                </param>
                <param name="idle" style="plain" required="false" path="$.idle">
                    
                </param>
                <param name="model" style="plain" required="false" path="$.model">
                    
                </param>
                <param name="name" style="plain" required="false" path="$.name">
                    
                </param>
                <param name="nice" style="plain" path="$.nice">
                    
                </param>
                <param name="soft_irq"
                   style="plain"
                   required="false"
                   path="$.soft_irq">
                    
                </param>
                <param name="sys" style="plain" path="$.sys">
                    
                </param>
                <param name="total" style="plain" required="false" path="$.total">
                    
                </param>
                <param name="total_cores"
                   style="plain"
                   required="false"
                   path="$.total_cores">
                    
                </param>
                <param name="total_sockets"
                   style="plain"
                   required="false"
                   path="$.total_sockets">
                    
                </param>
                <param name="vendor" style="plain" required="false" path="$.vendor">
                    
                </param>
                <param name="wait" style="plain" required="false" path="$.wait">
                    
                </param>
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoDisks">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
        <!-- Common Faults --> 
     
      <response xml:lang="EN">
            <representation mediaType="application/xml" element="Fault"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="400">
            
            <representation mediaType="application/xml" element="badRequest"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="401">
        
            <representation mediaType="application/xml" element="unauthorizedError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="403">
           
            <representation mediaType="application/xml" element="forbiddenError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="413">
            
            <representation mediaType="application/xml" element="requestTooLargeError"/>
            <representation mediaType="application/json"/>
        </response>
        <response status="503">
            
            <representation mediaType="application/xml" element="identity:systemFailureError"/>
            <representation mediaType="application/json"/>
        </response>
            </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfofilesystems">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoMemory">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoNetworkInterfaces">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                

            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoProcesses">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>

    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoSystem">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                
            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>
    <method xmlns:identity="http://docs.openstack.org/identity/api/v2.0"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:csapi="http://docs.openstack.org/compute/api/v2"
           xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
           xmlns:osapi="http://docs.openstack.org/compute/api/v1.1"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="GetAgentHostInfoWho">
        
        <response status="200">
            
            <representation mediaType="application/xml" xml:lang="EN" element="csapi">
                

            </representation>
            <representation mediaType="application/json" xml:lang="EN" element="csapi">
                
            </representation>
        </response>
    </method>

</wadl:application>
